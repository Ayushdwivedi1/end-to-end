{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let UserService = /*#__PURE__*/(() => {\n  class UserService {\n    constructor(http) {\n      this.http = http;\n      this.apiUrl = 'http://localhost:8080/api';\n    }\n    // Get all users\n    getAllUsers() {\n      return this.http.get(`${this.apiUrl}/users`);\n    }\n    // Get active users\n    getActiveUsers() {\n      return this.http.get(`${this.apiUrl}/users/active`);\n    }\n    // Get user by ID\n    getUserById(id) {\n      return this.http.get(`${this.apiUrl}/users/${id}`);\n    }\n    // Get user by email\n    getUserByEmail(email) {\n      return this.http.get(`${this.apiUrl}/users/email/${email}`);\n    }\n    // Search users by name\n    searchUsersByName(name) {\n      return this.http.get(`${this.apiUrl}/users/search?name=${name}`);\n    }\n    // Create user\n    createUser(user) {\n      return this.http.post(`${this.apiUrl}/users`, user);\n    }\n    // Update user\n    updateUser(id, userUpdate) {\n      return this.http.put(`${this.apiUrl}/users/${id}`, userUpdate);\n    }\n    // Delete user\n    deleteUser(id) {\n      return this.http.delete(`${this.apiUrl}/users/${id}`);\n    }\n    // Deactivate user\n    deactivateUser(id) {\n      return this.http.patch(`${this.apiUrl}/users/${id}/deactivate`, {});\n    }\n    // Activate user\n    activateUser(id) {\n      return this.http.patch(`${this.apiUrl}/users/${id}/activate`, {});\n    }\n    // Test endpoint\n    test() {\n      return this.http.get(`${this.apiUrl}/test`, {\n        responseType: 'text'\n      });\n    }\n    static {\n      this.ɵfac = function UserService_Factory(t) {\n        return new (t || UserService)(i0.ɵɵinject(i1.HttpClient));\n      };\n    }\n    static {\n      this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n        token: UserService,\n        factory: UserService.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return UserService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}