{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../../services/auth.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nfunction RegisterComponent_div_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 30);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.getErrorMessage(\"username\"), \" \");\n  }\n}\nfunction RegisterComponent_div_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 30);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.getErrorMessage(\"email\"), \" \");\n  }\n}\nfunction RegisterComponent_div_25_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 30);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r2.getErrorMessage(\"firstName\"), \" \");\n  }\n}\nfunction RegisterComponent_div_30_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 30);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r3.getErrorMessage(\"lastName\"), \" \");\n  }\n}\nfunction RegisterComponent_div_36_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 30);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r4.getErrorMessage(\"password\"), \" \");\n  }\n}\nfunction RegisterComponent_div_41_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 30);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r5.getErrorMessage(\"confirmPassword\"), \" \");\n  }\n}\nfunction RegisterComponent_div_42_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 31);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r6.errorMessage, \" \");\n  }\n}\nfunction RegisterComponent_div_43_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 32);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r7 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r7.successMessage, \" \");\n  }\n}\nfunction RegisterComponent_span_46_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 33);\n  }\n}\nexport class RegisterComponent {\n  constructor(fb, authService, router) {\n    this.fb = fb;\n    this.authService = authService;\n    this.router = router;\n    this.loading = false;\n    this.errorMessage = '';\n    this.successMessage = '';\n    this.registerForm = this.fb.group({\n      username: ['', [Validators.required, Validators.minLength(3), Validators.maxLength(50)]],\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required, Validators.minLength(6)]],\n      confirmPassword: ['', [Validators.required]],\n      firstName: ['', [Validators.maxLength(50)]],\n      lastName: ['', [Validators.maxLength(50)]]\n    }, {\n      validators: this.passwordMatchValidator\n    });\n  }\n  passwordMatchValidator(form) {\n    const password = form.get('password');\n    const confirmPassword = form.get('confirmPassword');\n    if (password && confirmPassword && password.value !== confirmPassword.value) {\n      confirmPassword.setErrors({\n        passwordMismatch: true\n      });\n      return {\n        passwordMismatch: true\n      };\n    }\n    if (confirmPassword?.errors?.['passwordMismatch']) {\n      delete confirmPassword.errors['passwordMismatch'];\n      if (Object.keys(confirmPassword.errors).length === 0) {\n        confirmPassword.setErrors(null);\n      }\n    }\n    return null;\n  }\n  onSubmit() {\n    if (this.registerForm.valid) {\n      this.loading = true;\n      this.errorMessage = '';\n      this.successMessage = '';\n      this.authService.register(this.registerForm.value).subscribe({\n        next: response => {\n          if (response.success) {\n            this.successMessage = 'Registration successful! Please login.';\n            setTimeout(() => {\n              this.router.navigate(['/login']);\n            }, 2000);\n          } else {\n            this.errorMessage = response.message;\n          }\n          this.loading = false;\n        },\n        error: error => {\n          this.errorMessage = error.error?.message || 'Registration failed. Please try again.';\n          this.loading = false;\n        }\n      });\n    }\n  }\n  getErrorMessage(field) {\n    const control = this.registerForm.get(field);\n    if (control?.hasError('required')) {\n      return `${field.charAt(0).toUpperCase() + field.slice(1)} is required`;\n    }\n    if (control?.hasError('email')) {\n      return 'Please enter a valid email address';\n    }\n    if (control?.hasError('minlength')) {\n      const minLength = control.errors?.['minlength']?.requiredLength;\n      return `${field.charAt(0).toUpperCase() + field.slice(1)} must be at least ${minLength} characters`;\n    }\n    if (control?.hasError('maxlength')) {\n      const maxLength = control.errors?.['maxlength']?.requiredLength;\n      return `${field.charAt(0).toUpperCase() + field.slice(1)} cannot exceed ${maxLength} characters`;\n    }\n    if (control?.hasError('passwordMismatch')) {\n      return 'Passwords do not match';\n    }\n    return '';\n  }\n  static {\n    this.ɵfac = function RegisterComponent_Factory(t) {\n      return new (t || RegisterComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.AuthService), i0.ɵɵdirectiveInject(i3.Router));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: RegisterComponent,\n      selectors: [[\"app-register\"]],\n      decls: 51,\n      vars: 24,\n      consts: [[1, \"container\", \"mt-5\"], [1, \"row\", \"justify-content-center\"], [1, \"col-md-8\", \"col-lg-6\"], [1, \"card\", \"shadow\"], [1, \"card-header\", \"bg-success\", \"text-white\", \"text-center\"], [1, \"mb-0\"], [1, \"card-body\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"row\"], [1, \"col-md-6\", \"mb-3\"], [\"for\", \"username\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"username\", \"formControlName\", \"username\", \"placeholder\", \"Enter username\", 1, \"form-control\"], [\"class\", \"invalid-feedback\", 4, \"ngIf\"], [\"for\", \"email\", 1, \"form-label\"], [\"type\", \"email\", \"id\", \"email\", \"formControlName\", \"email\", \"placeholder\", \"Enter email\", 1, \"form-control\"], [\"for\", \"firstName\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"firstName\", \"formControlName\", \"firstName\", \"placeholder\", \"Enter first name\", 1, \"form-control\"], [\"for\", \"lastName\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"lastName\", \"formControlName\", \"lastName\", \"placeholder\", \"Enter last name\", 1, \"form-control\"], [\"for\", \"password\", 1, \"form-label\"], [\"type\", \"password\", \"id\", \"password\", \"formControlName\", \"password\", \"placeholder\", \"Enter password\", 1, \"form-control\"], [\"for\", \"confirmPassword\", 1, \"form-label\"], [\"type\", \"password\", \"id\", \"confirmPassword\", \"formControlName\", \"confirmPassword\", \"placeholder\", \"Confirm password\", 1, \"form-control\"], [\"class\", \"alert alert-danger\", 4, \"ngIf\"], [\"class\", \"alert alert-success\", 4, \"ngIf\"], [1, \"d-grid\"], [\"type\", \"submit\", 1, \"btn\", \"btn-success\", 3, \"disabled\"], [\"class\", \"spinner-border spinner-border-sm me-2\", 4, \"ngIf\"], [1, \"mt-3\", \"text-center\"], [\"routerLink\", \"/login\", 1, \"text-decoration-none\"], [1, \"invalid-feedback\"], [1, \"alert\", \"alert-danger\"], [1, \"alert\", \"alert-success\"], [1, \"spinner-border\", \"spinner-border-sm\", \"me-2\"]],\n      template: function RegisterComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"div\", 4)(5, \"h4\", 5);\n          i0.ɵɵtext(6, \"Register\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(7, \"div\", 6)(8, \"form\", 7);\n          i0.ɵɵlistener(\"ngSubmit\", function RegisterComponent_Template_form_ngSubmit_8_listener() {\n            return ctx.onSubmit();\n          });\n          i0.ɵɵelementStart(9, \"div\", 8)(10, \"div\", 9)(11, \"label\", 10);\n          i0.ɵɵtext(12, \"Username *\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(13, \"input\", 11);\n          i0.ɵɵtemplate(14, RegisterComponent_div_14_Template, 2, 1, \"div\", 12);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(15, \"div\", 9)(16, \"label\", 13);\n          i0.ɵɵtext(17, \"Email *\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(18, \"input\", 14);\n          i0.ɵɵtemplate(19, RegisterComponent_div_19_Template, 2, 1, \"div\", 12);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(20, \"div\", 8)(21, \"div\", 9)(22, \"label\", 15);\n          i0.ɵɵtext(23, \"First Name\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(24, \"input\", 16);\n          i0.ɵɵtemplate(25, RegisterComponent_div_25_Template, 2, 1, \"div\", 12);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(26, \"div\", 9)(27, \"label\", 17);\n          i0.ɵɵtext(28, \"Last Name\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(29, \"input\", 18);\n          i0.ɵɵtemplate(30, RegisterComponent_div_30_Template, 2, 1, \"div\", 12);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(31, \"div\", 8)(32, \"div\", 9)(33, \"label\", 19);\n          i0.ɵɵtext(34, \"Password *\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(35, \"input\", 20);\n          i0.ɵɵtemplate(36, RegisterComponent_div_36_Template, 2, 1, \"div\", 12);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(37, \"div\", 9)(38, \"label\", 21);\n          i0.ɵɵtext(39, \"Confirm Password *\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(40, \"input\", 22);\n          i0.ɵɵtemplate(41, RegisterComponent_div_41_Template, 2, 1, \"div\", 12);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵtemplate(42, RegisterComponent_div_42_Template, 2, 1, \"div\", 23);\n          i0.ɵɵtemplate(43, RegisterComponent_div_43_Template, 2, 1, \"div\", 24);\n          i0.ɵɵelementStart(44, \"div\", 25)(45, \"button\", 26);\n          i0.ɵɵtemplate(46, RegisterComponent_span_46_Template, 1, 0, \"span\", 27);\n          i0.ɵɵtext(47);\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(48, \"div\", 28)(49, \"a\", 29);\n          i0.ɵɵtext(50, \"Already have an account? Login\");\n          i0.ɵɵelementEnd()()()()()()();\n        }\n        if (rf & 2) {\n          let tmp_1_0;\n          let tmp_2_0;\n          let tmp_3_0;\n          let tmp_4_0;\n          let tmp_5_0;\n          let tmp_6_0;\n          let tmp_7_0;\n          let tmp_8_0;\n          let tmp_9_0;\n          let tmp_10_0;\n          let tmp_11_0;\n          let tmp_12_0;\n          i0.ɵɵadvance(8);\n          i0.ɵɵproperty(\"formGroup\", ctx.registerForm);\n          i0.ɵɵadvance(5);\n          i0.ɵɵclassProp(\"is-invalid\", ((tmp_1_0 = ctx.registerForm.get(\"username\")) == null ? null : tmp_1_0.invalid) && ((tmp_1_0 = ctx.registerForm.get(\"username\")) == null ? null : tmp_1_0.touched));\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ((tmp_2_0 = ctx.registerForm.get(\"username\")) == null ? null : tmp_2_0.invalid) && ((tmp_2_0 = ctx.registerForm.get(\"username\")) == null ? null : tmp_2_0.touched));\n          i0.ɵɵadvance(4);\n          i0.ɵɵclassProp(\"is-invalid\", ((tmp_3_0 = ctx.registerForm.get(\"email\")) == null ? null : tmp_3_0.invalid) && ((tmp_3_0 = ctx.registerForm.get(\"email\")) == null ? null : tmp_3_0.touched));\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ((tmp_4_0 = ctx.registerForm.get(\"email\")) == null ? null : tmp_4_0.invalid) && ((tmp_4_0 = ctx.registerForm.get(\"email\")) == null ? null : tmp_4_0.touched));\n          i0.ɵɵadvance(5);\n          i0.ɵɵclassProp(\"is-invalid\", ((tmp_5_0 = ctx.registerForm.get(\"firstName\")) == null ? null : tmp_5_0.invalid) && ((tmp_5_0 = ctx.registerForm.get(\"firstName\")) == null ? null : tmp_5_0.touched));\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ((tmp_6_0 = ctx.registerForm.get(\"firstName\")) == null ? null : tmp_6_0.invalid) && ((tmp_6_0 = ctx.registerForm.get(\"firstName\")) == null ? null : tmp_6_0.touched));\n          i0.ɵɵadvance(4);\n          i0.ɵɵclassProp(\"is-invalid\", ((tmp_7_0 = ctx.registerForm.get(\"lastName\")) == null ? null : tmp_7_0.invalid) && ((tmp_7_0 = ctx.registerForm.get(\"lastName\")) == null ? null : tmp_7_0.touched));\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ((tmp_8_0 = ctx.registerForm.get(\"lastName\")) == null ? null : tmp_8_0.invalid) && ((tmp_8_0 = ctx.registerForm.get(\"lastName\")) == null ? null : tmp_8_0.touched));\n          i0.ɵɵadvance(5);\n          i0.ɵɵclassProp(\"is-invalid\", ((tmp_9_0 = ctx.registerForm.get(\"password\")) == null ? null : tmp_9_0.invalid) && ((tmp_9_0 = ctx.registerForm.get(\"password\")) == null ? null : tmp_9_0.touched));\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ((tmp_10_0 = ctx.registerForm.get(\"password\")) == null ? null : tmp_10_0.invalid) && ((tmp_10_0 = ctx.registerForm.get(\"password\")) == null ? null : tmp_10_0.touched));\n          i0.ɵɵadvance(4);\n          i0.ɵɵclassProp(\"is-invalid\", ((tmp_11_0 = ctx.registerForm.get(\"confirmPassword\")) == null ? null : tmp_11_0.invalid) && ((tmp_11_0 = ctx.registerForm.get(\"confirmPassword\")) == null ? null : tmp_11_0.touched));\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ((tmp_12_0 = ctx.registerForm.get(\"confirmPassword\")) == null ? null : tmp_12_0.invalid) && ((tmp_12_0 = ctx.registerForm.get(\"confirmPassword\")) == null ? null : tmp_12_0.touched));\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.errorMessage);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.successMessage);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"disabled\", ctx.registerForm.invalid || ctx.loading);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.loading);\n          i0.ɵɵadvance(1);\n          i0.ɵɵtextInterpolate1(\" \", ctx.loading ? \"Registering...\" : \"Register\", \" \");\n        }\n      },\n      dependencies: [i4.NgIf, i3.RouterLink, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n      styles: [\".card[_ngcontent-%COMP%] {\\n  border-radius: 15px;\\n}\\n\\n.card-header[_ngcontent-%COMP%] {\\n  border-radius: 15px 15px 0 0 !important;\\n}\\n\\n.form-control[_ngcontent-%COMP%] {\\n  border-radius: 8px;\\n}\\n\\n.btn[_ngcontent-%COMP%] {\\n  border-radius: 8px;\\n  font-weight: 500;\\n}\\n\\n.alert[_ngcontent-%COMP%] {\\n  border-radius: 8px;\\n}\\n\\na[_ngcontent-%COMP%] {\\n  color: #28a745;\\n  transition: color 0.3s ease;\\n}\\n\\na[_ngcontent-%COMP%]:hover {\\n  color: #1e7e34;\\n} \\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9yZWdpc3Rlci9yZWdpc3Rlci5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsbUJBQW1CO0FBQ3JCOztBQUVBO0VBQ0UsdUNBQXVDO0FBQ3pDOztBQUVBO0VBQ0Usa0JBQWtCO0FBQ3BCOztBQUVBO0VBQ0Usa0JBQWtCO0VBQ2xCLGdCQUFnQjtBQUNsQjs7QUFFQTtFQUNFLGtCQUFrQjtBQUNwQjs7QUFFQTtFQUNFLGNBQWM7RUFDZCwyQkFBMkI7QUFDN0I7O0FBRUE7RUFDRSxjQUFjO0FBQ2hCIiwic291cmNlc0NvbnRlbnQiOlsiLmNhcmQge1xuICBib3JkZXItcmFkaXVzOiAxNXB4O1xufVxuXG4uY2FyZC1oZWFkZXIge1xuICBib3JkZXItcmFkaXVzOiAxNXB4IDE1cHggMCAwICFpbXBvcnRhbnQ7XG59XG5cbi5mb3JtLWNvbnRyb2wge1xuICBib3JkZXItcmFkaXVzOiA4cHg7XG59XG5cbi5idG4ge1xuICBib3JkZXItcmFkaXVzOiA4cHg7XG4gIGZvbnQtd2VpZ2h0OiA1MDA7XG59XG5cbi5hbGVydCB7XG4gIGJvcmRlci1yYWRpdXM6IDhweDtcbn1cblxuYSB7XG4gIGNvbG9yOiAjMjhhNzQ1O1xuICB0cmFuc2l0aW9uOiBjb2xvciAwLjNzIGVhc2U7XG59XG5cbmE6aG92ZXIge1xuICBjb2xvcjogIzFlN2UzNDtcbn0gIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n}","map":{"version":3,"names":["Validators","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1","ctx_r0","getErrorMessage","ctx_r1","ctx_r2","ctx_r3","ctx_r4","ctx_r5","ctx_r6","errorMessage","ctx_r7","successMessage","ɵɵelement","RegisterComponent","constructor","fb","authService","router","loading","registerForm","group","username","required","minLength","maxLength","email","password","confirmPassword","firstName","lastName","validators","passwordMatchValidator","form","get","value","setErrors","passwordMismatch","errors","Object","keys","length","onSubmit","valid","register","subscribe","next","response","success","setTimeout","navigate","message","error","field","control","hasError","charAt","toUpperCase","slice","requiredLength","ɵɵdirectiveInject","i1","FormBuilder","i2","AuthService","i3","Router","selectors","decls","vars","consts","template","RegisterComponent_Template","rf","ctx","ɵɵlistener","RegisterComponent_Template_form_ngSubmit_8_listener","ɵɵtemplate","RegisterComponent_div_14_Template","RegisterComponent_div_19_Template","RegisterComponent_div_25_Template","RegisterComponent_div_30_Template","RegisterComponent_div_36_Template","RegisterComponent_div_41_Template","RegisterComponent_div_42_Template","RegisterComponent_div_43_Template","RegisterComponent_span_46_Template","ɵɵproperty","ɵɵclassProp","tmp_1_0","invalid","touched","tmp_2_0","tmp_3_0","tmp_4_0","tmp_5_0","tmp_6_0","tmp_7_0","tmp_8_0","tmp_9_0","tmp_10_0","tmp_11_0","tmp_12_0"],"sources":["/Users/ent-00387/Documents/end-to-end/Ui/src/app/components/register/register.component.ts","/Users/ent-00387/Documents/end-to-end/Ui/src/app/components/register/register.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../../services/auth.service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent {\n  registerForm: FormGroup;\n  loading = false;\n  errorMessage = '';\n  successMessage = '';\n\n  constructor(\n    private fb: FormBuilder,\n    private authService: AuthService,\n    private router: Router\n  ) {\n    this.registerForm = this.fb.group({\n      username: ['', [Validators.required, Validators.minLength(3), Validators.maxLength(50)]],\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required, Validators.minLength(6)]],\n      confirmPassword: ['', [Validators.required]],\n      firstName: ['', [Validators.maxLength(50)]],\n      lastName: ['', [Validators.maxLength(50)]]\n    }, { validators: this.passwordMatchValidator });\n  }\n\n  passwordMatchValidator(form: FormGroup) {\n    const password = form.get('password');\n    const confirmPassword = form.get('confirmPassword');\n    \n    if (password && confirmPassword && password.value !== confirmPassword.value) {\n      confirmPassword.setErrors({ passwordMismatch: true });\n      return { passwordMismatch: true };\n    }\n    \n    if (confirmPassword?.errors?.['passwordMismatch']) {\n      delete confirmPassword.errors['passwordMismatch'];\n      if (Object.keys(confirmPassword.errors).length === 0) {\n        confirmPassword.setErrors(null);\n      }\n    }\n    \n    return null;\n  }\n\n  onSubmit(): void {\n    if (this.registerForm.valid) {\n      this.loading = true;\n      this.errorMessage = '';\n      this.successMessage = '';\n\n      this.authService.register(this.registerForm.value).subscribe({\n        next: (response) => {\n          if (response.success) {\n            this.successMessage = 'Registration successful! Please login.';\n            setTimeout(() => {\n              this.router.navigate(['/login']);\n            }, 2000);\n          } else {\n            this.errorMessage = response.message;\n          }\n          this.loading = false;\n        },\n        error: (error) => {\n          this.errorMessage = error.error?.message || 'Registration failed. Please try again.';\n          this.loading = false;\n        }\n      });\n    }\n  }\n\n  getErrorMessage(field: string): string {\n    const control = this.registerForm.get(field);\n    if (control?.hasError('required')) {\n      return `${field.charAt(0).toUpperCase() + field.slice(1)} is required`;\n    }\n    if (control?.hasError('email')) {\n      return 'Please enter a valid email address';\n    }\n    if (control?.hasError('minlength')) {\n      const minLength = control.errors?.['minlength']?.requiredLength;\n      return `${field.charAt(0).toUpperCase() + field.slice(1)} must be at least ${minLength} characters`;\n    }\n    if (control?.hasError('maxlength')) {\n      const maxLength = control.errors?.['maxlength']?.requiredLength;\n      return `${field.charAt(0).toUpperCase() + field.slice(1)} cannot exceed ${maxLength} characters`;\n    }\n    if (control?.hasError('passwordMismatch')) {\n      return 'Passwords do not match';\n    }\n    return '';\n  }\n} ","<div class=\"container mt-5\">\n  <div class=\"row justify-content-center\">\n    <div class=\"col-md-8 col-lg-6\">\n      <div class=\"card shadow\">\n        <div class=\"card-header bg-success text-white text-center\">\n          <h4 class=\"mb-0\">Register</h4>\n        </div>\n        <div class=\"card-body\">\n          <form [formGroup]=\"registerForm\" (ngSubmit)=\"onSubmit()\">\n            \n            <div class=\"row\">\n              <!-- Username -->\n              <div class=\"col-md-6 mb-3\">\n                <label for=\"username\" class=\"form-label\">Username *</label>\n                <input \n                  type=\"text\" \n                  class=\"form-control\" \n                  id=\"username\"\n                  formControlName=\"username\"\n                  [class.is-invalid]=\"registerForm.get('username')?.invalid && registerForm.get('username')?.touched\"\n                  placeholder=\"Enter username\">\n                <div class=\"invalid-feedback\" *ngIf=\"registerForm.get('username')?.invalid && registerForm.get('username')?.touched\">\n                  {{ getErrorMessage('username') }}\n                </div>\n              </div>\n\n              <!-- Email -->\n              <div class=\"col-md-6 mb-3\">\n                <label for=\"email\" class=\"form-label\">Email *</label>\n                <input \n                  type=\"email\" \n                  class=\"form-control\" \n                  id=\"email\"\n                  formControlName=\"email\"\n                  [class.is-invalid]=\"registerForm.get('email')?.invalid && registerForm.get('email')?.touched\"\n                  placeholder=\"Enter email\">\n                <div class=\"invalid-feedback\" *ngIf=\"registerForm.get('email')?.invalid && registerForm.get('email')?.touched\">\n                  {{ getErrorMessage('email') }}\n                </div>\n              </div>\n            </div>\n\n            <div class=\"row\">\n              <!-- First Name -->\n              <div class=\"col-md-6 mb-3\">\n                <label for=\"firstName\" class=\"form-label\">First Name</label>\n                <input \n                  type=\"text\" \n                  class=\"form-control\" \n                  id=\"firstName\"\n                  formControlName=\"firstName\"\n                  [class.is-invalid]=\"registerForm.get('firstName')?.invalid && registerForm.get('firstName')?.touched\"\n                  placeholder=\"Enter first name\">\n                <div class=\"invalid-feedback\" *ngIf=\"registerForm.get('firstName')?.invalid && registerForm.get('firstName')?.touched\">\n                  {{ getErrorMessage('firstName') }}\n                </div>\n              </div>\n\n              <!-- Last Name -->\n              <div class=\"col-md-6 mb-3\">\n                <label for=\"lastName\" class=\"form-label\">Last Name</label>\n                <input \n                  type=\"text\" \n                  class=\"form-control\" \n                  id=\"lastName\"\n                  formControlName=\"lastName\"\n                  [class.is-invalid]=\"registerForm.get('lastName')?.invalid && registerForm.get('lastName')?.touched\"\n                  placeholder=\"Enter last name\">\n                <div class=\"invalid-feedback\" *ngIf=\"registerForm.get('lastName')?.invalid && registerForm.get('lastName')?.touched\">\n                  {{ getErrorMessage('lastName') }}\n                </div>\n              </div>\n            </div>\n\n            <div class=\"row\">\n              <!-- Password -->\n              <div class=\"col-md-6 mb-3\">\n                <label for=\"password\" class=\"form-label\">Password *</label>\n                <input \n                  type=\"password\" \n                  class=\"form-control\" \n                  id=\"password\"\n                  formControlName=\"password\"\n                  [class.is-invalid]=\"registerForm.get('password')?.invalid && registerForm.get('password')?.touched\"\n                  placeholder=\"Enter password\">\n                <div class=\"invalid-feedback\" *ngIf=\"registerForm.get('password')?.invalid && registerForm.get('password')?.touched\">\n                  {{ getErrorMessage('password') }}\n                </div>\n              </div>\n\n              <!-- Confirm Password -->\n              <div class=\"col-md-6 mb-3\">\n                <label for=\"confirmPassword\" class=\"form-label\">Confirm Password *</label>\n                <input \n                  type=\"password\" \n                  class=\"form-control\" \n                  id=\"confirmPassword\"\n                  formControlName=\"confirmPassword\"\n                  [class.is-invalid]=\"registerForm.get('confirmPassword')?.invalid && registerForm.get('confirmPassword')?.touched\"\n                  placeholder=\"Confirm password\">\n                <div class=\"invalid-feedback\" *ngIf=\"registerForm.get('confirmPassword')?.invalid && registerForm.get('confirmPassword')?.touched\">\n                  {{ getErrorMessage('confirmPassword') }}\n                </div>\n              </div>\n            </div>\n\n            <!-- Error Message -->\n            <div class=\"alert alert-danger\" *ngIf=\"errorMessage\">\n              {{ errorMessage }}\n            </div>\n\n            <!-- Success Message -->\n            <div class=\"alert alert-success\" *ngIf=\"successMessage\">\n              {{ successMessage }}\n            </div>\n\n            <!-- Submit Button -->\n            <div class=\"d-grid\">\n              <button \n                type=\"submit\" \n                class=\"btn btn-success\"\n                [disabled]=\"registerForm.invalid || loading\">\n                <span class=\"spinner-border spinner-border-sm me-2\" *ngIf=\"loading\"></span>\n                {{ loading ? 'Registering...' : 'Register' }}\n              </button>\n            </div>\n\n          </form>\n\n          <!-- Link to Login -->\n          <div class=\"mt-3 text-center\">\n            <a routerLink=\"/login\" class=\"text-decoration-none\">Already have an account? Login</a>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}