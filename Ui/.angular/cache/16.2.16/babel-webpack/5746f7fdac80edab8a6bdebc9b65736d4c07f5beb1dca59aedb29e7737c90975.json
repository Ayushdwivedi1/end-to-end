{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/auth.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nconst _c0 = [\"chatContainer\"];\nconst _c1 = [\"messageInput\"];\nfunction ChatComponent_div_19_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 35);\n    i0.ɵɵelement(1, \"i\", 4);\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ChatComponent_div_19_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 36);\n    i0.ɵɵelement(1, \"i\", 37);\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ChatComponent_div_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 28)(1, \"div\", 29);\n    i0.ɵɵtemplate(2, ChatComponent_div_19_div_2_Template, 2, 0, \"div\", 30);\n    i0.ɵɵelementStart(3, \"div\", 31)(4, \"div\", 32);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"div\", 33);\n    i0.ɵɵtext(7);\n    i0.ɵɵpipe(8, \"date\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtemplate(9, ChatComponent_div_19_div_9_Template, 2, 0, \"div\", 34);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const message_r4 = ctx.$implicit;\n    i0.ɵɵproperty(\"ngClass\", message_r4.sender === \"user\" ? \"user-message\" : \"ai-message\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", message_r4.sender === \"ai\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(message_r4.text);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind2(8, 5, message_r4.timestamp, \"shortTime\"), \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", message_r4.sender === \"user\");\n  }\n}\nfunction ChatComponent_div_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 38)(1, \"div\", 29)(2, \"div\", 35);\n    i0.ɵɵelement(3, \"i\", 4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"div\", 31)(5, \"div\", 39);\n    i0.ɵɵelement(6, \"span\")(7, \"span\")(8, \"span\");\n    i0.ɵɵelementEnd()()()();\n  }\n}\nexport class ChatComponent {\n  constructor(authService) {\n    this.authService = authService;\n    this.messages = [];\n    this.newMessage = '';\n    this.userData = null;\n    this.isTyping = false;\n    this.isListening = false;\n    this.isSpeaking = false;\n    this.recognition = null;\n    this.synthesis = null;\n  }\n  ngOnInit() {\n    this.userData = this.authService.getUserData();\n    this.addWelcomeMessage();\n    this.initializeSpeech();\n    // Load voices when they become available\n    if (this.synthesis) {\n      this.synthesis.onvoiceschanged = () => {\n        console.log('Voices loaded:', this.synthesis?.getVoices().length);\n      };\n    }\n  }\n  ngAfterViewChecked() {\n    this.scrollToBottom();\n  }\n  addWelcomeMessage() {\n    this.messages.push({\n      id: 1,\n      text: `Hello ${this.userData?.firstName || this.userData?.username}! I'm your AI assistant. How can I help you today?`,\n      sender: 'ai',\n      timestamp: new Date()\n    });\n  }\n  sendMessage() {\n    if (this.newMessage.trim() && !this.isTyping) {\n      const userMessage = {\n        id: this.messages.length + 1,\n        text: this.newMessage.trim(),\n        sender: 'user',\n        timestamp: new Date()\n      };\n      this.messages.push(userMessage);\n      const userInput = this.newMessage;\n      this.newMessage = '';\n      this.isTyping = true;\n      // Simulate AI response\n      setTimeout(() => {\n        this.generateAIResponse(userInput);\n        this.isTyping = false;\n      }, 1000 + Math.random() * 2000); // Random delay between 1-3 seconds\n    }\n  }\n\n  generateAIResponse(userInput) {\n    const responses = [\"I understand your request. Let me help you with that.\", \"That's an interesting question! Here's what I can tell you...\", \"I'm processing your request. Here's my analysis...\", \"Based on your input, I recommend the following approach...\", \"Great question! Let me provide you with some insights...\", \"I can help you with that. Here's what you need to know...\", \"Thank you for asking. Here's my response...\", \"I've analyzed your request. Here are the key points...\", \"That's a good point. Let me elaborate on that...\", \"I'm here to assist you. Here's what I found...\"];\n    const randomResponse = responses[Math.floor(Math.random() * responses.length)];\n    const aiMessage = {\n      id: this.messages.length + 1,\n      text: randomResponse,\n      sender: 'ai',\n      timestamp: new Date()\n    };\n    this.messages.push(aiMessage);\n  }\n  onKeyPress(event) {\n    if (event.key === 'Enter' && !event.shiftKey) {\n      event.preventDefault();\n      this.sendMessage();\n    }\n  }\n  scrollToBottom() {\n    try {\n      this.chatContainer.nativeElement.scrollTop = this.chatContainer.nativeElement.scrollHeight;\n    } catch (err) {}\n  }\n  clearChat() {\n    this.messages = [];\n    this.addWelcomeMessage();\n  }\n  focusInput() {\n    setTimeout(() => {\n      this.messageInput.nativeElement.focus();\n    }, 100);\n  }\n  initializeSpeech() {\n    // Initialize speech synthesis\n    if ('speechSynthesis' in window) {\n      this.synthesis = window.speechSynthesis;\n    }\n    // Initialize speech recognition\n    if ('webkitSpeechRecognition' in window) {\n      this.recognition = new window.webkitSpeechRecognition();\n      this.recognition.continuous = false;\n      this.recognition.interimResults = false;\n      this.recognition.lang = 'hi-IN'; // Hindi (India)\n      this.recognition.maxAlternatives = 3; // Get multiple recognition alternatives\n      this.recognition.onstart = () => {\n        this.isListening = true;\n      };\n      this.recognition.onresult = event => {\n        const transcript = event.results[0][0].transcript;\n        this.newMessage = transcript;\n        this.isListening = false;\n      };\n      this.recognition.onerror = event => {\n        console.error('Speech recognition error:', event.error);\n        this.isListening = false;\n      };\n      this.recognition.onend = () => {\n        this.isListening = false;\n      };\n    }\n  }\n  startListening() {\n    if (this.recognition && !this.isListening) {\n      try {\n        this.recognition.start();\n      } catch (error) {\n        console.error('Error starting speech recognition:', error);\n        this.isListening = false;\n      }\n    }\n  }\n  stopListening() {\n    if (this.recognition && this.isListening) {\n      try {\n        this.recognition.stop();\n      } catch (error) {\n        console.error('Error stopping speech recognition:', error);\n      }\n    }\n  }\n  speakMessage(text) {\n    if (this.synthesis) {\n      try {\n        // Stop any current speech\n        this.synthesis.cancel();\n        const utterance = new SpeechSynthesisUtterance(text);\n        // Get available voices and select a clear Hindi/English voice\n        const voices = this.synthesis.getVoices();\n        const preferredVoices = ['hi-IN-NeerjaNeural', 'en-IN-NeerjaNeural', 'hi-IN-MadhurNeural', 'en-IN-PrabhatNeural', 'en-US-JennyNeural', 'en-GB-SoniaNeural' // British English voice\n        ];\n        // Find the best available voice\n        let selectedVoice = null;\n        for (const voiceName of preferredVoices) {\n          selectedVoice = voices.find(voice => voice.name === voiceName);\n          if (selectedVoice) break;\n        }\n        // If no preferred voice found, try to find any Hindi or Indian English voice\n        if (!selectedVoice) {\n          selectedVoice = voices.find(voice => voice.lang.startsWith('hi-') || voice.lang.startsWith('en-IN') || voice.name.toLowerCase().includes('hindi') || voice.name.toLowerCase().includes('india'));\n        }\n        // If still no voice found, use default\n        if (selectedVoice) {\n          utterance.voice = selectedVoice;\n        }\n        // Optimize for clear Hindi/English speech\n        utterance.rate = 0.85; // Slightly slower for clarity\n        utterance.pitch = 1.1; // Slightly higher pitch for clarity\n        utterance.volume = 1.0; // Full volume for clear audio\n        utterance.lang = 'hi-IN'; // Set language to Hindi\n        utterance.onstart = () => {\n          this.isSpeaking = true;\n        };\n        utterance.onend = () => {\n          this.isSpeaking = false;\n        };\n        utterance.onerror = event => {\n          console.error('Speech synthesis error:', event);\n          this.isSpeaking = false;\n        };\n        this.synthesis.speak(utterance);\n      } catch (error) {\n        console.error('Error with speech synthesis:', error);\n        this.isSpeaking = false;\n      }\n    }\n  }\n  stopSpeaking() {\n    if (this.synthesis) {\n      try {\n        this.synthesis.cancel();\n        this.isSpeaking = false;\n      } catch (error) {\n        console.error('Error stopping speech synthesis:', error);\n      }\n    }\n  }\n  toggleSpeech() {\n    if (this.isSpeaking) {\n      this.stopSpeaking();\n    } else {\n      // Speak the last AI message\n      const lastAiMessage = this.messages.filter(msg => msg.sender === 'ai').pop();\n      if (lastAiMessage) {\n        this.speakMessage(lastAiMessage.text);\n      }\n    }\n  }\n  getAvailableVoices() {\n    if (this.synthesis) {\n      const voices = this.synthesis.getVoices();\n      console.log('Available voices:');\n      voices.forEach(voice => {\n        console.log(`- ${voice.name} (${voice.lang})`);\n      });\n    }\n  }\n  static {\n    this.ɵfac = function ChatComponent_Factory(t) {\n      return new (t || ChatComponent)(i0.ɵɵdirectiveInject(i1.AuthService));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: ChatComponent,\n      selectors: [[\"app-chat\"]],\n      viewQuery: function ChatComponent_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(_c0, 5);\n          i0.ɵɵviewQuery(_c1, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.chatContainer = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.messageInput = _t.first);\n        }\n      },\n      decls: 33,\n      vars: 14,\n      consts: [[1, \"chat-container\"], [1, \"chat-header\"], [1, \"chat-header-content\"], [1, \"ai-avatar\"], [1, \"bi\", \"bi-robot\"], [1, \"chat-info\"], [1, \"status\"], [1, \"status-dot\"], [1, \"chat-actions\"], [\"title\", \"Speak Last AI Message\", 1, \"btn\", \"btn-speak\", 3, \"click\"], [1, \"bi\"], [\"title\", \"Clear Chat\", 1, \"btn\", \"btn-clear\", 3, \"click\"], [1, \"bi\", \"bi-trash\"], [1, \"chat-messages\"], [\"chatContainer\", \"\"], [1, \"messages-container\"], [\"class\", \"message-wrapper\", 3, \"ngClass\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"message-wrapper ai-message\", 4, \"ngIf\"], [1, \"chat-input-container\"], [1, \"chat-input-wrapper\"], [1, \"input-group\"], [\"placeholder\", \"Type your message here...\", \"rows\", \"1\", \"maxlength\", \"500\", 1, \"form-control\", \"chat-input\", 3, \"ngModel\", \"ngModelChange\", \"keypress\"], [\"messageInput\", \"\"], [\"title\", \"Voice Input\", 1, \"btn\", \"btn-mic\", 3, \"click\"], [1, \"btn\", \"btn-send\", 3, \"disabled\", \"click\"], [1, \"bi\", \"bi-send\"], [1, \"input-footer\"], [1, \"text-muted\"], [1, \"message-wrapper\", 3, \"ngClass\"], [1, \"message\"], [\"class\", \"message-avatar\", 4, \"ngIf\"], [1, \"message-content\"], [1, \"message-text\"], [1, \"message-time\"], [\"class\", \"message-avatar user-avatar\", 4, \"ngIf\"], [1, \"message-avatar\"], [1, \"message-avatar\", \"user-avatar\"], [1, \"bi\", \"bi-person\"], [1, \"message-wrapper\", \"ai-message\"], [1, \"typing-indicator\"]],\n      template: function ChatComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3);\n          i0.ɵɵelement(4, \"i\", 4);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(5, \"div\", 5)(6, \"h3\");\n          i0.ɵɵtext(7, \"AI Assistant\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(8, \"p\", 6);\n          i0.ɵɵelement(9, \"span\", 7);\n          i0.ɵɵtext(10, \" Online \");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(11, \"div\", 8)(12, \"button\", 9);\n          i0.ɵɵlistener(\"click\", function ChatComponent_Template_button_click_12_listener() {\n            return ctx.toggleSpeech();\n          });\n          i0.ɵɵelement(13, \"i\", 10);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(14, \"button\", 11);\n          i0.ɵɵlistener(\"click\", function ChatComponent_Template_button_click_14_listener() {\n            return ctx.clearChat();\n          });\n          i0.ɵɵelement(15, \"i\", 12);\n          i0.ɵɵelementEnd()()()();\n          i0.ɵɵelementStart(16, \"div\", 13, 14)(18, \"div\", 15);\n          i0.ɵɵtemplate(19, ChatComponent_div_19_Template, 10, 8, \"div\", 16);\n          i0.ɵɵtemplate(20, ChatComponent_div_20_Template, 9, 0, \"div\", 17);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(21, \"div\", 18)(22, \"div\", 19)(23, \"div\", 20)(24, \"textarea\", 21, 22);\n          i0.ɵɵlistener(\"ngModelChange\", function ChatComponent_Template_textarea_ngModelChange_24_listener($event) {\n            return ctx.newMessage = $event;\n          })(\"keypress\", function ChatComponent_Template_textarea_keypress_24_listener($event) {\n            return ctx.onKeyPress($event);\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(26, \"button\", 23);\n          i0.ɵɵlistener(\"click\", function ChatComponent_Template_button_click_26_listener() {\n            return ctx.isListening ? ctx.stopListening() : ctx.startListening();\n          });\n          i0.ɵɵelement(27, \"i\", 10);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(28, \"button\", 24);\n          i0.ɵɵlistener(\"click\", function ChatComponent_Template_button_click_28_listener() {\n            return ctx.sendMessage();\n          });\n          i0.ɵɵelement(29, \"i\", 25);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(30, \"div\", 26)(31, \"small\", 27);\n          i0.ɵɵtext(32, \" Press Enter to send, Shift+Enter for new line \");\n          i0.ɵɵelementEnd()()()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(13);\n          i0.ɵɵclassProp(\"bi-volume-up\", !ctx.isSpeaking)(\"bi-volume-mute\", ctx.isSpeaking);\n          i0.ɵɵadvance(6);\n          i0.ɵɵproperty(\"ngForOf\", ctx.messages);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.isTyping);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngModel\", ctx.newMessage);\n          i0.ɵɵadvance(2);\n          i0.ɵɵclassProp(\"listening\", ctx.isListening);\n          i0.ɵɵadvance(1);\n          i0.ɵɵclassProp(\"bi-mic\", !ctx.isListening)(\"bi-mic-mute\", ctx.isListening);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"disabled\", !ctx.newMessage.trim() || ctx.isTyping);\n        }\n      },\n      dependencies: [i2.NgClass, i2.NgForOf, i2.NgIf, i3.DefaultValueAccessor, i3.NgControlStatus, i3.MaxLengthValidator, i3.NgModel, i2.DatePipe],\n      styles: [\"\\n\\n.chat-container[_ngcontent-%COMP%] {\\n  height: calc(100vh - 80px);\\n  display: flex;\\n  flex-direction: column;\\n  background: linear-gradient(135deg, #0f0f23 0%, #1a1a2e 25%, #16213e 50%, #0f3460 75%, #533483 100%);\\n  position: relative;\\n  overflow: hidden;\\n}\\n\\n.chat-container[_ngcontent-%COMP%]::before {\\n  content: '';\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  right: 0;\\n  bottom: 0;\\n  background: \\n    radial-gradient(circle at 20% 80%, rgba(120, 119, 198, 0.1) 0%, transparent 50%),\\n    radial-gradient(circle at 80% 20%, rgba(255, 119, 198, 0.1) 0%, transparent 50%),\\n    radial-gradient(circle at 40% 40%, rgba(120, 219, 255, 0.05) 0%, transparent 50%);\\n  pointer-events: none;\\n  z-index: 0;\\n}\\n\\n\\n\\n.chat-header[_ngcontent-%COMP%] {\\n  background: rgba(15, 15, 35, 0.9);\\n  -webkit-backdrop-filter: blur(20px);\\n          backdrop-filter: blur(20px);\\n  border-bottom: 1px solid rgba(120, 119, 198, 0.3);\\n  padding: 1rem;\\n  position: relative;\\n  z-index: 1;\\n}\\n\\n.chat-header-content[_ngcontent-%COMP%] {\\n  display: flex;\\n  align-items: center;\\n  justify-content: space-between;\\n}\\n\\n.ai-avatar[_ngcontent-%COMP%] {\\n  width: 50px;\\n  height: 50px;\\n  background: linear-gradient(45deg, #00d4ff, #4ecdc4);\\n  border-radius: 50%;\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  font-size: 1.5rem;\\n  color: white;\\n  box-shadow: 0 4px 15px rgba(0, 212, 255, 0.3);\\n  animation: _ngcontent-%COMP%_pulse 2s ease-in-out infinite;\\n}\\n\\n@keyframes _ngcontent-%COMP%_pulse {\\n  0%, 100% { transform: scale(1); }\\n  50% { transform: scale(1.05); }\\n}\\n\\n.chat-info[_ngcontent-%COMP%]   h3[_ngcontent-%COMP%] {\\n  color: #ffffff;\\n  margin: 0;\\n  font-size: 1.2rem;\\n  font-weight: 600;\\n}\\n\\n.status[_ngcontent-%COMP%] {\\n  color: #b8b8d1;\\n  margin: 0;\\n  font-size: 0.9rem;\\n  display: flex;\\n  align-items: center;\\n  gap: 0.5rem;\\n}\\n\\n.status-dot[_ngcontent-%COMP%] {\\n  width: 8px;\\n  height: 8px;\\n  background: #00ff88;\\n  border-radius: 50%;\\n  animation: _ngcontent-%COMP%_blink 2s ease-in-out infinite;\\n}\\n\\n@keyframes _ngcontent-%COMP%_blink {\\n  0%, 100% { opacity: 1; }\\n  50% { opacity: 0.5; }\\n}\\n\\n.btn-clear[_ngcontent-%COMP%] {\\n  background: rgba(255, 255, 255, 0.1);\\n  border: 1px solid rgba(255, 255, 255, 0.2);\\n  color: #b8b8d1;\\n  border-radius: 8px;\\n  padding: 0.5rem;\\n  transition: all 0.3s ease;\\n}\\n\\n.btn-clear[_ngcontent-%COMP%]:hover {\\n  background: rgba(239, 68, 68, 0.2);\\n  border-color: #ef4444;\\n  color: #ef4444;\\n  transform: scale(1.1);\\n}\\n\\n.btn-speak[_ngcontent-%COMP%] {\\n  background: rgba(255, 255, 255, 0.1);\\n  border: 1px solid rgba(255, 255, 255, 0.2);\\n  color: #b8b8d1;\\n  border-radius: 8px;\\n  padding: 0.5rem;\\n  transition: all 0.3s ease;\\n  margin-right: 0.5rem;\\n}\\n\\n.btn-speak[_ngcontent-%COMP%]:hover {\\n  background: rgba(0, 212, 255, 0.2);\\n  border-color: #00d4ff;\\n  color: #00d4ff;\\n  transform: scale(1.1);\\n}\\n\\n.btn-speak[_ngcontent-%COMP%]   i[_ngcontent-%COMP%] {\\n  font-size: 1.1rem;\\n}\\n\\n\\n\\n.chat-messages[_ngcontent-%COMP%] {\\n  flex: 1;\\n  overflow-y: auto;\\n  padding: 1rem;\\n  position: relative;\\n  z-index: 1;\\n}\\n\\n.messages-container[_ngcontent-%COMP%] {\\n  max-width: 800px;\\n  margin: 0 auto;\\n}\\n\\n.message-wrapper[_ngcontent-%COMP%] {\\n  margin-bottom: 1rem;\\n  animation: _ngcontent-%COMP%_fadeInUp 0.3s ease-out;\\n}\\n\\n@keyframes _ngcontent-%COMP%_fadeInUp {\\n  from {\\n    opacity: 0;\\n    transform: translateY(20px);\\n  }\\n  to {\\n    opacity: 1;\\n    transform: translateY(0);\\n  }\\n}\\n\\n.message[_ngcontent-%COMP%] {\\n  display: flex;\\n  align-items: flex-start;\\n  gap: 0.75rem;\\n  max-width: 80%;\\n}\\n\\n.user-message[_ngcontent-%COMP%]   .message[_ngcontent-%COMP%] {\\n  flex-direction: row-reverse;\\n  margin-left: auto;\\n}\\n\\n.message-avatar[_ngcontent-%COMP%] {\\n  width: 40px;\\n  height: 40px;\\n  border-radius: 50%;\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  font-size: 1.2rem;\\n  flex-shrink: 0;\\n}\\n\\n.message-avatar[_ngcontent-%COMP%]:not(.user-avatar) {\\n  background: linear-gradient(45deg, #00d4ff, #4ecdc4);\\n  color: white;\\n}\\n\\n.user-avatar[_ngcontent-%COMP%] {\\n  background: linear-gradient(45deg, #7877c6, #ff77c6);\\n  color: white;\\n}\\n\\n.message-content[_ngcontent-%COMP%] {\\n  flex: 1;\\n  min-width: 0;\\n}\\n\\n.message-text[_ngcontent-%COMP%] {\\n  background: rgba(255, 255, 255, 0.1);\\n  -webkit-backdrop-filter: blur(10px);\\n          backdrop-filter: blur(10px);\\n  border: 1px solid rgba(255, 255, 255, 0.2);\\n  border-radius: 18px;\\n  padding: 0.75rem 1rem;\\n  color: #ffffff;\\n  line-height: 1.5;\\n  word-wrap: break-word;\\n  position: relative;\\n}\\n\\n.ai-message[_ngcontent-%COMP%]   .message-text[_ngcontent-%COMP%] {\\n  background: rgba(0, 212, 255, 0.1);\\n  border-color: rgba(0, 212, 255, 0.3);\\n}\\n\\n.user-message[_ngcontent-%COMP%]   .message-text[_ngcontent-%COMP%] {\\n  background: rgba(120, 119, 198, 0.2);\\n  border-color: rgba(120, 119, 198, 0.4);\\n}\\n\\n.message-time[_ngcontent-%COMP%] {\\n  font-size: 0.75rem;\\n  color: #b8b8d1;\\n  margin-top: 0.25rem;\\n  text-align: right;\\n}\\n\\n.user-message[_ngcontent-%COMP%]   .message-time[_ngcontent-%COMP%] {\\n  text-align: left;\\n}\\n\\n\\n\\n.typing-indicator[_ngcontent-%COMP%] {\\n  display: flex;\\n  gap: 0.25rem;\\n  padding: 0.75rem 1rem;\\n}\\n\\n.typing-indicator[_ngcontent-%COMP%]   span[_ngcontent-%COMP%] {\\n  width: 8px;\\n  height: 8px;\\n  background: #00d4ff;\\n  border-radius: 50%;\\n  animation: _ngcontent-%COMP%_typing 1.4s ease-in-out infinite both;\\n}\\n\\n.typing-indicator[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]:nth-child(1) { animation-delay: -0.32s; }\\n.typing-indicator[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]:nth-child(2) { animation-delay: -0.16s; }\\n\\n@keyframes _ngcontent-%COMP%_typing {\\n  0%, 80%, 100% {\\n    transform: scale(0.8);\\n    opacity: 0.5;\\n  }\\n  40% {\\n    transform: scale(1);\\n    opacity: 1;\\n  }\\n}\\n\\n\\n\\n.chat-input-container[_ngcontent-%COMP%] {\\n  background: rgba(15, 15, 35, 0.9);\\n  -webkit-backdrop-filter: blur(20px);\\n          backdrop-filter: blur(20px);\\n  border-top: 1px solid rgba(120, 119, 198, 0.3);\\n  padding: 1rem;\\n  position: relative;\\n  z-index: 1;\\n}\\n\\n.chat-input-wrapper[_ngcontent-%COMP%] {\\n  max-width: 800px;\\n  margin: 0 auto;\\n}\\n\\n.input-group[_ngcontent-%COMP%] {\\n  display: flex;\\n  gap: 0.5rem;\\n  align-items: flex-end;\\n}\\n\\n.chat-input[_ngcontent-%COMP%] {\\n  background: rgba(255, 255, 255, 0.1);\\n  border: 1px solid rgba(255, 255, 255, 0.2);\\n  border-radius: 20px;\\n  color: #ffffff;\\n  padding: 0.75rem 1rem;\\n  resize: none;\\n  font-family: inherit;\\n  transition: all 0.3s ease;\\n  flex: 1;\\n}\\n\\n.chat-input[_ngcontent-%COMP%]:focus {\\n  outline: none;\\n  border-color: #00d4ff;\\n  box-shadow: 0 0 0 2px rgba(0, 212, 255, 0.2);\\n  background: rgba(255, 255, 255, 0.15);\\n}\\n\\n.chat-input[_ngcontent-%COMP%]::placeholder {\\n  color: #b8b8d1;\\n}\\n\\n.btn-send[_ngcontent-%COMP%] {\\n  background: linear-gradient(45deg, #00d4ff, #4ecdc4);\\n  border: none;\\n  color: white;\\n  border-radius: 50%;\\n  width: 45px;\\n  height: 45px;\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  transition: all 0.3s ease;\\n  flex-shrink: 0;\\n}\\n\\n.btn-send[_ngcontent-%COMP%]:hover:not(:disabled) {\\n  transform: scale(1.1);\\n  box-shadow: 0 5px 15px rgba(0, 212, 255, 0.3);\\n}\\n\\n.btn-send[_ngcontent-%COMP%]:disabled {\\n  opacity: 0.5;\\n  cursor: not-allowed;\\n  transform: none;\\n}\\n\\n.btn-mic[_ngcontent-%COMP%] {\\n  background: rgba(255, 255, 255, 0.1);\\n  border: 1px solid rgba(255, 255, 255, 0.2);\\n  color: #b8b8d1;\\n  border-radius: 50%;\\n  width: 45px;\\n  height: 45px;\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  transition: all 0.3s ease;\\n  flex-shrink: 0;\\n}\\n\\n.btn-mic[_ngcontent-%COMP%]:hover {\\n  background: rgba(255, 119, 198, 0.2);\\n  border-color: #ff77c6;\\n  color: #ff77c6;\\n  transform: scale(1.1);\\n}\\n\\n.btn-mic.listening[_ngcontent-%COMP%] {\\n  background: linear-gradient(45deg, #ff77c6, #ff6b6b);\\n  border-color: #ff77c6;\\n  color: white;\\n  animation: _ngcontent-%COMP%_pulse 1s ease-in-out infinite;\\n}\\n\\n.btn-mic.listening[_ngcontent-%COMP%]:hover {\\n  background: linear-gradient(45deg, #ff6b6b, #ff77c6);\\n  color: white;\\n}\\n\\n.input-footer[_ngcontent-%COMP%] {\\n  margin-top: 0.5rem;\\n  text-align: center;\\n}\\n\\n.input-footer[_ngcontent-%COMP%]   small[_ngcontent-%COMP%] {\\n  color: #b8b8d1;\\n  font-size: 0.8rem;\\n}\\n\\n\\n\\n.chat-messages[_ngcontent-%COMP%]::-webkit-scrollbar {\\n  width: 6px;\\n}\\n\\n.chat-messages[_ngcontent-%COMP%]::-webkit-scrollbar-track {\\n  background: rgba(255, 255, 255, 0.1);\\n  border-radius: 3px;\\n}\\n\\n.chat-messages[_ngcontent-%COMP%]::-webkit-scrollbar-thumb {\\n  background: rgba(120, 119, 198, 0.5);\\n  border-radius: 3px;\\n}\\n\\n.chat-messages[_ngcontent-%COMP%]::-webkit-scrollbar-thumb:hover {\\n  background: rgba(120, 119, 198, 0.7);\\n}\\n\\n\\n\\n@media (max-width: 768px) {\\n  .chat-container[_ngcontent-%COMP%] {\\n    height: calc(100vh - 70px);\\n  }\\n  \\n  .message[_ngcontent-%COMP%] {\\n    max-width: 90%;\\n  }\\n  \\n  .chat-header-content[_ngcontent-%COMP%] {\\n    gap: 1rem;\\n  }\\n  \\n  .ai-avatar[_ngcontent-%COMP%] {\\n    width: 40px;\\n    height: 40px;\\n    font-size: 1.2rem;\\n  }\\n  \\n  .chat-info[_ngcontent-%COMP%]   h3[_ngcontent-%COMP%] {\\n    font-size: 1rem;\\n  }\\n  \\n  .message-avatar[_ngcontent-%COMP%] {\\n    width: 35px;\\n    height: 35px;\\n    font-size: 1rem;\\n  }\\n  \\n  .message-text[_ngcontent-%COMP%] {\\n    padding: 0.5rem 0.75rem;\\n    font-size: 0.9rem;\\n  }\\n  \\n  .btn-send[_ngcontent-%COMP%] {\\n    width: 40px;\\n    height: 40px;\\n  }\\n}\\n\\n@media (max-width: 480px) {\\n  .chat-messages[_ngcontent-%COMP%] {\\n    padding: 0.5rem;\\n  }\\n  \\n  .chat-input-container[_ngcontent-%COMP%] {\\n    padding: 0.5rem;\\n  }\\n  \\n  .message[_ngcontent-%COMP%] {\\n    max-width: 95%;\\n  }\\n  \\n  .message-text[_ngcontent-%COMP%] {\\n    padding: 0.5rem;\\n    font-size: 0.85rem;\\n  }\\n} \\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\"]\n    });\n  }\n}","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","ɵɵtemplate","ChatComponent_div_19_div_2_Template","ɵɵtext","ChatComponent_div_19_div_9_Template","ɵɵproperty","message_r4","sender","ɵɵadvance","ɵɵtextInterpolate","text","ɵɵtextInterpolate1","ɵɵpipeBind2","timestamp","ChatComponent","constructor","authService","messages","newMessage","userData","isTyping","isListening","isSpeaking","recognition","synthesis","ngOnInit","getUserData","addWelcomeMessage","initializeSpeech","onvoiceschanged","console","log","getVoices","length","ngAfterViewChecked","scrollToBottom","push","id","firstName","username","Date","sendMessage","trim","userMessage","userInput","setTimeout","generateAIResponse","Math","random","responses","randomResponse","floor","aiMessage","onKeyPress","event","key","shiftKey","preventDefault","chatContainer","nativeElement","scrollTop","scrollHeight","err","clearChat","focusInput","messageInput","focus","window","speechSynthesis","webkitSpeechRecognition","continuous","interimResults","lang","maxAlternatives","onstart","onresult","transcript","results","onerror","error","onend","startListening","start","stopListening","stop","speakMessage","cancel","utterance","SpeechSynthesisUtterance","voices","preferredVoices","selectedVoice","voiceName","find","voice","name","startsWith","toLowerCase","includes","rate","pitch","volume","speak","stopSpeaking","toggleSpeech","lastAiMessage","filter","msg","pop","getAvailableVoices","forEach","ɵɵdirectiveInject","i1","AuthService","selectors","viewQuery","ChatComponent_Query","rf","ctx","ɵɵlistener","ChatComponent_Template_button_click_12_listener","ChatComponent_Template_button_click_14_listener","ChatComponent_div_19_Template","ChatComponent_div_20_Template","ChatComponent_Template_textarea_ngModelChange_24_listener","$event","ChatComponent_Template_textarea_keypress_24_listener","ChatComponent_Template_button_click_26_listener","ChatComponent_Template_button_click_28_listener","ɵɵclassProp"],"sources":["/Users/ent-00387/Documents/end-to-end/Ui/src/app/components/chat/chat.component.ts","/Users/ent-00387/Documents/end-to-end/Ui/src/app/components/chat/chat.component.html"],"sourcesContent":["import { Component, OnInit, ViewChild, ElementRef, AfterViewChecked } from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\n\ninterface ChatMessage {\n  id: number;\n  text: string;\n  sender: 'user' | 'ai';\n  timestamp: Date;\n  isLoading?: boolean;\n}\n\n@Component({\n  selector: 'app-chat',\n  templateUrl: './chat.component.html',\n  styleUrls: ['./chat.component.css']\n})\nexport class ChatComponent implements OnInit, AfterViewChecked {\n  @ViewChild('chatContainer') private chatContainer!: ElementRef;\n  @ViewChild('messageInput') private messageInput!: ElementRef;\n\n  messages: ChatMessage[] = [];\n  newMessage: string = '';\n  userData: any = null;\n  isTyping: boolean = false;\n  isListening: boolean = false;\n  isSpeaking: boolean = false;\n  recognition: any = null;\n  synthesis: SpeechSynthesis | null = null;\n\n  constructor(private authService: AuthService) {}\n\n  ngOnInit(): void {\n    this.userData = this.authService.getUserData();\n    this.addWelcomeMessage();\n    this.initializeSpeech();\n    \n    // Load voices when they become available\n    if (this.synthesis) {\n      this.synthesis.onvoiceschanged = () => {\n        console.log('Voices loaded:', this.synthesis?.getVoices().length);\n      };\n    }\n  }\n\n  ngAfterViewChecked(): void {\n    this.scrollToBottom();\n  }\n\n  private addWelcomeMessage(): void {\n    this.messages.push({\n      id: 1,\n      text: `Hello ${this.userData?.firstName || this.userData?.username}! I'm your AI assistant. How can I help you today?`,\n      sender: 'ai',\n      timestamp: new Date()\n    });\n  }\n\n  sendMessage(): void {\n    if (this.newMessage.trim() && !this.isTyping) {\n      const userMessage: ChatMessage = {\n        id: this.messages.length + 1,\n        text: this.newMessage.trim(),\n        sender: 'user',\n        timestamp: new Date()\n      };\n\n      this.messages.push(userMessage);\n      const userInput = this.newMessage;\n      this.newMessage = '';\n      this.isTyping = true;\n\n      // Simulate AI response\n      setTimeout(() => {\n        this.generateAIResponse(userInput);\n        this.isTyping = false;\n      }, 1000 + Math.random() * 2000); // Random delay between 1-3 seconds\n    }\n  }\n\n  private generateAIResponse(userInput: string): void {\n    const responses = [\n      \"I understand your request. Let me help you with that.\",\n      \"That's an interesting question! Here's what I can tell you...\",\n      \"I'm processing your request. Here's my analysis...\",\n      \"Based on your input, I recommend the following approach...\",\n      \"Great question! Let me provide you with some insights...\",\n      \"I can help you with that. Here's what you need to know...\",\n      \"Thank you for asking. Here's my response...\",\n      \"I've analyzed your request. Here are the key points...\",\n      \"That's a good point. Let me elaborate on that...\",\n      \"I'm here to assist you. Here's what I found...\"\n    ];\n\n    const randomResponse = responses[Math.floor(Math.random() * responses.length)];\n    \n    const aiMessage: ChatMessage = {\n      id: this.messages.length + 1,\n      text: randomResponse,\n      sender: 'ai',\n      timestamp: new Date()\n    };\n\n    this.messages.push(aiMessage);\n  }\n\n  onKeyPress(event: KeyboardEvent): void {\n    if (event.key === 'Enter' && !event.shiftKey) {\n      event.preventDefault();\n      this.sendMessage();\n    }\n  }\n\n  private scrollToBottom(): void {\n    try {\n      this.chatContainer.nativeElement.scrollTop = this.chatContainer.nativeElement.scrollHeight;\n    } catch (err) {}\n  }\n\n  clearChat(): void {\n    this.messages = [];\n    this.addWelcomeMessage();\n  }\n\n  focusInput(): void {\n    setTimeout(() => {\n      this.messageInput.nativeElement.focus();\n    }, 100);\n  }\n\n  private initializeSpeech(): void {\n    // Initialize speech synthesis\n    if ('speechSynthesis' in window) {\n      this.synthesis = window.speechSynthesis;\n    }\n\n    // Initialize speech recognition\n    if ('webkitSpeechRecognition' in window) {\n      this.recognition = new (window as any).webkitSpeechRecognition();\n      this.recognition.continuous = false;\n      this.recognition.interimResults = false;\n      this.recognition.lang = 'hi-IN'; // Hindi (India)\n      this.recognition.maxAlternatives = 3; // Get multiple recognition alternatives\n\n      this.recognition.onstart = () => {\n        this.isListening = true;\n      };\n\n      this.recognition.onresult = (event: any) => {\n        const transcript = event.results[0][0].transcript;\n        this.newMessage = transcript;\n        this.isListening = false;\n      };\n\n      this.recognition.onerror = (event: any) => {\n        console.error('Speech recognition error:', event.error);\n        this.isListening = false;\n      };\n\n      this.recognition.onend = () => {\n        this.isListening = false;\n      };\n    }\n  }\n\n  startListening(): void {\n    if (this.recognition && !this.isListening) {\n      try {\n        this.recognition.start();\n      } catch (error) {\n        console.error('Error starting speech recognition:', error);\n        this.isListening = false;\n      }\n    }\n  }\n\n  stopListening(): void {\n    if (this.recognition && this.isListening) {\n      try {\n        this.recognition.stop();\n      } catch (error) {\n        console.error('Error stopping speech recognition:', error);\n      }\n    }\n  }\n\n  speakMessage(text: string): void {\n    if (this.synthesis) {\n      try {\n        // Stop any current speech\n        this.synthesis.cancel();\n\n        const utterance = new SpeechSynthesisUtterance(text);\n        \n        // Get available voices and select a clear Hindi/English voice\n        const voices = this.synthesis.getVoices();\n        const preferredVoices = [\n          'hi-IN-NeerjaNeural', // Hindi Neural voice\n          'en-IN-NeerjaNeural', // English (India) Neural voice\n          'hi-IN-MadhurNeural', // Hindi Male Neural voice\n          'en-IN-PrabhatNeural', // English (India) Male Neural voice\n          'en-US-JennyNeural',   // Clear English voice\n          'en-GB-SoniaNeural'    // British English voice\n        ];\n\n        // Find the best available voice\n        let selectedVoice = null;\n        for (const voiceName of preferredVoices) {\n          selectedVoice = voices.find(voice => voice.name === voiceName);\n          if (selectedVoice) break;\n        }\n\n        // If no preferred voice found, try to find any Hindi or Indian English voice\n        if (!selectedVoice) {\n          selectedVoice = voices.find(voice => \n            voice.lang.startsWith('hi-') || \n            voice.lang.startsWith('en-IN') ||\n            voice.name.toLowerCase().includes('hindi') ||\n            voice.name.toLowerCase().includes('india')\n          );\n        }\n\n        // If still no voice found, use default\n        if (selectedVoice) {\n          utterance.voice = selectedVoice;\n        }\n\n        // Optimize for clear Hindi/English speech\n        utterance.rate = 0.85;      // Slightly slower for clarity\n        utterance.pitch = 1.1;      // Slightly higher pitch for clarity\n        utterance.volume = 1.0;     // Full volume for clear audio\n        utterance.lang = 'hi-IN';   // Set language to Hindi\n\n        utterance.onstart = () => {\n          this.isSpeaking = true;\n        };\n\n        utterance.onend = () => {\n          this.isSpeaking = false;\n        };\n\n        utterance.onerror = (event) => {\n          console.error('Speech synthesis error:', event);\n          this.isSpeaking = false;\n        };\n\n        this.synthesis.speak(utterance);\n      } catch (error) {\n        console.error('Error with speech synthesis:', error);\n        this.isSpeaking = false;\n      }\n    }\n  }\n\n  stopSpeaking(): void {\n    if (this.synthesis) {\n      try {\n        this.synthesis.cancel();\n        this.isSpeaking = false;\n      } catch (error) {\n        console.error('Error stopping speech synthesis:', error);\n      }\n    }\n  }\n\n  toggleSpeech(): void {\n    if (this.isSpeaking) {\n      this.stopSpeaking();\n    } else {\n      // Speak the last AI message\n      const lastAiMessage = this.messages\n        .filter(msg => msg.sender === 'ai')\n        .pop();\n      if (lastAiMessage) {\n        this.speakMessage(lastAiMessage.text);\n      }\n    }\n  }\n\n  getAvailableVoices(): void {\n    if (this.synthesis) {\n      const voices = this.synthesis.getVoices();\n      console.log('Available voices:');\n      voices.forEach(voice => {\n        console.log(`- ${voice.name} (${voice.lang})`);\n      });\n    }\n  }\n} ","<div class=\"chat-container\">\n  <!-- Chat Header -->\n  <div class=\"chat-header\">\n    <div class=\"chat-header-content\">\n      <div class=\"ai-avatar\">\n        <i class=\"bi bi-robot\"></i>\n      </div>\n      <div class=\"chat-info\">\n        <h3>AI Assistant</h3>\n        <p class=\"status\">\n          <span class=\"status-dot\"></span>\n          Online\n        </p>\n      </div>\n      <div class=\"chat-actions\">\n        <button class=\"btn btn-speak\" (click)=\"toggleSpeech()\" title=\"Speak Last AI Message\">\n          <i class=\"bi\" [class.bi-volume-up]=\"!isSpeaking\" [class.bi-volume-mute]=\"isSpeaking\"></i>\n        </button>\n        <button class=\"btn btn-clear\" (click)=\"clearChat()\" title=\"Clear Chat\">\n          <i class=\"bi bi-trash\"></i>\n        </button>\n      </div>\n    </div>\n  </div>\n\n  <!-- Chat Messages -->\n  <div class=\"chat-messages\" #chatContainer>\n    <div class=\"messages-container\">\n      <div \n        *ngFor=\"let message of messages\" \n        class=\"message-wrapper\"\n        [ngClass]=\"message.sender === 'user' ? 'user-message' : 'ai-message'\"\n      >\n        <div class=\"message\">\n          <div class=\"message-avatar\" *ngIf=\"message.sender === 'ai'\">\n            <i class=\"bi bi-robot\"></i>\n          </div>\n          <div class=\"message-content\">\n            <div class=\"message-text\">{{ message.text }}</div>\n            <div class=\"message-time\">\n              {{ message.timestamp | date:'shortTime' }}\n            </div>\n          </div>\n          <div class=\"message-avatar user-avatar\" *ngIf=\"message.sender === 'user'\">\n            <i class=\"bi bi-person\"></i>\n          </div>\n        </div>\n      </div>\n\n      <!-- Typing Indicator -->\n      <div class=\"message-wrapper ai-message\" *ngIf=\"isTyping\">\n        <div class=\"message\">\n          <div class=\"message-avatar\">\n            <i class=\"bi bi-robot\"></i>\n          </div>\n          <div class=\"message-content\">\n            <div class=\"typing-indicator\">\n              <span></span>\n              <span></span>\n              <span></span>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <!-- Chat Input -->\n  <div class=\"chat-input-container\">\n    <div class=\"chat-input-wrapper\">\n      <div class=\"input-group\">\n        <textarea\n          #messageInput\n          class=\"form-control chat-input\"\n          placeholder=\"Type your message here...\"\n          [(ngModel)]=\"newMessage\"\n          (keypress)=\"onKeyPress($event)\"\n          rows=\"1\"\n          maxlength=\"500\"\n        ></textarea>\n        <button \n          class=\"btn btn-mic\" \n          (click)=\"isListening ? stopListening() : startListening()\"\n          [class.listening]=\"isListening\"\n          title=\"Voice Input\"\n        >\n          <i class=\"bi\" [class.bi-mic]=\"!isListening\" [class.bi-mic-mute]=\"isListening\"></i>\n        </button>\n        <button \n          class=\"btn btn-send\" \n          (click)=\"sendMessage()\"\n          [disabled]=\"!newMessage.trim() || isTyping\"\n        >\n          <i class=\"bi bi-send\"></i>\n        </button>\n      </div>\n      <div class=\"input-footer\">\n        <small class=\"text-muted\">\n          Press Enter to send, Shift+Enter for new line\n        </small>\n      </div>\n    </div>\n  </div>\n</div> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}