{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class UserService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'http://localhost:8080/api';\n  }\n  // Get all users\n  getAllUsers() {\n    return this.http.get(`${this.apiUrl}/users`);\n  }\n  // Get active users\n  getActiveUsers() {\n    return this.http.get(`${this.apiUrl}/users/active`);\n  }\n  // Get user by ID\n  getUserById(id) {\n    console.log('UserService: Making GET request to:', `${this.apiUrl}/users/${id}`);\n    return this.http.get(`${this.apiUrl}/users/${id}`);\n  }\n  // Get user by email\n  getUserByEmail(email) {\n    return this.http.get(`${this.apiUrl}/users/email/${email}`);\n  }\n  // Search users by name\n  searchUsersByName(name) {\n    return this.http.get(`${this.apiUrl}/users/search?name=${name}`);\n  }\n  // Create user\n  createUser(user) {\n    return this.http.post(`${this.apiUrl}/users`, user);\n  }\n  // Update user\n  updateUser(id, userUpdate) {\n    return this.http.put(`${this.apiUrl}/users/${id}`, userUpdate);\n  }\n  // Delete user\n  deleteUser(id) {\n    return this.http.delete(`${this.apiUrl}/users/${id}`);\n  }\n  // Deactivate user\n  deactivateUser(id) {\n    return this.http.patch(`${this.apiUrl}/users/${id}/deactivate`, {});\n  }\n  // Activate user\n  activateUser(id) {\n    return this.http.patch(`${this.apiUrl}/users/${id}/activate`, {});\n  }\n  // Test endpoint\n  test() {\n    return this.http.get(`${this.apiUrl}/test`, {\n      responseType: 'text'\n    });\n  }\n  static {\n    this.ɵfac = function UserService_Factory(t) {\n      return new (t || UserService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: UserService,\n      factory: UserService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["UserService","constructor","http","apiUrl","getAllUsers","get","getActiveUsers","getUserById","id","console","log","getUserByEmail","email","searchUsersByName","name","createUser","user","post","updateUser","userUpdate","put","deleteUser","delete","deactivateUser","patch","activateUser","test","responseType","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["/Users/ent-00387/Documents/end-to-end/Ui/src/app/services/user.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { User, UserUpdate, ApiResponse } from '../models/user.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n  private apiUrl = 'http://localhost:8080/api';\n\n  constructor(private http: HttpClient) { }\n\n  // Get all users\n  getAllUsers(): Observable<ApiResponse<User[]>> {\n    return this.http.get<ApiResponse<User[]>>(`${this.apiUrl}/users`);\n  }\n\n  // Get active users\n  getActiveUsers(): Observable<ApiResponse<User[]>> {\n    return this.http.get<ApiResponse<User[]>>(`${this.apiUrl}/users/active`);\n  }\n\n  // Get user by ID\n  getUserById(id: number): Observable<ApiResponse<User>> {\n    console.log('UserService: Making GET request to:', `${this.apiUrl}/users/${id}`);\n    return this.http.get<ApiResponse<User>>(`${this.apiUrl}/users/${id}`);\n  }\n\n  // Get user by email\n  getUserByEmail(email: string): Observable<ApiResponse<User>> {\n    return this.http.get<ApiResponse<User>>(`${this.apiUrl}/users/email/${email}`);\n  }\n\n  // Search users by name\n  searchUsersByName(name: string): Observable<ApiResponse<User[]>> {\n    return this.http.get<ApiResponse<User[]>>(`${this.apiUrl}/users/search?name=${name}`);\n  }\n\n  // Create user\n  createUser(user: User): Observable<ApiResponse<User>> {\n    return this.http.post<ApiResponse<User>>(`${this.apiUrl}/users`, user);\n  }\n\n  // Update user\n  updateUser(id: number, userUpdate: UserUpdate): Observable<ApiResponse<User>> {\n    return this.http.put<ApiResponse<User>>(`${this.apiUrl}/users/${id}`, userUpdate);\n  }\n\n  // Delete user\n  deleteUser(id: number): Observable<ApiResponse<string>> {\n    return this.http.delete<ApiResponse<string>>(`${this.apiUrl}/users/${id}`);\n  }\n\n  // Deactivate user\n  deactivateUser(id: number): Observable<ApiResponse<string>> {\n    return this.http.patch<ApiResponse<string>>(`${this.apiUrl}/users/${id}/deactivate`, {});\n  }\n\n  // Activate user\n  activateUser(id: number): Observable<ApiResponse<string>> {\n    return this.http.patch<ApiResponse<string>>(`${this.apiUrl}/users/${id}/activate`, {});\n  }\n\n  // Test endpoint\n  test(): Observable<string> {\n    return this.http.get(`${this.apiUrl}/test`, { responseType: 'text' });\n  }\n} "],"mappings":";;AAQA,OAAM,MAAOA,WAAW;EAGtBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,MAAM,GAAG,2BAA2B;EAEJ;EAExC;EACAC,WAAWA,CAAA;IACT,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAsB,GAAG,IAAI,CAACF,MAAM,QAAQ,CAAC;EACnE;EAEA;EACAG,cAAcA,CAAA;IACZ,OAAO,IAAI,CAACJ,IAAI,CAACG,GAAG,CAAsB,GAAG,IAAI,CAACF,MAAM,eAAe,CAAC;EAC1E;EAEA;EACAI,WAAWA,CAACC,EAAU;IACpBC,OAAO,CAACC,GAAG,CAAC,qCAAqC,EAAE,GAAG,IAAI,CAACP,MAAM,UAAUK,EAAE,EAAE,CAAC;IAChF,OAAO,IAAI,CAACN,IAAI,CAACG,GAAG,CAAoB,GAAG,IAAI,CAACF,MAAM,UAAUK,EAAE,EAAE,CAAC;EACvE;EAEA;EACAG,cAAcA,CAACC,KAAa;IAC1B,OAAO,IAAI,CAACV,IAAI,CAACG,GAAG,CAAoB,GAAG,IAAI,CAACF,MAAM,gBAAgBS,KAAK,EAAE,CAAC;EAChF;EAEA;EACAC,iBAAiBA,CAACC,IAAY;IAC5B,OAAO,IAAI,CAACZ,IAAI,CAACG,GAAG,CAAsB,GAAG,IAAI,CAACF,MAAM,sBAAsBW,IAAI,EAAE,CAAC;EACvF;EAEA;EACAC,UAAUA,CAACC,IAAU;IACnB,OAAO,IAAI,CAACd,IAAI,CAACe,IAAI,CAAoB,GAAG,IAAI,CAACd,MAAM,QAAQ,EAAEa,IAAI,CAAC;EACxE;EAEA;EACAE,UAAUA,CAACV,EAAU,EAAEW,UAAsB;IAC3C,OAAO,IAAI,CAACjB,IAAI,CAACkB,GAAG,CAAoB,GAAG,IAAI,CAACjB,MAAM,UAAUK,EAAE,EAAE,EAAEW,UAAU,CAAC;EACnF;EAEA;EACAE,UAAUA,CAACb,EAAU;IACnB,OAAO,IAAI,CAACN,IAAI,CAACoB,MAAM,CAAsB,GAAG,IAAI,CAACnB,MAAM,UAAUK,EAAE,EAAE,CAAC;EAC5E;EAEA;EACAe,cAAcA,CAACf,EAAU;IACvB,OAAO,IAAI,CAACN,IAAI,CAACsB,KAAK,CAAsB,GAAG,IAAI,CAACrB,MAAM,UAAUK,EAAE,aAAa,EAAE,EAAE,CAAC;EAC1F;EAEA;EACAiB,YAAYA,CAACjB,EAAU;IACrB,OAAO,IAAI,CAACN,IAAI,CAACsB,KAAK,CAAsB,GAAG,IAAI,CAACrB,MAAM,UAAUK,EAAE,WAAW,EAAE,EAAE,CAAC;EACxF;EAEA;EACAkB,IAAIA,CAAA;IACF,OAAO,IAAI,CAACxB,IAAI,CAACG,GAAG,CAAC,GAAG,IAAI,CAACF,MAAM,OAAO,EAAE;MAAEwB,YAAY,EAAE;IAAM,CAAE,CAAC;EACvE;;;uBA3DW3B,WAAW,EAAA4B,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;EAAA;;;aAAX/B,WAAW;MAAAgC,OAAA,EAAXhC,WAAW,CAAAiC,IAAA;MAAAC,UAAA,EAFV;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}