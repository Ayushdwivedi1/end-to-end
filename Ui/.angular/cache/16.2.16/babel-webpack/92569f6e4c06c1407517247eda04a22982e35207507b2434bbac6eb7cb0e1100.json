{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/auth.service\";\nimport * as i2 from \"../../services/ai-chat.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nconst _c0 = [\"chatContainer\"];\nconst _c1 = [\"messageInput\"];\nfunction ChatComponent_div_19_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 35);\n    i0.ɵɵelement(1, \"i\", 4);\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ChatComponent_div_19_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r10 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 36)(1, \"button\", 37);\n    i0.ɵɵlistener(\"click\", function ChatComponent_div_19_div_9_Template_button_click_1_listener() {\n      i0.ɵɵrestoreView(_r10);\n      const message_r4 = i0.ɵɵnextContext().$implicit;\n      const ctx_r8 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r8.submitFeedback(message_r4.aiResponseId, message_r4.conversationId, 5, \"Great response!\"));\n    });\n    i0.ɵɵelement(2, \"i\", 38);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"button\", 39);\n    i0.ɵɵlistener(\"click\", function ChatComponent_div_19_div_9_Template_button_click_3_listener() {\n      i0.ɵɵrestoreView(_r10);\n      const message_r4 = i0.ɵɵnextContext().$implicit;\n      const ctx_r11 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r11.submitFeedback(message_r4.aiResponseId, message_r4.conversationId, 1, \"Could be better\"));\n    });\n    i0.ɵɵelement(4, \"i\", 40);\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction ChatComponent_div_19_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 41);\n    i0.ɵɵelement(1, \"i\", 42);\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ChatComponent_div_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 27)(1, \"div\", 28);\n    i0.ɵɵtemplate(2, ChatComponent_div_19_div_2_Template, 2, 0, \"div\", 29);\n    i0.ɵɵelementStart(3, \"div\", 30)(4, \"div\", 31);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"div\", 32);\n    i0.ɵɵtext(7);\n    i0.ɵɵpipe(8, \"date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(9, ChatComponent_div_19_div_9_Template, 5, 0, \"div\", 33);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(10, ChatComponent_div_19_div_10_Template, 2, 0, \"div\", 34);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const message_r4 = ctx.$implicit;\n    i0.ɵɵproperty(\"ngClass\", message_r4.sender === \"user\" ? \"user-message\" : \"ai-message\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", message_r4.sender === \"ai\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(message_r4.text);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind2(8, 6, message_r4.timestamp, \"shortTime\"), \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", message_r4.sender === \"ai\" && message_r4.aiResponseId);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", message_r4.sender === \"user\");\n  }\n}\nfunction ChatComponent_div_20_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 28)(1, \"div\", 35);\n    i0.ɵɵelement(2, \"i\", 4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 30)(4, \"div\", 45)(5, \"div\", 46);\n    i0.ɵɵelement(6, \"span\")(7, \"span\")(8, \"span\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"div\", 47);\n    i0.ɵɵtext(10, \"AI is thinking...\");\n    i0.ɵɵelementEnd()()()();\n  }\n}\nfunction ChatComponent_div_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 43);\n    i0.ɵɵtemplate(1, ChatComponent_div_20_div_1_Template, 11, 0, \"div\", 44);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const message_r13 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", message_r13.isLoading);\n  }\n}\nexport class ChatComponent {\n  constructor(authService, aiChatService) {\n    this.authService = authService;\n    this.aiChatService = aiChatService;\n    this.messages = [];\n    this.newMessage = '';\n    this.userData = null;\n    this.isTyping = false;\n    this.isListening = false;\n    this.isSpeaking = false;\n    this.recognition = null;\n    this.synthesis = null;\n    this.currentConversationId = null;\n    this.isLoading = false;\n    // Voice customization settings\n    this.voiceSettings = {\n      rate: 0.9,\n      pitch: 1.05,\n      volume: 0.95,\n      voiceName: '',\n      language: 'auto' // Language preference\n    };\n\n    this.availableVoices = [];\n    this.showVoiceSettings = false;\n  }\n  ngOnInit() {\n    this.userData = this.authService.getUserData();\n    this.addWelcomeMessage();\n    this.initializeSpeech();\n    // Load voices when they become available\n    if (this.synthesis) {\n      this.synthesis.onvoiceschanged = () => {\n        this.availableVoices = this.synthesis?.getVoices() || [];\n        console.log('Voices loaded:', this.availableVoices.length);\n        this.loadVoiceSettings();\n      };\n    }\n  }\n  ngAfterViewChecked() {\n    this.scrollToBottom();\n  }\n  addWelcomeMessage() {\n    this.messages.push({\n      id: 1,\n      text: `Namaste ${this.userData?.firstName || this.userData?.username}! Main aapka AI assistant hoon. Aapko kya help chahiye aaj?`,\n      sender: 'ai',\n      timestamp: new Date()\n    });\n  }\n  sendMessage() {\n    if (this.newMessage.trim() && !this.isTyping && !this.isLoading) {\n      const userMessage = {\n        id: this.messages.length + 1,\n        text: this.newMessage.trim(),\n        sender: 'user',\n        timestamp: new Date()\n      };\n      this.messages.push(userMessage);\n      const userInput = this.newMessage;\n      this.newMessage = '';\n      this.isTyping = true;\n      this.isLoading = true;\n      // Add loading message\n      const loadingMessage = {\n        id: this.messages.length + 1,\n        text: 'Thinking...',\n        sender: 'ai',\n        timestamp: new Date(),\n        isLoading: true\n      };\n      this.messages.push(loadingMessage);\n      // Send to AI backend\n      const request = {\n        question: userInput,\n        userId: this.userData?.id?.toString() || this.userData?.username,\n        conversationId: this.currentConversationId || undefined\n      };\n      this.aiChatService.sendQuestion(request).subscribe({\n        next: response => {\n          // Remove loading message\n          this.messages = this.messages.filter(msg => !msg.isLoading);\n          // Store conversation ID for future messages\n          this.currentConversationId = response.conversationId?.toString() || null;\n          // Add AI response\n          const aiMessage = {\n            id: this.messages.length + 1,\n            text: response.response,\n            sender: 'ai',\n            timestamp: new Date(),\n            aiResponseId: response.conversationId?.toString() || '',\n            conversationId: response.conversationId?.toString() || ''\n          };\n          this.messages.push(aiMessage);\n          this.isTyping = false;\n          this.isLoading = false;\n        },\n        error: error => {\n          console.error('Error getting AI response:', error);\n          // Remove loading message\n          this.messages = this.messages.filter(msg => !msg.isLoading);\n          // Add error message\n          const errorMessage = {\n            id: this.messages.length + 1,\n            text: 'Sorry, main abhi aapki help nahi kar pa raha hoon. Please try again later.',\n            sender: 'ai',\n            timestamp: new Date()\n          };\n          this.messages.push(errorMessage);\n          this.isTyping = false;\n          this.isLoading = false;\n        }\n      });\n    }\n  }\n  onKeyPress(event) {\n    if (event.key === 'Enter' && !event.shiftKey) {\n      event.preventDefault();\n      this.sendMessage();\n    }\n  }\n  scrollToBottom() {\n    try {\n      this.chatContainer.nativeElement.scrollTop = this.chatContainer.nativeElement.scrollHeight;\n    } catch (err) {}\n  }\n  clearChat() {\n    this.messages = [];\n    this.currentConversationId = null;\n    this.addWelcomeMessage();\n  }\n  focusInput() {\n    setTimeout(() => {\n      this.messageInput.nativeElement.focus();\n    }, 100);\n  }\n  submitFeedback(questionId, conversationId, rating, feedback) {\n    const feedbackRequest = {\n      conversationId: conversationId,\n      questionId: questionId,\n      rating: rating,\n      feedback: feedback\n    };\n    this.aiChatService.submitFeedback(feedbackRequest).subscribe({\n      next: response => {\n        console.log('Feedback submitted successfully:', response);\n        // Show a brief success message\n        this.showFeedbackMessage('Thank you for your feedback!');\n      },\n      error: error => {\n        console.error('Error submitting feedback:', error);\n        this.showFeedbackMessage('Failed to submit feedback. Please try again.');\n      }\n    });\n  }\n  showFeedbackMessage(message) {\n    // Create a temporary feedback message\n    const feedbackMessage = {\n      id: this.messages.length + 1,\n      text: message,\n      sender: 'ai',\n      timestamp: new Date()\n    };\n    this.messages.push(feedbackMessage);\n    // Remove the feedback message after 3 seconds\n    setTimeout(() => {\n      this.messages = this.messages.filter(msg => msg.id !== feedbackMessage.id);\n    }, 3000);\n  }\n  initializeSpeech() {\n    // Initialize speech synthesis\n    if ('speechSynthesis' in window) {\n      this.synthesis = window.speechSynthesis;\n    }\n    // Initialize speech recognition\n    if ('webkitSpeechRecognition' in window) {\n      this.recognition = new window.webkitSpeechRecognition();\n      this.recognition.continuous = false;\n      this.recognition.interimResults = false;\n      this.recognition.lang = 'hi-IN'; // Hindi (India)\n      this.recognition.maxAlternatives = 3; // Get multiple recognition alternatives\n      this.recognition.onstart = () => {\n        this.isListening = true;\n      };\n      this.recognition.onresult = event => {\n        const transcript = event.results[0][0].transcript;\n        // Convert Hindi speech to English text\n        const englishText = this.convertHindiToEnglish(transcript);\n        this.newMessage = englishText;\n        this.isListening = false;\n      };\n      this.recognition.onerror = event => {\n        console.error('Speech recognition error:', event.error);\n        this.isListening = false;\n      };\n      this.recognition.onend = () => {\n        this.isListening = false;\n      };\n    }\n  }\n  startListening() {\n    if (this.recognition && !this.isListening) {\n      try {\n        this.recognition.start();\n      } catch (error) {\n        console.error('Error starting speech recognition:', error);\n        this.isListening = false;\n      }\n    }\n  }\n  stopListening() {\n    if (this.recognition && this.isListening) {\n      try {\n        this.recognition.stop();\n      } catch (error) {\n        console.error('Error stopping speech recognition:', error);\n      }\n    }\n  }\n  speakMessage(text) {\n    if (this.synthesis) {\n      try {\n        // Stop any current speech\n        this.synthesis.cancel();\n        // Process text for more natural speech\n        const processedText = this.processTextForSpeech(text);\n        const utterance = new SpeechSynthesisUtterance(processedText);\n        // Enhanced voice selection for more genuine AI voice\n        const voices = this.synthesis.getVoices();\n        const preferredVoices = [\n        // Premium Neural voices for best quality\n        'hi-IN-NeerjaNeural', 'en-IN-NeerjaNeural', 'hi-IN-MadhurNeural', 'en-IN-PrabhatNeural', 'en-US-JennyNeural', 'en-US-GuyNeural', 'en-GB-SoniaNeural', 'en-GB-RyanNeural',\n        // Fallback voices\n        'hi-IN', 'en-IN', 'en-US', 'en-GB' // British English\n        ];\n        // Find the best available voice with enhanced selection\n        let selectedVoice = this.selectBestVoice(voices, preferredVoices);\n        if (selectedVoice) {\n          utterance.voice = selectedVoice;\n          console.log('Selected voice:', selectedVoice.name, 'Language:', selectedVoice.lang);\n        }\n        // Optimize speech parameters for genuine AI voice\n        utterance.rate = 0.9; // Slightly slower for more natural pace\n        utterance.pitch = 1.05; // Slightly higher pitch for AI personality\n        utterance.volume = 0.95; // High volume but not max for natural sound\n        utterance.lang = this.detectLanguage(text); // Auto-detect language\n        // Add natural pauses and emphasis\n        this.addSpeechEvents(utterance);\n        this.synthesis.speak(utterance);\n      } catch (error) {\n        console.error('Error with speech synthesis:', error);\n        this.isSpeaking = false;\n      }\n    }\n  }\n  processTextForSpeech(text) {\n    // Add natural pauses and emphasis for more genuine speech\n    let processedText = text;\n    // Add pauses after sentences\n    processedText = processedText.replace(/\\./g, '... ');\n    processedText = processedText.replace(/\\!/g, '!... ');\n    processedText = processedText.replace(/\\?/g, '?... ');\n    // Add emphasis to important words\n    processedText = processedText.replace(/\\b(Ayush Dwivedi|Alka Dwivedi|Anshi Shukla|Vijay Kumar Dwivedi|Shreya Dwivedi)\\b/gi, '<emphasis level=\"strong\">$1</emphasis>');\n    // Add natural pauses for better flow\n    processedText = processedText.replace(/,/g, ',... ');\n    processedText = processedText.replace(/;/g, ';... ');\n    // Optimize for Hindi-English mixed speech\n    if (this.containsHindi(text)) {\n      processedText = this.optimizeHindiEnglishSpeech(processedText);\n    }\n    return processedText;\n  }\n  selectBestVoice(voices, preferredVoices) {\n    // First, try to find exact matches from preferred voices\n    for (const voiceName of preferredVoices) {\n      const voice = voices.find(v => v.name === voiceName);\n      if (voice) {\n        return voice;\n      }\n    }\n    // If no exact match, find best available voice by language\n    const languagePreferences = ['hi-IN', 'en-IN', 'en-US', 'en-GB'];\n    for (const lang of languagePreferences) {\n      const voice = voices.find(v => v.lang.startsWith(lang));\n      if (voice) {\n        return voice;\n      }\n    }\n    // Fallback to any available voice\n    return voices.length > 0 ? voices[0] : null;\n  }\n  detectLanguage(text) {\n    // Simple language detection for Hindi vs English\n    const hindiWords = ['है', 'में', 'आप', 'मुझे', 'क्या', 'कैसे', 'कहाँ', 'कब', 'कौन', 'मदद', 'समस्या', 'समाधान'];\n    const hasHindi = hindiWords.some(word => text.includes(word));\n    if (hasHindi) {\n      return 'hi-IN';\n    } else {\n      return 'en-US';\n    }\n  }\n  containsHindi(text) {\n    const hindiPattern = /[\\u0900-\\u097F]/;\n    return hindiPattern.test(text);\n  }\n  optimizeHindiEnglishSpeech(text) {\n    // Add natural pauses between Hindi and English words\n    text = text.replace(/([a-zA-Z]+)([हैमेंआपमुझेक्याकैसेकहाँकबकौन])/g, '$1... $2');\n    text = text.replace(/([हैमेंआपमुझेक्याकैसेकहाँकबकौन])([a-zA-Z]+)/g, '$1... $2');\n    return text;\n  }\n  addSpeechEvents(utterance) {\n    utterance.onstart = () => {\n      this.isSpeaking = true;\n      console.log('AI started speaking');\n    };\n    utterance.onend = () => {\n      this.isSpeaking = false;\n      console.log('AI finished speaking');\n    };\n    utterance.onpause = () => {\n      console.log('AI speech paused');\n    };\n    utterance.onresume = () => {\n      console.log('AI speech resumed');\n    };\n    utterance.onerror = event => {\n      console.error('Speech synthesis error:', event);\n      this.isSpeaking = false;\n    };\n  }\n  stopSpeaking() {\n    if (this.synthesis) {\n      try {\n        this.synthesis.cancel();\n        this.isSpeaking = false;\n      } catch (error) {\n        console.error('Error stopping speech synthesis:', error);\n      }\n    }\n  }\n  toggleSpeech() {\n    if (this.isSpeaking) {\n      this.stopSpeaking();\n    } else {\n      // Speak the last AI message\n      const lastAiMessage = this.messages.filter(msg => msg.sender === 'ai').pop();\n      if (lastAiMessage) {\n        this.speakMessage(lastAiMessage.text);\n      }\n    }\n  }\n  getAvailableVoices() {\n    if (this.synthesis) {\n      const voices = this.synthesis.getVoices();\n      console.log('Available voices:');\n      voices.forEach(voice => {\n        console.log(`- ${voice.name} (${voice.lang})`);\n      });\n    }\n  }\n  convertHindiToEnglish(hindiText) {\n    // Common Hindi to English word mappings\n    const hindiToEnglish = {\n      // Basic words\n      'नमस्ते': 'namaste',\n      'है': 'hai',\n      'में': 'main',\n      'आप': 'aap',\n      'मुझे': 'mujhe',\n      'क्या': 'kya',\n      'कैसे': 'kaise',\n      'कहाँ': 'kahan',\n      'कब': 'kab',\n      'कौन': 'kaun',\n      // Common phrases\n      'मदद': 'help',\n      'समस्या': 'problem',\n      'समाधान': 'solution',\n      'जानकारी': 'information',\n      'प्रश्न': 'question',\n      'उत्तर': 'answer',\n      'सहायता': 'assistance',\n      'सेवा': 'service',\n      // Actions\n      'करना': 'karna',\n      'जाना': 'jana',\n      'आना': 'aana',\n      'देखना': 'dekhna',\n      'सुनना': 'sunna',\n      'बोलना': 'bolna',\n      'समझना': 'samajhna',\n      'सोचना': 'sochna',\n      // Time related\n      'आज': 'aaj',\n      'कल': 'kal',\n      'परसों': 'parson',\n      'सुबह': 'subah',\n      'शाम': 'sham',\n      'रात': 'raat',\n      'दिन': 'din',\n      // Numbers\n      'एक': 'ek',\n      'दो': 'do',\n      'तीन': 'teen',\n      'चार': 'char',\n      'पांच': 'paanch',\n      'छह': 'cheh',\n      'सात': 'saat',\n      'आठ': 'aath',\n      'नौ': 'nau',\n      'दस': 'das',\n      // Common expressions\n      'धन्यवाद': 'thank you',\n      'कृपया': 'please',\n      'माफ़ करें': 'sorry',\n      'ठीक है': 'okay',\n      'हाँ': 'yes',\n      'नहीं': 'no',\n      'बहुत': 'bahut',\n      'अच्छा': 'accha',\n      'बुरा': 'bura',\n      // Technology terms\n      'कंप्यूटर': 'computer',\n      'मोबाइल': 'mobile',\n      'इंटरनेट': 'internet',\n      'वेबसाइट': 'website',\n      'एप्लिकेशन': 'application',\n      'सिस्टम': 'system',\n      'डेटा': 'data',\n      'फ़ाइल': 'file',\n      // Business terms\n      'कंपनी': 'company',\n      'कार्यालय': 'office',\n      'कार्य': 'work',\n      'पैसा': 'money',\n      'लेनदेन': 'transaction',\n      'खाता': 'account',\n      'बैंक': 'bank',\n      // Family and relationships\n      'परिवार': 'family',\n      'दोस्त': 'friend',\n      'भाई': 'bhai',\n      'बहन': 'behen',\n      'माता': 'mata',\n      'पिता': 'pita',\n      'बेटा': 'beta',\n      'बेटी': 'beti'\n    };\n    let englishText = hindiText;\n    // Convert Hindi words to English\n    for (const [hindi, english] of Object.entries(hindiToEnglish)) {\n      const regex = new RegExp(hindi, 'gi');\n      englishText = englishText.replace(regex, english);\n    }\n    // Handle common Hindi patterns\n    englishText = englishText.replace(/हूँ/g, 'hoon').replace(/हैं/g, 'hain').replace(/था/g, 'tha').replace(/थी/g, 'thi').replace(/थे/g, 'the').replace(/रहा/g, 'raha').replace(/रही/g, 'rahi').replace(/रहे/g, 'rahe').replace(/कर/g, 'kar').replace(/की/g, 'ki').replace(/का/g, 'ka').replace(/के/g, 'ke').replace(/को/g, 'ko').replace(/से/g, 'se').replace(/में/g, 'main').replace(/पर/g, 'par').replace(/तक/g, 'tak').replace(/साथ/g, 'saath').replace(/बिना/g, 'bina').replace(/लिए/g, 'liye').replace(/द्वारा/g, 'dwara').replace(/के लिए/g, 'ke liye').replace(/की तरह/g, 'ki tarah').replace(/के बारे में/g, 'ke bare mein').replace(/के साथ/g, 'ke saath').replace(/के बिना/g, 'ke bina').replace(/के बाद/g, 'ke baad').replace(/के पहले/g, 'ke pehle').replace(/के अंदर/g, 'ke andar').replace(/के बाहर/g, 'ke bahar').replace(/के ऊपर/g, 'ke upar').replace(/के नीचे/g, 'ke neeche').replace(/के आगे/g, 'ke aage').replace(/के पीछे/g, 'ke peeche').replace(/के दाएं/g, 'ke daayein').replace(/के बाएं/g, 'ke baayein');\n    return englishText;\n  }\n  // Voice customization methods\n  toggleVoiceSettings() {\n    this.showVoiceSettings = !this.showVoiceSettings;\n  }\n  updateVoiceSettings(setting, value) {\n    this.voiceSettings[setting] = value;\n    this.saveVoiceSettings();\n  }\n  selectVoice(voiceName) {\n    this.voiceSettings.voiceName = voiceName;\n    this.saveVoiceSettings();\n    console.log('Voice selected:', voiceName);\n  }\n  loadVoiceSettings() {\n    const saved = localStorage.getItem('aiVoiceSettings');\n    if (saved) {\n      this.voiceSettings = {\n        ...this.voiceSettings,\n        ...JSON.parse(saved)\n      };\n    }\n  }\n  saveVoiceSettings() {\n    localStorage.setItem('aiVoiceSettings', JSON.stringify(this.voiceSettings));\n  }\n  getFilteredVoices() {\n    if (this.voiceSettings.language === 'auto') {\n      return this.availableVoices;\n    }\n    return this.availableVoices.filter(voice => voice.lang.startsWith(this.voiceSettings.language));\n  }\n  getVoiceDisplayName(voice) {\n    const lang = voice.lang.split('-')[0];\n    const country = voice.lang.split('-')[1];\n    const isNeural = voice.name.includes('Neural');\n    let displayName = voice.name;\n    if (isNeural) {\n      displayName += ' (Neural)';\n    }\n    displayName += ` (${lang.toUpperCase()}-${country})`;\n    return displayName;\n  }\n  static {\n    this.ɵfac = function ChatComponent_Factory(t) {\n      return new (t || ChatComponent)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.AiChatService));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: ChatComponent,\n      selectors: [[\"app-chat\"]],\n      viewQuery: function ChatComponent_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(_c0, 5);\n          i0.ɵɵviewQuery(_c1, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.chatContainer = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.messageInput = _t.first);\n        }\n      },\n      decls: 33,\n      vars: 20,\n      consts: [[1, \"chat-container\"], [1, \"chat-header\"], [1, \"chat-header-content\"], [1, \"ai-avatar\"], [1, \"bi\", \"bi-robot\"], [1, \"chat-info\"], [1, \"status\"], [1, \"status-dot\"], [1, \"chat-actions\"], [\"title\", \"Speak Last AI Message\", 1, \"btn\", \"btn-speak\", 3, \"click\"], [1, \"bi\"], [\"title\", \"Clear Chat\", 1, \"btn\", \"btn-clear\", 3, \"click\"], [1, \"bi\", \"bi-trash\"], [1, \"chat-messages\"], [\"chatContainer\", \"\"], [1, \"messages-container\"], [\"class\", \"message-wrapper\", 3, \"ngClass\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"message-wrapper ai-message\", 4, \"ngFor\", \"ngForOf\"], [1, \"chat-input-container\"], [1, \"chat-input-wrapper\"], [1, \"input-group\"], [\"placeholder\", \"Type your message here...\", \"rows\", \"1\", \"maxlength\", \"500\", 1, \"form-control\", \"chat-input\", 3, \"ngModel\", \"ngModelChange\", \"keypress\"], [\"messageInput\", \"\"], [\"title\", \"Voice Input\", 1, \"btn\", \"btn-mic\", 3, \"click\"], [1, \"btn\", \"btn-send\", 3, \"disabled\", \"click\"], [1, \"input-footer\"], [1, \"text-muted\"], [1, \"message-wrapper\", 3, \"ngClass\"], [1, \"message\"], [\"class\", \"message-avatar\", 4, \"ngIf\"], [1, \"message-content\"], [1, \"message-text\"], [1, \"message-time\"], [\"class\", \"message-feedback\", 4, \"ngIf\"], [\"class\", \"message-avatar user-avatar\", 4, \"ngIf\"], [1, \"message-avatar\"], [1, \"message-feedback\"], [\"title\", \"Good response\", 1, \"btn-feedback\", \"btn-thumbs-up\", 3, \"click\"], [1, \"bi\", \"bi-hand-thumbs-up\"], [\"title\", \"Poor response\", 1, \"btn-feedback\", \"btn-thumbs-down\", 3, \"click\"], [1, \"bi\", \"bi-hand-thumbs-down\"], [1, \"message-avatar\", \"user-avatar\"], [1, \"bi\", \"bi-person\"], [1, \"message-wrapper\", \"ai-message\"], [\"class\", \"message\", 4, \"ngIf\"], [1, \"loading-message\"], [1, \"typing-indicator\"], [1, \"loading-text\"]],\n      template: function ChatComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3);\n          i0.ɵɵelement(4, \"i\", 4);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(5, \"div\", 5)(6, \"h3\");\n          i0.ɵɵtext(7, \"AI Assistant\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(8, \"p\", 6);\n          i0.ɵɵelement(9, \"span\", 7);\n          i0.ɵɵtext(10, \" Online \");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(11, \"div\", 8)(12, \"button\", 9);\n          i0.ɵɵlistener(\"click\", function ChatComponent_Template_button_click_12_listener() {\n            return ctx.toggleSpeech();\n          });\n          i0.ɵɵelement(13, \"i\", 10);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(14, \"button\", 11);\n          i0.ɵɵlistener(\"click\", function ChatComponent_Template_button_click_14_listener() {\n            return ctx.clearChat();\n          });\n          i0.ɵɵelement(15, \"i\", 12);\n          i0.ɵɵelementEnd()()()();\n          i0.ɵɵelementStart(16, \"div\", 13, 14)(18, \"div\", 15);\n          i0.ɵɵtemplate(19, ChatComponent_div_19_Template, 11, 9, \"div\", 16);\n          i0.ɵɵtemplate(20, ChatComponent_div_20_Template, 2, 1, \"div\", 17);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(21, \"div\", 18)(22, \"div\", 19)(23, \"div\", 20)(24, \"textarea\", 21, 22);\n          i0.ɵɵlistener(\"ngModelChange\", function ChatComponent_Template_textarea_ngModelChange_24_listener($event) {\n            return ctx.newMessage = $event;\n          })(\"keypress\", function ChatComponent_Template_textarea_keypress_24_listener($event) {\n            return ctx.onKeyPress($event);\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(26, \"button\", 23);\n          i0.ɵɵlistener(\"click\", function ChatComponent_Template_button_click_26_listener() {\n            return ctx.isListening ? ctx.stopListening() : ctx.startListening();\n          });\n          i0.ɵɵelement(27, \"i\", 10);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(28, \"button\", 24);\n          i0.ɵɵlistener(\"click\", function ChatComponent_Template_button_click_28_listener() {\n            return ctx.sendMessage();\n          });\n          i0.ɵɵelement(29, \"i\", 10);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(30, \"div\", 25)(31, \"small\", 26);\n          i0.ɵɵtext(32, \" Press Enter to send, Shift+Enter for new line \");\n          i0.ɵɵelementEnd()()()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(13);\n          i0.ɵɵclassProp(\"bi-volume-up\", !ctx.isSpeaking)(\"bi-volume-mute\", ctx.isSpeaking);\n          i0.ɵɵadvance(6);\n          i0.ɵɵproperty(\"ngForOf\", ctx.messages);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngForOf\", ctx.messages);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngModel\", ctx.newMessage);\n          i0.ɵɵadvance(2);\n          i0.ɵɵclassProp(\"listening\", ctx.isListening);\n          i0.ɵɵadvance(1);\n          i0.ɵɵclassProp(\"bi-mic\", !ctx.isListening)(\"bi-mic-mute\", ctx.isListening);\n          i0.ɵɵadvance(1);\n          i0.ɵɵclassProp(\"loading\", ctx.isLoading);\n          i0.ɵɵproperty(\"disabled\", !ctx.newMessage.trim() || ctx.isTyping || ctx.isLoading);\n          i0.ɵɵadvance(1);\n          i0.ɵɵclassProp(\"bi-send\", !ctx.isLoading)(\"bi-hourglass-split\", ctx.isLoading);\n        }\n      },\n      dependencies: [i3.NgClass, i3.NgForOf, i3.NgIf, i4.DefaultValueAccessor, i4.NgControlStatus, i4.MaxLengthValidator, i4.NgModel, i3.DatePipe],\n      styles: [\"\\n\\n.chat-container[_ngcontent-%COMP%] {\\n  height: calc(100vh - 80px);\\n  display: flex;\\n  flex-direction: column;\\n  background: linear-gradient(135deg, #0f0f23 0%, #1a1a2e 25%, #16213e 50%, #0f3460 75%, #533483 100%);\\n  position: relative;\\n  overflow: hidden;\\n}\\n\\n.chat-container[_ngcontent-%COMP%]::before {\\n  content: '';\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  right: 0;\\n  bottom: 0;\\n  background: \\n    radial-gradient(circle at 20% 80%, rgba(120, 119, 198, 0.1) 0%, transparent 50%),\\n    radial-gradient(circle at 80% 20%, rgba(255, 119, 198, 0.1) 0%, transparent 50%),\\n    radial-gradient(circle at 40% 40%, rgba(120, 219, 255, 0.05) 0%, transparent 50%);\\n  pointer-events: none;\\n  z-index: 0;\\n}\\n\\n\\n\\n.chat-header[_ngcontent-%COMP%] {\\n  background: rgba(15, 15, 35, 0.9);\\n  -webkit-backdrop-filter: blur(20px);\\n          backdrop-filter: blur(20px);\\n  border-bottom: 1px solid rgba(120, 119, 198, 0.3);\\n  padding: 1rem;\\n  position: relative;\\n  z-index: 1;\\n}\\n\\n.chat-header-content[_ngcontent-%COMP%] {\\n  display: flex;\\n  align-items: center;\\n  justify-content: space-between;\\n}\\n\\n.ai-avatar[_ngcontent-%COMP%] {\\n  width: 50px;\\n  height: 50px;\\n  background: linear-gradient(45deg, #00d4ff, #4ecdc4);\\n  border-radius: 50%;\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  font-size: 1.5rem;\\n  color: white;\\n  box-shadow: 0 4px 15px rgba(0, 212, 255, 0.3);\\n  animation: _ngcontent-%COMP%_pulse 2s ease-in-out infinite;\\n}\\n\\n@keyframes _ngcontent-%COMP%_pulse {\\n  0%, 100% { transform: scale(1); }\\n  50% { transform: scale(1.05); }\\n}\\n\\n.chat-info[_ngcontent-%COMP%]   h3[_ngcontent-%COMP%] {\\n  color: #ffffff;\\n  margin: 0;\\n  font-size: 1.2rem;\\n  font-weight: 600;\\n}\\n\\n.status[_ngcontent-%COMP%] {\\n  color: #b8b8d1;\\n  margin: 0;\\n  font-size: 0.9rem;\\n  display: flex;\\n  align-items: center;\\n  gap: 0.5rem;\\n}\\n\\n.status-dot[_ngcontent-%COMP%] {\\n  width: 8px;\\n  height: 8px;\\n  background: #00ff88;\\n  border-radius: 50%;\\n  animation: _ngcontent-%COMP%_blink 2s ease-in-out infinite;\\n}\\n\\n@keyframes _ngcontent-%COMP%_blink {\\n  0%, 100% { opacity: 1; }\\n  50% { opacity: 0.5; }\\n}\\n\\n.btn-clear[_ngcontent-%COMP%] {\\n  background: rgba(255, 255, 255, 0.1);\\n  border: 1px solid rgba(255, 255, 255, 0.2);\\n  color: #b8b8d1;\\n  border-radius: 8px;\\n  padding: 0.5rem;\\n  transition: all 0.3s ease;\\n}\\n\\n.btn-clear[_ngcontent-%COMP%]:hover {\\n  background: rgba(239, 68, 68, 0.2);\\n  border-color: #ef4444;\\n  color: #ef4444;\\n  transform: scale(1.1);\\n}\\n\\n.btn-speak[_ngcontent-%COMP%] {\\n  background: rgba(255, 255, 255, 0.1);\\n  border: 1px solid rgba(255, 255, 255, 0.2);\\n  color: #b8b8d1;\\n  border-radius: 8px;\\n  padding: 0.5rem;\\n  transition: all 0.3s ease;\\n  margin-right: 0.5rem;\\n}\\n\\n.btn-speak[_ngcontent-%COMP%]:hover {\\n  background: rgba(0, 212, 255, 0.2);\\n  border-color: #00d4ff;\\n  color: #00d4ff;\\n  transform: scale(1.1);\\n}\\n\\n.btn-speak[_ngcontent-%COMP%]   i[_ngcontent-%COMP%] {\\n  font-size: 1.1rem;\\n}\\n\\n\\n\\n.chat-messages[_ngcontent-%COMP%] {\\n  flex: 1;\\n  overflow-y: auto;\\n  padding: 1rem;\\n  position: relative;\\n  z-index: 1;\\n}\\n\\n.messages-container[_ngcontent-%COMP%] {\\n  max-width: 800px;\\n  margin: 0 auto;\\n}\\n\\n.message-wrapper[_ngcontent-%COMP%] {\\n  margin-bottom: 1rem;\\n  animation: _ngcontent-%COMP%_fadeInUp 0.3s ease-out;\\n}\\n\\n@keyframes _ngcontent-%COMP%_fadeInUp {\\n  from {\\n    opacity: 0;\\n    transform: translateY(20px);\\n  }\\n  to {\\n    opacity: 1;\\n    transform: translateY(0);\\n  }\\n}\\n\\n.message[_ngcontent-%COMP%] {\\n  display: flex;\\n  align-items: flex-start;\\n  gap: 0.75rem;\\n  max-width: 80%;\\n}\\n\\n.user-message[_ngcontent-%COMP%]   .message[_ngcontent-%COMP%] {\\n  flex-direction: row-reverse;\\n  margin-left: auto;\\n}\\n\\n.message-avatar[_ngcontent-%COMP%] {\\n  width: 40px;\\n  height: 40px;\\n  border-radius: 50%;\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  font-size: 1.2rem;\\n  flex-shrink: 0;\\n}\\n\\n.message-avatar[_ngcontent-%COMP%]:not(.user-avatar) {\\n  background: linear-gradient(45deg, #00d4ff, #4ecdc4);\\n  color: white;\\n}\\n\\n.user-avatar[_ngcontent-%COMP%] {\\n  background: linear-gradient(45deg, #7877c6, #ff77c6);\\n  color: white;\\n}\\n\\n.message-content[_ngcontent-%COMP%] {\\n  flex: 1;\\n  min-width: 0;\\n}\\n\\n.message-text[_ngcontent-%COMP%] {\\n  background: rgba(255, 255, 255, 0.1);\\n  -webkit-backdrop-filter: blur(10px);\\n          backdrop-filter: blur(10px);\\n  border: 1px solid rgba(255, 255, 255, 0.2);\\n  border-radius: 18px;\\n  padding: 0.75rem 1rem;\\n  color: #ffffff;\\n  line-height: 1.5;\\n  word-wrap: break-word;\\n  position: relative;\\n}\\n\\n.ai-message[_ngcontent-%COMP%]   .message-text[_ngcontent-%COMP%] {\\n  background: rgba(0, 212, 255, 0.1);\\n  border-color: rgba(0, 212, 255, 0.3);\\n}\\n\\n.user-message[_ngcontent-%COMP%]   .message-text[_ngcontent-%COMP%] {\\n  background: rgba(120, 119, 198, 0.2);\\n  border-color: rgba(120, 119, 198, 0.4);\\n}\\n\\n.message-time[_ngcontent-%COMP%] {\\n  font-size: 0.75rem;\\n  color: #b8b8d1;\\n  margin-top: 0.25rem;\\n  text-align: right;\\n}\\n\\n.user-message[_ngcontent-%COMP%]   .message-time[_ngcontent-%COMP%] {\\n  text-align: left;\\n}\\n\\n\\n\\n.message-feedback[_ngcontent-%COMP%] {\\n  display: flex;\\n  gap: 0.5rem;\\n  margin-top: 0.5rem;\\n  opacity: 0.7;\\n  transition: opacity 0.3s ease;\\n}\\n\\n.message-feedback[_ngcontent-%COMP%]:hover {\\n  opacity: 1;\\n}\\n\\n.btn-feedback[_ngcontent-%COMP%] {\\n  background: rgba(255, 255, 255, 0.1);\\n  border: 1px solid rgba(255, 255, 255, 0.2);\\n  color: #b8b8d1;\\n  border-radius: 50%;\\n  width: 30px;\\n  height: 30px;\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  transition: all 0.3s ease;\\n  cursor: pointer;\\n  font-size: 0.8rem;\\n}\\n\\n.btn-feedback[_ngcontent-%COMP%]:hover {\\n  transform: scale(1.1);\\n}\\n\\n.btn-thumbs-up[_ngcontent-%COMP%]:hover {\\n  background: rgba(34, 197, 94, 0.2);\\n  border-color: #22c55e;\\n  color: #22c55e;\\n}\\n\\n.btn-thumbs-down[_ngcontent-%COMP%]:hover {\\n  background: rgba(239, 68, 68, 0.2);\\n  border-color: #ef4444;\\n  color: #ef4444;\\n}\\n\\n\\n\\n.typing-indicator[_ngcontent-%COMP%] {\\n  display: flex;\\n  gap: 0.25rem;\\n  padding: 0.75rem 1rem;\\n}\\n\\n.typing-indicator[_ngcontent-%COMP%]   span[_ngcontent-%COMP%] {\\n  width: 8px;\\n  height: 8px;\\n  background: #00d4ff;\\n  border-radius: 50%;\\n  animation: _ngcontent-%COMP%_typing 1.4s ease-in-out infinite both;\\n}\\n\\n.typing-indicator[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]:nth-child(1) { animation-delay: -0.32s; }\\n.typing-indicator[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]:nth-child(2) { animation-delay: -0.16s; }\\n\\n@keyframes _ngcontent-%COMP%_typing {\\n  0%, 80%, 100% {\\n    transform: scale(0.8);\\n    opacity: 0.5;\\n  }\\n  40% {\\n    transform: scale(1);\\n    opacity: 1;\\n  }\\n}\\n\\n\\n\\n.chat-input-container[_ngcontent-%COMP%] {\\n  background: rgba(15, 15, 35, 0.9);\\n  -webkit-backdrop-filter: blur(20px);\\n          backdrop-filter: blur(20px);\\n  border-top: 1px solid rgba(120, 119, 198, 0.3);\\n  padding: 1rem;\\n  position: relative;\\n  z-index: 1;\\n}\\n\\n.chat-input-wrapper[_ngcontent-%COMP%] {\\n  max-width: 800px;\\n  margin: 0 auto;\\n}\\n\\n.input-group[_ngcontent-%COMP%] {\\n  display: flex;\\n  gap: 0.5rem;\\n  align-items: flex-end;\\n}\\n\\n.chat-input[_ngcontent-%COMP%] {\\n  background: rgba(255, 255, 255, 0.1);\\n  border: 1px solid rgba(255, 255, 255, 0.2);\\n  border-radius: 20px;\\n  color: #ffffff;\\n  padding: 0.75rem 1rem;\\n  resize: none;\\n  font-family: inherit;\\n  transition: all 0.3s ease;\\n  flex: 1;\\n}\\n\\n.chat-input[_ngcontent-%COMP%]:focus {\\n  outline: none;\\n  border-color: #00d4ff;\\n  box-shadow: 0 0 0 2px rgba(0, 212, 255, 0.2);\\n  background: rgba(255, 255, 255, 0.15);\\n}\\n\\n.chat-input[_ngcontent-%COMP%]::placeholder {\\n  color: #b8b8d1;\\n}\\n\\n.btn-send[_ngcontent-%COMP%] {\\n  background: linear-gradient(45deg, #00d4ff, #4ecdc4);\\n  border: none;\\n  color: white;\\n  border-radius: 50%;\\n  width: 45px;\\n  height: 45px;\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  transition: all 0.3s ease;\\n  flex-shrink: 0;\\n}\\n\\n.btn-send[_ngcontent-%COMP%]:hover:not(:disabled) {\\n  transform: scale(1.1);\\n  box-shadow: 0 5px 15px rgba(0, 212, 255, 0.3);\\n}\\n\\n.btn-send[_ngcontent-%COMP%]:disabled {\\n  opacity: 0.5;\\n  cursor: not-allowed;\\n  transform: none;\\n}\\n\\n.btn-mic[_ngcontent-%COMP%] {\\n  background: rgba(255, 255, 255, 0.1);\\n  border: 1px solid rgba(255, 255, 255, 0.2);\\n  color: #b8b8d1;\\n  border-radius: 50%;\\n  width: 45px;\\n  height: 45px;\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  transition: all 0.3s ease;\\n  flex-shrink: 0;\\n}\\n\\n.btn-mic[_ngcontent-%COMP%]:hover {\\n  background: rgba(255, 119, 198, 0.2);\\n  border-color: #ff77c6;\\n  color: #ff77c6;\\n  transform: scale(1.1);\\n}\\n\\n.btn-mic.listening[_ngcontent-%COMP%] {\\n  background: linear-gradient(45deg, #ff77c6, #ff6b6b);\\n  border-color: #ff77c6;\\n  color: white;\\n  animation: _ngcontent-%COMP%_pulse 1s ease-in-out infinite;\\n}\\n\\n.btn-mic.listening[_ngcontent-%COMP%]:hover {\\n  background: linear-gradient(45deg, #ff6b6b, #ff77c6);\\n  color: white;\\n}\\n\\n.input-footer[_ngcontent-%COMP%] {\\n  margin-top: 0.5rem;\\n  text-align: center;\\n}\\n\\n.input-footer[_ngcontent-%COMP%]   small[_ngcontent-%COMP%] {\\n  color: #b8b8d1;\\n  font-size: 0.8rem;\\n}\\n\\n\\n\\n.chat-messages[_ngcontent-%COMP%]::-webkit-scrollbar {\\n  width: 6px;\\n}\\n\\n.chat-messages[_ngcontent-%COMP%]::-webkit-scrollbar-track {\\n  background: rgba(255, 255, 255, 0.1);\\n  border-radius: 3px;\\n}\\n\\n.chat-messages[_ngcontent-%COMP%]::-webkit-scrollbar-thumb {\\n  background: rgba(120, 119, 198, 0.5);\\n  border-radius: 3px;\\n}\\n\\n.chat-messages[_ngcontent-%COMP%]::-webkit-scrollbar-thumb:hover {\\n  background: rgba(120, 119, 198, 0.7);\\n}\\n\\n\\n\\n@media (max-width: 768px) {\\n  .chat-container[_ngcontent-%COMP%] {\\n    height: calc(100vh - 70px);\\n  }\\n  \\n  .message[_ngcontent-%COMP%] {\\n    max-width: 90%;\\n  }\\n  \\n  .chat-header-content[_ngcontent-%COMP%] {\\n    gap: 1rem;\\n  }\\n  \\n  .ai-avatar[_ngcontent-%COMP%] {\\n    width: 40px;\\n    height: 40px;\\n    font-size: 1.2rem;\\n  }\\n  \\n  .chat-info[_ngcontent-%COMP%]   h3[_ngcontent-%COMP%] {\\n    font-size: 1rem;\\n  }\\n  \\n  .message-avatar[_ngcontent-%COMP%] {\\n    width: 35px;\\n    height: 35px;\\n    font-size: 1rem;\\n  }\\n  \\n  .message-text[_ngcontent-%COMP%] {\\n    padding: 0.5rem 0.75rem;\\n    font-size: 0.9rem;\\n  }\\n  \\n  .btn-send[_ngcontent-%COMP%] {\\n    width: 40px;\\n    height: 40px;\\n  }\\n}\\n\\n@media (max-width: 480px) {\\n  .chat-messages[_ngcontent-%COMP%] {\\n    padding: 0.5rem;\\n  }\\n  \\n  .chat-input-container[_ngcontent-%COMP%] {\\n    padding: 0.5rem;\\n  }\\n  \\n  .message[_ngcontent-%COMP%] {\\n    max-width: 95%;\\n  }\\n  \\n  .message-text[_ngcontent-%COMP%] {\\n    padding: 0.5rem;\\n    font-size: 0.85rem;\\n  }\\n}\\n\\n\\n\\n.loading-message[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: column;\\n  align-items: flex-start;\\n  gap: 0.5rem;\\n}\\n\\n.loading-text[_ngcontent-%COMP%] {\\n  color: #b8b8d1;\\n  font-size: 0.9rem;\\n  font-style: italic;\\n  margin-top: 0.25rem;\\n}\\n\\n.btn-send.loading[_ngcontent-%COMP%] {\\n  background: linear-gradient(45deg, #00d4ff, #4ecdc4);\\n  animation: _ngcontent-%COMP%_pulse 1.5s ease-in-out infinite;\\n}\\n\\n.btn-send.loading[_ngcontent-%COMP%]   i[_ngcontent-%COMP%] {\\n  animation: _ngcontent-%COMP%_spin 1s linear infinite;\\n}\\n\\n@keyframes _ngcontent-%COMP%_spin {\\n  from { transform: rotate(0deg); }\\n  to { transform: rotate(360deg); }\\n} \\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\"]\n    });\n  }\n}","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","ɵɵlistener","ChatComponent_div_19_div_9_Template_button_click_1_listener","ɵɵrestoreView","_r10","message_r4","ɵɵnextContext","$implicit","ctx_r8","ɵɵresetView","submitFeedback","aiResponseId","conversationId","ChatComponent_div_19_div_9_Template_button_click_3_listener","ctx_r11","ɵɵtemplate","ChatComponent_div_19_div_2_Template","ɵɵtext","ChatComponent_div_19_div_9_Template","ChatComponent_div_19_div_10_Template","ɵɵproperty","sender","ɵɵadvance","ɵɵtextInterpolate","text","ɵɵtextInterpolate1","ɵɵpipeBind2","timestamp","ChatComponent_div_20_div_1_Template","message_r13","isLoading","ChatComponent","constructor","authService","aiChatService","messages","newMessage","userData","isTyping","isListening","isSpeaking","recognition","synthesis","currentConversationId","voiceSettings","rate","pitch","volume","voiceName","language","availableVoices","showVoiceSettings","ngOnInit","getUserData","addWelcomeMessage","initializeSpeech","onvoiceschanged","getVoices","console","log","length","loadVoiceSettings","ngAfterViewChecked","scrollToBottom","push","id","firstName","username","Date","sendMessage","trim","userMessage","userInput","loadingMessage","request","question","userId","toString","undefined","sendQuestion","subscribe","next","response","filter","msg","aiMessage","error","errorMessage","onKeyPress","event","key","shiftKey","preventDefault","chatContainer","nativeElement","scrollTop","scrollHeight","err","clearChat","focusInput","setTimeout","messageInput","focus","questionId","rating","feedback","feedbackRequest","showFeedbackMessage","message","feedbackMessage","window","speechSynthesis","webkitSpeechRecognition","continuous","interimResults","lang","maxAlternatives","onstart","onresult","transcript","results","englishText","convertHindiToEnglish","onerror","onend","startListening","start","stopListening","stop","speakMessage","cancel","processedText","processTextForSpeech","utterance","SpeechSynthesisUtterance","voices","preferredVoices","selectedVoice","selectBestVoice","voice","name","detectLanguage","addSpeechEvents","speak","replace","containsHindi","optimizeHindiEnglishSpeech","find","v","languagePreferences","startsWith","hindiWords","hasHindi","some","word","includes","hindiPattern","test","onpause","onresume","stopSpeaking","toggleSpeech","lastAiMessage","pop","getAvailableVoices","forEach","hindiText","hindiToEnglish","hindi","english","Object","entries","regex","RegExp","toggleVoiceSettings","updateVoiceSettings","setting","value","saveVoiceSettings","selectVoice","saved","localStorage","getItem","JSON","parse","setItem","stringify","getFilteredVoices","getVoiceDisplayName","split","country","isNeural","displayName","toUpperCase","ɵɵdirectiveInject","i1","AuthService","i2","AiChatService","selectors","viewQuery","ChatComponent_Query","rf","ctx","ChatComponent_Template_button_click_12_listener","ChatComponent_Template_button_click_14_listener","ChatComponent_div_19_Template","ChatComponent_div_20_Template","ChatComponent_Template_textarea_ngModelChange_24_listener","$event","ChatComponent_Template_textarea_keypress_24_listener","ChatComponent_Template_button_click_26_listener","ChatComponent_Template_button_click_28_listener","ɵɵclassProp"],"sources":["/Users/ent-00387/Documents/end-to-end/Ui/src/app/components/chat/chat.component.ts","/Users/ent-00387/Documents/end-to-end/Ui/src/app/components/chat/chat.component.html"],"sourcesContent":["import { Component, OnInit, ViewChild, ElementRef, AfterViewChecked } from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\nimport { AiChatService, AiChatRequest, AiChatResponse } from '../../services/ai-chat.service';\n\ninterface ChatMessage {\n  id: number;\n  text: string;\n  sender: 'user' | 'ai';\n  timestamp: Date;\n  isLoading?: boolean;\n  aiResponseId?: string;\n  conversationId?: string;\n}\n\n@Component({\n  selector: 'app-chat',\n  templateUrl: './chat.component.html',\n  styleUrls: ['./chat.component.css']\n})\nexport class ChatComponent implements OnInit, AfterViewChecked {\n  @ViewChild('chatContainer') private chatContainer!: ElementRef;\n  @ViewChild('messageInput') private messageInput!: ElementRef;\n\n  messages: ChatMessage[] = [];\n  newMessage: string = '';\n  userData: any = null;\n  isTyping: boolean = false;\n  isListening: boolean = false;\n  isSpeaking: boolean = false;\n  recognition: any = null;\n  synthesis: SpeechSynthesis | null = null;\n  currentConversationId: string | null = null;\n  isLoading: boolean = false;\n\n  // Voice customization settings\n  voiceSettings = {\n    rate: 0.9,           // Speech rate (0.1 to 10)\n    pitch: 1.05,         // Pitch (0 to 2)\n    volume: 0.95,        // Volume (0 to 1)\n    voiceName: '',       // Selected voice name\n    language: 'auto'     // Language preference\n  };\n\n  availableVoices: SpeechSynthesisVoice[] = [];\n  showVoiceSettings: boolean = false;\n\n  constructor(\n    private authService: AuthService,\n    private aiChatService: AiChatService\n  ) {}\n\n  ngOnInit(): void {\n    this.userData = this.authService.getUserData();\n    this.addWelcomeMessage();\n    this.initializeSpeech();\n    \n    // Load voices when they become available\n    if (this.synthesis) {\n      this.synthesis.onvoiceschanged = () => {\n        this.availableVoices = this.synthesis?.getVoices() || [];\n        console.log('Voices loaded:', this.availableVoices.length);\n        this.loadVoiceSettings();\n      };\n    }\n  }\n\n  ngAfterViewChecked(): void {\n    this.scrollToBottom();\n  }\n\n  private addWelcomeMessage(): void {\n    this.messages.push({\n      id: 1,\n      text: `Namaste ${this.userData?.firstName || this.userData?.username}! Main aapka AI assistant hoon. Aapko kya help chahiye aaj?`,\n      sender: 'ai',\n      timestamp: new Date()\n    });\n  }\n\n  sendMessage(): void {\n    if (this.newMessage.trim() && !this.isTyping && !this.isLoading) {\n      const userMessage: ChatMessage = {\n        id: this.messages.length + 1,\n        text: this.newMessage.trim(),\n        sender: 'user',\n        timestamp: new Date()\n      };\n\n      this.messages.push(userMessage);\n      const userInput = this.newMessage;\n      this.newMessage = '';\n      this.isTyping = true;\n      this.isLoading = true;\n\n      // Add loading message\n      const loadingMessage: ChatMessage = {\n        id: this.messages.length + 1,\n        text: 'Thinking...',\n        sender: 'ai',\n        timestamp: new Date(),\n        isLoading: true\n      };\n      this.messages.push(loadingMessage);\n\n      // Send to AI backend\n      const request: AiChatRequest = {\n        question: userInput,\n        userId: this.userData?.id?.toString() || this.userData?.username,\n        conversationId: this.currentConversationId || undefined\n      };\n\n      this.aiChatService.sendQuestion(request).subscribe({\n        next: (response: AiChatResponse) => {\n          // Remove loading message\n          this.messages = this.messages.filter(msg => !msg.isLoading);\n          \n          // Store conversation ID for future messages\n          this.currentConversationId = response.conversationId?.toString() || null;\n          \n          // Add AI response\n          const aiMessage: ChatMessage = {\n            id: this.messages.length + 1,\n            text: response.response,\n            sender: 'ai',\n            timestamp: new Date(),\n            aiResponseId: response.conversationId?.toString() || '',\n            conversationId: response.conversationId?.toString() || ''\n          };\n\n          this.messages.push(aiMessage);\n          this.isTyping = false;\n          this.isLoading = false;\n        },\n        error: (error) => {\n          console.error('Error getting AI response:', error);\n          \n          // Remove loading message\n          this.messages = this.messages.filter(msg => !msg.isLoading);\n          \n          // Add error message\n          const errorMessage: ChatMessage = {\n            id: this.messages.length + 1,\n            text: 'Sorry, main abhi aapki help nahi kar pa raha hoon. Please try again later.',\n            sender: 'ai',\n            timestamp: new Date()\n          };\n\n          this.messages.push(errorMessage);\n          this.isTyping = false;\n          this.isLoading = false;\n        }\n      });\n    }\n  }\n\n  onKeyPress(event: KeyboardEvent): void {\n    if (event.key === 'Enter' && !event.shiftKey) {\n      event.preventDefault();\n      this.sendMessage();\n    }\n  }\n\n  private scrollToBottom(): void {\n    try {\n      this.chatContainer.nativeElement.scrollTop = this.chatContainer.nativeElement.scrollHeight;\n    } catch (err) {}\n  }\n\n  clearChat(): void {\n    this.messages = [];\n    this.currentConversationId = null;\n    this.addWelcomeMessage();\n  }\n\n  focusInput(): void {\n    setTimeout(() => {\n      this.messageInput.nativeElement.focus();\n    }, 100);\n  }\n\n  submitFeedback(questionId: string, conversationId: string, rating: number, feedback: string): void {\n    const feedbackRequest = {\n      conversationId: conversationId,\n      questionId: questionId,\n      rating: rating,\n      feedback: feedback\n    };\n\n    this.aiChatService.submitFeedback(feedbackRequest).subscribe({\n      next: (response) => {\n        console.log('Feedback submitted successfully:', response);\n        // Show a brief success message\n        this.showFeedbackMessage('Thank you for your feedback!');\n      },\n      error: (error) => {\n        console.error('Error submitting feedback:', error);\n        this.showFeedbackMessage('Failed to submit feedback. Please try again.');\n      }\n    });\n  }\n\n  private showFeedbackMessage(message: string): void {\n    // Create a temporary feedback message\n    const feedbackMessage: ChatMessage = {\n      id: this.messages.length + 1,\n      text: message,\n      sender: 'ai',\n      timestamp: new Date()\n    };\n\n    this.messages.push(feedbackMessage);\n\n    // Remove the feedback message after 3 seconds\n    setTimeout(() => {\n      this.messages = this.messages.filter(msg => msg.id !== feedbackMessage.id);\n    }, 3000);\n  }\n\n  private initializeSpeech(): void {\n    // Initialize speech synthesis\n    if ('speechSynthesis' in window) {\n      this.synthesis = window.speechSynthesis;\n    }\n\n    // Initialize speech recognition\n    if ('webkitSpeechRecognition' in window) {\n      this.recognition = new (window as any).webkitSpeechRecognition();\n      this.recognition.continuous = false;\n      this.recognition.interimResults = false;\n      this.recognition.lang = 'hi-IN'; // Hindi (India)\n      this.recognition.maxAlternatives = 3; // Get multiple recognition alternatives\n\n      this.recognition.onstart = () => {\n        this.isListening = true;\n      };\n\n      this.recognition.onresult = (event: any) => {\n        const transcript = event.results[0][0].transcript;\n        // Convert Hindi speech to English text\n        const englishText = this.convertHindiToEnglish(transcript);\n        this.newMessage = englishText;\n        this.isListening = false;\n      };\n\n      this.recognition.onerror = (event: any) => {\n        console.error('Speech recognition error:', event.error);\n        this.isListening = false;\n      };\n\n      this.recognition.onend = () => {\n        this.isListening = false;\n      };\n    }\n  }\n\n  startListening(): void {\n    if (this.recognition && !this.isListening) {\n      try {\n        this.recognition.start();\n      } catch (error) {\n        console.error('Error starting speech recognition:', error);\n        this.isListening = false;\n      }\n    }\n  }\n\n  stopListening(): void {\n    if (this.recognition && this.isListening) {\n      try {\n        this.recognition.stop();\n      } catch (error) {\n        console.error('Error stopping speech recognition:', error);\n      }\n    }\n  }\n\n  speakMessage(text: string): void {\n    if (this.synthesis) {\n      try {\n        // Stop any current speech\n        this.synthesis.cancel();\n\n        // Process text for more natural speech\n        const processedText = this.processTextForSpeech(text);\n        \n        const utterance = new SpeechSynthesisUtterance(processedText);\n        \n        // Enhanced voice selection for more genuine AI voice\n        const voices = this.synthesis.getVoices();\n        const preferredVoices = [\n          // Premium Neural voices for best quality\n          'hi-IN-NeerjaNeural',      // Hindi Female Neural - Most natural\n          'en-IN-NeerjaNeural',      // English (India) Female Neural\n          'hi-IN-MadhurNeural',      // Hindi Male Neural\n          'en-IN-PrabhatNeural',     // English (India) Male Neural\n          'en-US-JennyNeural',       // US English Female Neural\n          'en-US-GuyNeural',         // US English Male Neural\n          'en-GB-SoniaNeural',       // British English Female Neural\n          'en-GB-RyanNeural',        // British English Male Neural\n          \n          // Fallback voices\n          'hi-IN',                   // Hindi\n          'en-IN',                   // English (India)\n          'en-US',                   // US English\n          'en-GB'                    // British English\n        ];\n\n        // Find the best available voice with enhanced selection\n        let selectedVoice = this.selectBestVoice(voices, preferredVoices);\n        \n        if (selectedVoice) {\n          utterance.voice = selectedVoice;\n          console.log('Selected voice:', selectedVoice.name, 'Language:', selectedVoice.lang);\n        }\n\n        // Optimize speech parameters for genuine AI voice\n        utterance.rate = 0.9;        // Slightly slower for more natural pace\n        utterance.pitch = 1.05;      // Slightly higher pitch for AI personality\n        utterance.volume = 0.95;     // High volume but not max for natural sound\n        utterance.lang = this.detectLanguage(text); // Auto-detect language\n\n        // Add natural pauses and emphasis\n        this.addSpeechEvents(utterance);\n\n        this.synthesis.speak(utterance);\n      } catch (error) {\n        console.error('Error with speech synthesis:', error);\n        this.isSpeaking = false;\n      }\n    }\n  }\n\n  private processTextForSpeech(text: string): string {\n    // Add natural pauses and emphasis for more genuine speech\n    let processedText = text;\n    \n    // Add pauses after sentences\n    processedText = processedText.replace(/\\./g, '... ');\n    processedText = processedText.replace(/\\!/g, '!... ');\n    processedText = processedText.replace(/\\?/g, '?... ');\n    \n    // Add emphasis to important words\n    processedText = processedText.replace(/\\b(Ayush Dwivedi|Alka Dwivedi|Anshi Shukla|Vijay Kumar Dwivedi|Shreya Dwivedi)\\b/gi, \n      '<emphasis level=\"strong\">$1</emphasis>');\n    \n    // Add natural pauses for better flow\n    processedText = processedText.replace(/,/g, ',... ');\n    processedText = processedText.replace(/;/g, ';... ');\n    \n    // Optimize for Hindi-English mixed speech\n    if (this.containsHindi(text)) {\n      processedText = this.optimizeHindiEnglishSpeech(processedText);\n    }\n    \n    return processedText;\n  }\n\n  private selectBestVoice(voices: SpeechSynthesisVoice[], preferredVoices: string[]): SpeechSynthesisVoice | null {\n    // First, try to find exact matches from preferred voices\n    for (const voiceName of preferredVoices) {\n      const voice = voices.find(v => v.name === voiceName);\n      if (voice) {\n        return voice;\n      }\n    }\n    \n    // If no exact match, find best available voice by language\n    const languagePreferences = ['hi-IN', 'en-IN', 'en-US', 'en-GB'];\n    \n    for (const lang of languagePreferences) {\n      const voice = voices.find(v => v.lang.startsWith(lang));\n      if (voice) {\n        return voice;\n      }\n    }\n    \n    // Fallback to any available voice\n    return voices.length > 0 ? voices[0] : null;\n  }\n\n  private detectLanguage(text: string): string {\n    // Simple language detection for Hindi vs English\n    const hindiWords = ['है', 'में', 'आप', 'मुझे', 'क्या', 'कैसे', 'कहाँ', 'कब', 'कौन', 'मदद', 'समस्या', 'समाधान'];\n    const hasHindi = hindiWords.some(word => text.includes(word));\n    \n    if (hasHindi) {\n      return 'hi-IN';\n    } else {\n      return 'en-US';\n    }\n  }\n\n  private containsHindi(text: string): boolean {\n    const hindiPattern = /[\\u0900-\\u097F]/;\n    return hindiPattern.test(text);\n  }\n\n  private optimizeHindiEnglishSpeech(text: string): string {\n    // Add natural pauses between Hindi and English words\n    text = text.replace(/([a-zA-Z]+)([हैमेंआपमुझेक्याकैसेकहाँकबकौन])/g, '$1... $2');\n    text = text.replace(/([हैमेंआपमुझेक्याकैसेकहाँकबकौन])([a-zA-Z]+)/g, '$1... $2');\n    \n    return text;\n  }\n\n  private addSpeechEvents(utterance: SpeechSynthesisUtterance): void {\n    utterance.onstart = () => {\n      this.isSpeaking = true;\n      console.log('AI started speaking');\n    };\n\n    utterance.onend = () => {\n      this.isSpeaking = false;\n      console.log('AI finished speaking');\n    };\n\n    utterance.onpause = () => {\n      console.log('AI speech paused');\n    };\n\n    utterance.onresume = () => {\n      console.log('AI speech resumed');\n    };\n\n    utterance.onerror = (event) => {\n      console.error('Speech synthesis error:', event);\n      this.isSpeaking = false;\n    };\n  }\n\n  stopSpeaking(): void {\n    if (this.synthesis) {\n      try {\n        this.synthesis.cancel();\n        this.isSpeaking = false;\n      } catch (error) {\n        console.error('Error stopping speech synthesis:', error);\n      }\n    }\n  }\n\n  toggleSpeech(): void {\n    if (this.isSpeaking) {\n      this.stopSpeaking();\n    } else {\n      // Speak the last AI message\n      const lastAiMessage = this.messages\n        .filter(msg => msg.sender === 'ai')\n        .pop();\n      if (lastAiMessage) {\n        this.speakMessage(lastAiMessage.text);\n      }\n    }\n  }\n\n  getAvailableVoices(): void {\n    if (this.synthesis) {\n      const voices = this.synthesis.getVoices();\n      console.log('Available voices:');\n      voices.forEach(voice => {\n        console.log(`- ${voice.name} (${voice.lang})`);\n      });\n    }\n  }\n\n  private convertHindiToEnglish(hindiText: string): string {\n    // Common Hindi to English word mappings\n    const hindiToEnglish: { [key: string]: string } = {\n      // Basic words\n      'नमस्ते': 'namaste',\n      'है': 'hai',\n      'में': 'main',\n      'आप': 'aap',\n      'मुझे': 'mujhe',\n      'क्या': 'kya',\n      'कैसे': 'kaise',\n      'कहाँ': 'kahan',\n      'कब': 'kab',\n      'कौन': 'kaun',\n      \n      // Common phrases\n      'मदद': 'help',\n      'समस्या': 'problem',\n      'समाधान': 'solution',\n      'जानकारी': 'information',\n      'प्रश्न': 'question',\n      'उत्तर': 'answer',\n      'सहायता': 'assistance',\n      'सेवा': 'service',\n      \n      // Actions\n      'करना': 'karna',\n      'जाना': 'jana',\n      'आना': 'aana',\n      'देखना': 'dekhna',\n      'सुनना': 'sunna',\n      'बोलना': 'bolna',\n      'समझना': 'samajhna',\n      'सोचना': 'sochna',\n      \n      // Time related\n      'आज': 'aaj',\n      'कल': 'kal',\n      'परसों': 'parson',\n      'सुबह': 'subah',\n      'शाम': 'sham',\n      'रात': 'raat',\n      'दिन': 'din',\n      \n      // Numbers\n      'एक': 'ek',\n      'दो': 'do',\n      'तीन': 'teen',\n      'चार': 'char',\n      'पांच': 'paanch',\n      'छह': 'cheh',\n      'सात': 'saat',\n      'आठ': 'aath',\n      'नौ': 'nau',\n      'दस': 'das',\n      \n      // Common expressions\n      'धन्यवाद': 'thank you',\n      'कृपया': 'please',\n      'माफ़ करें': 'sorry',\n      'ठीक है': 'okay',\n      'हाँ': 'yes',\n      'नहीं': 'no',\n      'बहुत': 'bahut',\n      'अच्छा': 'accha',\n      'बुरा': 'bura',\n      \n      // Technology terms\n      'कंप्यूटर': 'computer',\n      'मोबाइल': 'mobile',\n      'इंटरनेट': 'internet',\n      'वेबसाइट': 'website',\n      'एप्लिकेशन': 'application',\n      'सिस्टम': 'system',\n      'डेटा': 'data',\n      'फ़ाइल': 'file',\n      \n      // Business terms\n      'कंपनी': 'company',\n      'कार्यालय': 'office',\n      'कार्य': 'work',\n      'पैसा': 'money',\n      'लेनदेन': 'transaction',\n      'खाता': 'account',\n      'बैंक': 'bank',\n      \n      // Family and relationships\n      'परिवार': 'family',\n      'दोस्त': 'friend',\n      'भाई': 'bhai',\n      'बहन': 'behen',\n      'माता': 'mata',\n      'पिता': 'pita',\n      'बेटा': 'beta',\n      'बेटी': 'beti'\n    };\n\n    let englishText = hindiText;\n    \n    // Convert Hindi words to English\n    for (const [hindi, english] of Object.entries(hindiToEnglish)) {\n      const regex = new RegExp(hindi, 'gi');\n      englishText = englishText.replace(regex, english);\n    }\n    \n    // Handle common Hindi patterns\n    englishText = englishText\n      .replace(/हूँ/g, 'hoon')\n      .replace(/हैं/g, 'hain')\n      .replace(/था/g, 'tha')\n      .replace(/थी/g, 'thi')\n      .replace(/थे/g, 'the')\n      .replace(/रहा/g, 'raha')\n      .replace(/रही/g, 'rahi')\n      .replace(/रहे/g, 'rahe')\n      .replace(/कर/g, 'kar')\n      .replace(/की/g, 'ki')\n      .replace(/का/g, 'ka')\n      .replace(/के/g, 'ke')\n      .replace(/को/g, 'ko')\n      .replace(/से/g, 'se')\n      .replace(/में/g, 'main')\n      .replace(/पर/g, 'par')\n      .replace(/तक/g, 'tak')\n      .replace(/साथ/g, 'saath')\n      .replace(/बिना/g, 'bina')\n      .replace(/लिए/g, 'liye')\n      .replace(/द्वारा/g, 'dwara')\n      .replace(/के लिए/g, 'ke liye')\n      .replace(/की तरह/g, 'ki tarah')\n      .replace(/के बारे में/g, 'ke bare mein')\n      .replace(/के साथ/g, 'ke saath')\n      .replace(/के बिना/g, 'ke bina')\n      .replace(/के बाद/g, 'ke baad')\n      .replace(/के पहले/g, 'ke pehle')\n      .replace(/के अंदर/g, 'ke andar')\n      .replace(/के बाहर/g, 'ke bahar')\n      .replace(/के ऊपर/g, 'ke upar')\n      .replace(/के नीचे/g, 'ke neeche')\n      .replace(/के आगे/g, 'ke aage')\n      .replace(/के पीछे/g, 'ke peeche')\n      .replace(/के दाएं/g, 'ke daayein')\n      .replace(/के बाएं/g, 'ke baayein');\n\n    return englishText;\n  }\n\n  // Voice customization methods\n  toggleVoiceSettings(): void {\n    this.showVoiceSettings = !this.showVoiceSettings;\n  }\n\n  updateVoiceSettings(setting: string, value: any): void {\n    this.voiceSettings[setting as keyof typeof this.voiceSettings] = value;\n    this.saveVoiceSettings();\n  }\n\n  selectVoice(voiceName: string): void {\n    this.voiceSettings.voiceName = voiceName;\n    this.saveVoiceSettings();\n    console.log('Voice selected:', voiceName);\n  }\n\n  private loadVoiceSettings(): void {\n    const saved = localStorage.getItem('aiVoiceSettings');\n    if (saved) {\n      this.voiceSettings = { ...this.voiceSettings, ...JSON.parse(saved) };\n    }\n  }\n\n  private saveVoiceSettings(): void {\n    localStorage.setItem('aiVoiceSettings', JSON.stringify(this.voiceSettings));\n  }\n\n  getFilteredVoices(): SpeechSynthesisVoice[] {\n    if (this.voiceSettings.language === 'auto') {\n      return this.availableVoices;\n    }\n    return this.availableVoices.filter(voice => \n      voice.lang.startsWith(this.voiceSettings.language)\n    );\n  }\n\n  getVoiceDisplayName(voice: SpeechSynthesisVoice): string {\n    const lang = voice.lang.split('-')[0];\n    const country = voice.lang.split('-')[1];\n    const isNeural = voice.name.includes('Neural');\n    \n    let displayName = voice.name;\n    if (isNeural) {\n      displayName += ' (Neural)';\n    }\n    displayName += ` (${lang.toUpperCase()}-${country})`;\n    \n    return displayName;\n  }\n} ","<div class=\"chat-container\">\n  <!-- Chat Header -->\n  <div class=\"chat-header\">\n    <div class=\"chat-header-content\">\n      <div class=\"ai-avatar\">\n        <i class=\"bi bi-robot\"></i>\n      </div>\n      <div class=\"chat-info\">\n        <h3>AI Assistant</h3>\n        <p class=\"status\">\n          <span class=\"status-dot\"></span>\n          Online\n        </p>\n      </div>\n      <div class=\"chat-actions\">\n        <button class=\"btn btn-speak\" (click)=\"toggleSpeech()\" title=\"Speak Last AI Message\">\n          <i class=\"bi\" [class.bi-volume-up]=\"!isSpeaking\" [class.bi-volume-mute]=\"isSpeaking\"></i>\n        </button>\n        <button class=\"btn btn-clear\" (click)=\"clearChat()\" title=\"Clear Chat\">\n          <i class=\"bi bi-trash\"></i>\n        </button>\n      </div>\n    </div>\n  </div>\n\n  <!-- Chat Messages -->\n  <div class=\"chat-messages\" #chatContainer>\n    <div class=\"messages-container\">\n      <div \n        *ngFor=\"let message of messages\" \n        class=\"message-wrapper\"\n        [ngClass]=\"message.sender === 'user' ? 'user-message' : 'ai-message'\"\n      >\n        <div class=\"message\">\n          <div class=\"message-avatar\" *ngIf=\"message.sender === 'ai'\">\n            <i class=\"bi bi-robot\"></i>\n          </div>\n          <div class=\"message-content\">\n            <div class=\"message-text\">{{ message.text }}</div>\n            <div class=\"message-time\">\n              {{ message.timestamp | date:'shortTime' }}\n            </div>\n            <!-- Feedback buttons for AI messages -->\n            <div class=\"message-feedback\" *ngIf=\"message.sender === 'ai' && message.aiResponseId\">\n              <button class=\"btn-feedback btn-thumbs-up\" (click)=\"submitFeedback(message.aiResponseId!, message.conversationId!, 5, 'Great response!')\" title=\"Good response\">\n                <i class=\"bi bi-hand-thumbs-up\"></i>\n              </button>\n              <button class=\"btn-feedback btn-thumbs-down\" (click)=\"submitFeedback(message.aiResponseId!, message.conversationId!, 1, 'Could be better')\" title=\"Poor response\">\n                <i class=\"bi bi-hand-thumbs-down\"></i>\n              </button>\n            </div>\n          </div>\n          <div class=\"message-avatar user-avatar\" *ngIf=\"message.sender === 'user'\">\n            <i class=\"bi bi-person\"></i>\n          </div>\n        </div>\n      </div>\n\n      <!-- Loading Message -->\n      <div class=\"message-wrapper ai-message\" *ngFor=\"let message of messages\">\n        <div class=\"message\" *ngIf=\"message.isLoading\">\n          <div class=\"message-avatar\">\n            <i class=\"bi bi-robot\"></i>\n          </div>\n          <div class=\"message-content\">\n            <div class=\"loading-message\">\n              <div class=\"typing-indicator\">\n                <span></span>\n                <span></span>\n                <span></span>\n              </div>\n              <div class=\"loading-text\">AI is thinking...</div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <!-- Chat Input -->\n  <div class=\"chat-input-container\">\n    <div class=\"chat-input-wrapper\">\n      <div class=\"input-group\">\n        <textarea\n          #messageInput\n          class=\"form-control chat-input\"\n          placeholder=\"Type your message here...\"\n          [(ngModel)]=\"newMessage\"\n          (keypress)=\"onKeyPress($event)\"\n          rows=\"1\"\n          maxlength=\"500\"\n        ></textarea>\n        <button \n          class=\"btn btn-mic\" \n          (click)=\"isListening ? stopListening() : startListening()\"\n          [class.listening]=\"isListening\"\n          title=\"Voice Input\"\n        >\n          <i class=\"bi\" [class.bi-mic]=\"!isListening\" [class.bi-mic-mute]=\"isListening\"></i>\n        </button>\n        <button \n          class=\"btn btn-send\" \n          (click)=\"sendMessage()\"\n          [disabled]=\"!newMessage.trim() || isTyping || isLoading\"\n          [class.loading]=\"isLoading\"\n        >\n          <i class=\"bi\" [class.bi-send]=\"!isLoading\" [class.bi-hourglass-split]=\"isLoading\"></i>\n        </button>\n      </div>\n      <div class=\"input-footer\">\n        <small class=\"text-muted\">\n          Press Enter to send, Shift+Enter for new line\n        </small>\n      </div>\n    </div>\n  </div>\n</div> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}