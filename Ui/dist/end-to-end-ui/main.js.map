{"version":3,"file":"main.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;AACuD;AACa;AACS;AACE;AACkB;AAClB;AACA;AACM;AACY;;;AAEjG,MAAMS,MAAM,GAAW,CACrB;EAAEC,IAAI,EAAE,EAAE;EAAEC,UAAU,EAAE,QAAQ;EAAEC,SAAS,EAAE;AAAM,CAAE,EACrD;EAAEF,IAAI,EAAE,OAAO;EAAEG,SAAS,EAAEZ,6EAAcA;AAAA,CAAE,EAC5C;EAAES,IAAI,EAAE,UAAU;EAAEG,SAAS,EAAEX,sFAAiBA;AAAA,CAAE,EAClD;EAAEQ,IAAI,EAAE,iBAAiB;EAAEG,SAAS,EAAET,0GAAuBA;AAAA,CAAE,EAC/D;EAAEM,IAAI,EAAE,OAAO;EAAEG,SAAS,EAAEV,wFAAiBA;AAAA,CAAE,EAC/C;EAAEO,IAAI,EAAE,cAAc;EAAEG,SAAS,EAAEN,8FAAmBA;AAAA,CAAE,EACxD;EAAEG,IAAI,EAAE,gBAAgB;EAAEG,SAAS,EAAER,wFAAiBA;AAAA,CAAE,EACxD;EAAEK,IAAI,EAAE,WAAW;EAAEG,SAAS,EAAEP,wFAAiBA;AAAA,CAAE,EACnD;EAAEI,IAAI,EAAE,iBAAiB;EAAEG,SAAS,EAAEL,0GAAuBA;AAAA,CAAE,EAC/D;EAAEE,IAAI,EAAE,WAAW;EAAEG,SAAS,EAAEV,wFAAiBA;AAAA,CAAE,EACnD;EAAEO,IAAI,EAAE,IAAI;EAAEC,UAAU,EAAE;AAAQ,CAAE,CACrC;AAMK,MAAOG,gBAAgB;;;uBAAhBA,gBAAgB;IAAA;EAAA;;;YAAhBA;IAAgB;EAAA;;;gBAHjBd,yDAAY,CAACe,OAAO,CAACN,MAAM,CAAC,EAC5BT,yDAAY;IAAA;EAAA;;;sHAEXc,gBAAgB;IAAAE,OAAA,GAAAC,yDAAA;IAAAC,OAAA,GAFjBlB,yDAAY;EAAA;AAAA,K;;;;;;;;;;;;;;;;;;;;;;;;IEjBhBmB,4DAAA,aAAsD;IACkBA,oDAAA,gBAAS;IAAAA,0DAAA,EAAI;;;;;IAErFA,4DAAA,aAAsD;IACcA,oDAAA,YAAK;IAAAA,0DAAA,EAAI;;;;;IAK7EA,4DAAA,aAAuD;IACaA,oDAAA,YAAK;IAAAA,0DAAA,EAAI;;;;;IAE7EA,4DAAA,aAAuD;IACgBA,oDAAA,eAAQ;IAAAA,0DAAA,EAAI;;;;;;IAEnFA,4DAAA,aAA+D;IAE3DA,oDAAA,GACF;IAAAA,0DAAA,EAAI;IACJA,4DAAA,aAA0B;IAC2BA,oDAAA,cAAO;IAAAA,0DAAA,EAAI;IAC9DA,4DAAA,SAAI;IAAuDA,oDAAA,sBAAe;IAAAA,0DAAA,EAAI;IAC9EA,4DAAA,UAAI;IAAAA,uDAAA,cAA6B;IAAAA,0DAAA,EAAK;IACtCA,4DAAA,UAAI;IAAkCA,wDAAA,mBAAAM,gDAAA;MAAAN,2DAAA,CAAAQ,GAAA;MAAA,MAAAC,MAAA,GAAAT,2DAAA;MAAA,OAASA,yDAAA,CAAAS,MAAA,CAAAG,MAAA,EAAQ;IAAA,EAAC;IAACZ,oDAAA,cAAM;IAAAA,0DAAA,EAAI;;;;;IANnEA,uDAAA,GACF;IADEA,gEAAA,OAAAe,OAAA,GAAAC,MAAA,CAAAC,WAAA,CAAAC,WAAA,qBAAAH,OAAA,CAAAI,QAAA,MACF;;;ADpBJ,MAAOC,YAAY;EAGvBC,YAAmBJ,WAAwB;IAAxB,KAAAA,WAAW,GAAXA,WAAW;IAF9B,KAAAK,KAAK,GAAG,wBAAwB;EAEe;EAE/CV,MAAMA,CAAA;IACJ,MAAMW,QAAQ,GAAG,IAAI,CAACN,WAAW,CAACC,WAAW,EAAE;IAC/C,IAAIK,QAAQ,EAAE;MACZ,IAAI,CAACN,WAAW,CAACL,MAAM,CAACW,QAAQ,CAACJ,QAAQ,CAAC,CAACK,SAAS,CAAC;QACnDC,IAAI,EAAEA,CAAA,KAAK;UACT,IAAI,CAACR,WAAW,CAACS,aAAa,EAAE;UAChCC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,QAAQ;QACjC,CAAC;QACDC,KAAK,EAAEA,CAAA,KAAK;UACV,IAAI,CAACb,WAAW,CAACS,aAAa,EAAE;UAChCC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,QAAQ;QACjC;OACD,CAAC;;EAEN;;;uBAnBWT,YAAY,EAAApB,+DAAA,CAAAF,+DAAA;IAAA;EAAA;;;YAAZsB,YAAY;MAAAa,SAAA;MAAAC,KAAA;MAAAC,IAAA;MAAAC,MAAA;MAAAC,QAAA,WAAAC,sBAAAC,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;UCRzBvC,4DAAA,aAAyD;UAEdA,oDAAA,GAAW;UAAAA,0DAAA,EAAI;UAEtDA,4DAAA,gBAAmG;UACjGA,uDAAA,cAAyC;UAC3CA,0DAAA,EAAS;UAETA,4DAAA,aAAqD;UAEjDA,wDAAA,IAAA0C,0BAAA,gBAEK;UACL1C,wDAAA,IAAA2C,0BAAA,gBAEK;UACP3C,0DAAA,EAAK;UAELA,4DAAA,aAAuB;UACrBA,wDAAA,KAAA4C,2BAAA,gBAEK;UACL5C,wDAAA,KAAA6C,2BAAA,gBAEK;UACL7C,wDAAA,KAAA8C,2BAAA,iBAUK;UACP9C,0DAAA,EAAK;UAKXA,4DAAA,YAAM;UACJA,uDAAA,qBAA+B;UACjCA,0DAAA,EAAO;UAEPA,4DAAA,kBAAyD;UAErCA,oDAAA,gEAAwD;UAAAA,0DAAA,EAAI;;;UA7CrCA,uDAAA,GAAW;UAAXA,+DAAA,CAAAwC,GAAA,CAAAlB,KAAA,CAAW;UAQxBtB,uDAAA,GAA8B;UAA9BA,wDAAA,SAAAwC,GAAA,CAAAvB,WAAA,CAAAgC,UAAA,GAA8B;UAG9BjD,uDAAA,GAA8B;UAA9BA,wDAAA,SAAAwC,GAAA,CAAAvB,WAAA,CAAAgC,UAAA,GAA8B;UAM9BjD,uDAAA,GAA+B;UAA/BA,wDAAA,UAAAwC,GAAA,CAAAvB,WAAA,CAAAgC,UAAA,GAA+B;UAG/BjD,uDAAA,GAA+B;UAA/BA,wDAAA,UAAAwC,GAAA,CAAAvB,WAAA,CAAAgC,UAAA,GAA+B;UAGtBjD,uDAAA,GAA8B;UAA9BA,wDAAA,SAAAwC,GAAA,CAAAvB,WAAA,CAAAgC,UAAA,GAA8B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxBX;AACF;AACU;AACnB;AAES;AACT;AACqB;AACS;AACE;AACkB;AAClB;AACA;AACM;AACY;;AAyB3F,MAAOK,SAAS;;;uBAATA,SAAS;IAAA;EAAA;;;YAATA,SAAS;MAAAC,SAAA,GAFRnC,wDAAY;IAAA;EAAA;;;gBARtB8B,qEAAa,EACbvD,iEAAgB,EAChBwD,mEAAgB,EAChBC,wDAAW,EACXC,gEAAmB,EACnBxE,0DAAY;IAAA;EAAA;;;uHAKHyE,SAAS;IAAAE,YAAA,GArBlBpC,wDAAY,EACZtC,6EAAc,EACdC,sFAAiB,EACjBC,wFAAiB,EACjBC,0GAAuB,EACvBC,wFAAiB,EACjBC,wFAAiB,EACjBC,8FAAmB,EACnBC,0GAAuB;IAAAQ,OAAA,GAGvBqD,qEAAa,EACbvD,iEAAgB,EAChBwD,mEAAgB,EAChBC,wDAAW,EACXC,gEAAmB,EACnBxE,0DAAY;EAAA;AAAA,K;;;;;;;;;;;;;;;;;;;AClCoD;;;;;;;;ICY1DmB,4DAAA,cAAqD;IACnDA,oDAAA,GACF;IAAAA,0DAAA,EAAM;;;;IADJA,uDAAA,GACF;IADEA,gEAAA,MAAA0D,MAAA,CAAAC,YAAA,MACF;;;;;IACA3D,4DAAA,cAAwD;IACtDA,oDAAA,GACF;IAAAA,0DAAA,EAAM;;;;IADJA,uDAAA,GACF;IADEA,gEAAA,MAAA4D,MAAA,CAAAC,cAAA,MACF;;;;;IAgBQ7D,4DAAA,UAAmE;IAAAA,oDAAA,wBAAiB;IAAAA,0DAAA,EAAM;;;;;IAC1FA,4DAAA,UAAgE;IAAAA,oDAAA,yCAAkC;IAAAA,0DAAA,EAAM;;;;;IAF1GA,4DAAA,cAA2H;IACzHA,wDAAA,IAAA8D,mDAAA,kBAA0F;IAC1F9D,wDAAA,IAAA+D,mDAAA,kBAAwG;IAC1G/D,0DAAA,EAAM;;;;;;IAFEA,uDAAA,GAA2D;IAA3DA,wDAAA,UAAAe,OAAA,GAAAC,MAAA,CAAAgD,kBAAA,CAAAC,GAAA,4BAAAlD,OAAA,CAAAmD,MAAA,kBAAAnD,OAAA,CAAAmD,MAAA,aAA2D;IAC3DlE,uDAAA,GAAwD;IAAxDA,wDAAA,UAAAmE,OAAA,GAAAnD,MAAA,CAAAgD,kBAAA,CAAAC,GAAA,4BAAAE,OAAA,CAAAD,MAAA,kBAAAC,OAAA,CAAAD,MAAA,UAAwD;;;;;IAU9DlE,uDAAA,eAA6E;;;;;;IAxBrFA,4DAAA,cAA4D;IACnBA,wDAAA,sBAAAoE,iEAAA;MAAApE,2DAAA,CAAAqE,GAAA;MAAA,MAAAC,MAAA,GAAAtE,2DAAA;MAAA,OAAYA,yDAAA,CAAAsE,MAAA,CAAAC,SAAA,EAAW;IAAA,EAAC;IAC7DvE,4DAAA,cAAwB;IACHA,oDAAA,oBAAa;IAAAA,0DAAA,EAAQ;IACxCA,uDAAA,gBAOE;IACFA,wDAAA,IAAAwE,6CAAA,kBAGM;IACRxE,0DAAA,EAAM;IAENA,4DAAA,cAA0B;IAMtBA,wDAAA,IAAAyE,8CAAA,mBAA6E;IAC7EzE,oDAAA,IACF;IAAAA,0DAAA,EAAS;IACTA,4DAAA,kBAAsE;IAAtBA,wDAAA,mBAAA0E,iEAAA;MAAA1E,2DAAA,CAAAqE,GAAA;MAAA,MAAAM,OAAA,GAAA3E,2DAAA;MAAA,OAASA,yDAAA,CAAA2E,OAAA,CAAAC,SAAA,EAAW;IAAA,EAAC;IACnE5E,oDAAA,gBACF;IAAAA,0DAAA,EAAS;;;;;;IA5BPA,uDAAA,GAAgC;IAAhCA,wDAAA,cAAA6E,MAAA,CAAAb,kBAAA,CAAgC;IAShChE,uDAAA,GAAyG;IAAzGA,yDAAA,iBAAAmE,OAAA,GAAAU,MAAA,CAAAb,kBAAA,CAAAC,GAAA,4BAAAE,OAAA,CAAAY,OAAA,OAAAZ,OAAA,GAAAU,MAAA,CAAAb,kBAAA,CAAAC,GAAA,4BAAAE,OAAA,CAAAa,OAAA,EAAyG;IAErGhF,uDAAA,GAA0F;IAA1FA,wDAAA,WAAAiF,OAAA,GAAAJ,MAAA,CAAAb,kBAAA,CAAAC,GAAA,4BAAAgB,OAAA,CAAAF,OAAA,OAAAE,OAAA,GAAAJ,MAAA,CAAAb,kBAAA,CAAAC,GAAA,4BAAAgB,OAAA,CAAAD,OAAA,EAA0F;IAU9FhF,uDAAA,GAAoD;IAApDA,wDAAA,aAAA6E,MAAA,CAAAb,kBAAA,CAAAe,OAAA,IAAAF,MAAA,CAAAK,SAAA,CAAoD;IAE7ClF,uDAAA,GAAe;IAAfA,wDAAA,SAAA6E,MAAA,CAAAK,SAAA,CAAe;IACtBlF,uDAAA,GACF;IADEA,gEAAA,MAAA6E,MAAA,CAAAK,SAAA,sCACF;;;;;IA2BElF,4DAAA,UAA4D;IAAAA,oDAAA,sBAAe;IAAAA,0DAAA,EAAM;;;;;IACjFA,4DAAA,UAAgH;IAAAA,oDAAA,2BAAoB;IAAAA,0DAAA,EAAM;;;;;IAF5IA,4DAAA,cAA6G;IAC3GA,wDAAA,IAAAmF,oDAAA,kBAAiF;IACjFnF,wDAAA,IAAAoF,oDAAA,kBAA0I;IAC5IpF,0DAAA,EAAM;;;;;;IAFEA,uDAAA,GAAoD;IAApDA,wDAAA,UAAAe,OAAA,GAAAsE,OAAA,CAAAC,aAAA,CAAArB,GAAA,0BAAAlD,OAAA,CAAAmD,MAAA,kBAAAnD,OAAA,CAAAmD,MAAA,aAAoD;IACpDlE,uDAAA,GAAwG;IAAxGA,wDAAA,WAAAmE,OAAA,GAAAkB,OAAA,CAAAC,aAAA,CAAArB,GAAA,0BAAAE,OAAA,CAAAD,MAAA,kBAAAC,OAAA,CAAAD,MAAA,oBAAAC,OAAA,GAAAkB,OAAA,CAAAC,aAAA,CAAArB,GAAA,0BAAAE,OAAA,CAAAD,MAAA,kBAAAC,OAAA,CAAAD,MAAA,eAAwG;;;;;IAe9GlE,4DAAA,UAAoE;IAAAA,oDAAA,+BAAwB;IAAAA,0DAAA,EAAM;;;;;IAClGA,4DAAA,UAAqE;IAAAA,oDAAA,6CAAsC;IAAAA,0DAAA,EAAM;;;;;IAFnHA,4DAAA,cAA6H;IAC3HA,wDAAA,IAAAuF,oDAAA,kBAAkG;IAClGvF,wDAAA,IAAAwF,oDAAA,kBAAiH;IACnHxF,0DAAA,EAAM;;;;;;IAFEA,uDAAA,GAA4D;IAA5DA,wDAAA,UAAAe,OAAA,GAAA0E,OAAA,CAAAH,aAAA,CAAArB,GAAA,kCAAAlD,OAAA,CAAAmD,MAAA,kBAAAnD,OAAA,CAAAmD,MAAA,aAA4D;IAC5DlE,uDAAA,GAA6D;IAA7DA,wDAAA,UAAAmE,OAAA,GAAAsB,OAAA,CAAAH,aAAA,CAAArB,GAAA,kCAAAE,OAAA,CAAAD,MAAA,kBAAAC,OAAA,CAAAD,MAAA,cAA6D;;;;;IAenElE,4DAAA,UAAwE;IAAAA,oDAAA,mCAA4B;IAAAA,0DAAA,EAAM;;;;;IAD5GA,4DAAA,cAAqI;IACnIA,wDAAA,IAAA0F,oDAAA,kBAA0G;IAC5G1F,0DAAA,EAAM;;;;;IADEA,uDAAA,GAAgE;IAAhEA,wDAAA,UAAAe,OAAA,GAAA4E,OAAA,CAAAL,aAAA,CAAArB,GAAA,sCAAAlD,OAAA,CAAAmD,MAAA,kBAAAnD,OAAA,CAAAmD,MAAA,aAAgE;;;;;IAExElE,4DAAA,cAAkI;IAChIA,oDAAA,+BACF;IAAAA,0DAAA,EAAM;;;;;IASJA,uDAAA,eAA6E;;;;;;IA/DrFA,4DAAA,cAA0D;IAEnDA,oDAAA,oBAAa;IAAAA,4DAAA,aAAQ;IAAAA,oDAAA,GAAW;IAAAA,0DAAA,EAAS;IAG9CA,4DAAA,eAA6D;IAA3BA,wDAAA,sBAAA4F,iEAAA;MAAA5F,2DAAA,CAAA6F,IAAA;MAAA,MAAAC,OAAA,GAAA9F,2DAAA;MAAA,OAAYA,yDAAA,CAAA8F,OAAA,CAAAC,WAAA,EAAa;IAAA,EAAC;IAC1D/F,4DAAA,cAAwB;IACLA,oDAAA,gBAAS;IAAAA,0DAAA,EAAQ;IAClCA,uDAAA,iBAQE;IACFA,wDAAA,KAAAgG,8CAAA,kBAGM;IACRhG,0DAAA,EAAM;IAENA,4DAAA,eAAwB;IACGA,oDAAA,oBAAY;IAAAA,0DAAA,EAAQ;IAC7CA,uDAAA,iBAOE;IACFA,wDAAA,KAAAiG,8CAAA,kBAGM;IACRjG,0DAAA,EAAM;IAENA,4DAAA,eAAwB;IACOA,oDAAA,4BAAoB;IAAAA,0DAAA,EAAQ;IACzDA,uDAAA,iBAOE;IACFA,wDAAA,KAAAkG,8CAAA,kBAEM;IACNlG,wDAAA,KAAAmG,8CAAA,kBAEM;IACRnG,0DAAA,EAAM;IAENA,4DAAA,eAA0B;IAMtBA,wDAAA,KAAAoG,+CAAA,mBAA6E;IAC7EpG,oDAAA,IACF;IAAAA,0DAAA,EAAS;IACTA,4DAAA,kBAAmE;IAAnBA,wDAAA,mBAAAqG,iEAAA;MAAArG,2DAAA,CAAA6F,IAAA;MAAA,MAAAS,OAAA,GAAAtG,2DAAA;MAAA,OAASA,yDAAA,CAAAsG,OAAA,CAAAC,MAAA,EAAQ;IAAA,EAAC;IAChEvG,oDAAA,cACF;IAAAA,0DAAA,EAAS;IACTA,4DAAA,kBAAmG;IAA7CA,wDAAA,mBAAAwG,iEAAA;MAAAxG,2DAAA,CAAA6F,IAAA;MAAA,MAAAY,OAAA,GAAAzG,2DAAA;MAAA,OAASA,yDAAA,CAAAyG,OAAA,CAAAC,SAAA,EAAW;IAAA,EAAC;IACzE1G,oDAAA,oBACF;IAAAA,0DAAA,EAAS;;;;;;;;;;;IArEaA,uDAAA,GAAW;IAAXA,+DAAA,CAAA2G,MAAA,CAAAC,KAAA,CAAW;IAG/B5G,uDAAA,GAA2B;IAA3BA,wDAAA,cAAA2G,MAAA,CAAArB,aAAA,CAA2B;IAU3BtF,uDAAA,GAA2F;IAA3FA,yDAAA,iBAAAiF,OAAA,GAAA0B,MAAA,CAAArB,aAAA,CAAArB,GAAA,0BAAAgB,OAAA,CAAAF,OAAA,OAAAE,OAAA,GAAA0B,MAAA,CAAArB,aAAA,CAAArB,GAAA,0BAAAgB,OAAA,CAAAD,OAAA,EAA2F;IAEvFhF,uDAAA,GAA4E;IAA5EA,wDAAA,WAAA6G,OAAA,GAAAF,MAAA,CAAArB,aAAA,CAAArB,GAAA,0BAAA4C,OAAA,CAAA9B,OAAA,OAAA8B,OAAA,GAAAF,MAAA,CAAArB,aAAA,CAAArB,GAAA,0BAAA4C,OAAA,CAAA7B,OAAA,EAA4E;IAchFhF,uDAAA,GAA2G;IAA3GA,yDAAA,iBAAA8G,OAAA,GAAAH,MAAA,CAAArB,aAAA,CAAArB,GAAA,kCAAA6C,OAAA,CAAA/B,OAAA,OAAA+B,OAAA,GAAAH,MAAA,CAAArB,aAAA,CAAArB,GAAA,kCAAA6C,OAAA,CAAA9B,OAAA,EAA2G;IAEvGhF,uDAAA,GAA4F;IAA5FA,wDAAA,WAAA+G,OAAA,GAAAJ,MAAA,CAAArB,aAAA,CAAArB,GAAA,kCAAA8C,OAAA,CAAAhC,OAAA,OAAAgC,OAAA,GAAAJ,MAAA,CAAArB,aAAA,CAAArB,GAAA,kCAAA8C,OAAA,CAAA/B,OAAA,EAA4F;IAchGhF,uDAAA,GAAmH;IAAnHA,yDAAA,iBAAAgH,OAAA,GAAAL,MAAA,CAAArB,aAAA,CAAArB,GAAA,sCAAA+C,OAAA,CAAAjC,OAAA,OAAAiC,OAAA,GAAAL,MAAA,CAAArB,aAAA,CAAArB,GAAA,sCAAA+C,OAAA,CAAAhC,OAAA,EAAmH;IAE/GhF,uDAAA,GAAoG;IAApGA,wDAAA,WAAAiH,OAAA,GAAAN,MAAA,CAAArB,aAAA,CAAArB,GAAA,sCAAAgD,OAAA,CAAAlC,OAAA,OAAAkC,OAAA,GAAAN,MAAA,CAAArB,aAAA,CAAArB,GAAA,sCAAAgD,OAAA,CAAAjC,OAAA,EAAoG;IAGpGhF,uDAAA,GAAiG;IAAjGA,wDAAA,UAAA2G,MAAA,CAAArB,aAAA,CAAApB,MAAA,kBAAAyC,MAAA,CAAArB,aAAA,CAAApB,MAAA,2BAAAgD,OAAA,GAAAP,MAAA,CAAArB,aAAA,CAAArB,GAAA,sCAAAiD,OAAA,CAAAlC,OAAA,EAAiG;IASrGhF,uDAAA,GAA+C;IAA/CA,wDAAA,aAAA2G,MAAA,CAAArB,aAAA,CAAAP,OAAA,IAAA4B,MAAA,CAAAzB,SAAA,CAA+C;IAExClF,uDAAA,GAAe;IAAfA,wDAAA,SAAA2G,MAAA,CAAAzB,SAAA,CAAe;IACtBlF,uDAAA,GACF;IADEA,gEAAA,MAAA2G,MAAA,CAAAzB,SAAA,mDACF;IAI4ElF,uDAAA,GAAsB;IAAtBA,wDAAA,aAAA2G,MAAA,CAAAzB,SAAA,CAAsB;;;ADnH5G,MAAO7F,uBAAuB;EASlCgC,YACU8F,EAAe,EACflG,WAAwB,EACxBmG,MAAc;IAFd,KAAAD,EAAE,GAAFA,EAAE;IACF,KAAAlG,WAAW,GAAXA,WAAW;IACX,KAAAmG,MAAM,GAANA,MAAM;IAThB,KAAAC,WAAW,GAAiC,OAAO;IACnD,KAAAnC,SAAS,GAAG,KAAK;IACjB,KAAAvB,YAAY,GAAG,EAAE;IACjB,KAAAE,cAAc,GAAG,EAAE;IACnB,KAAA+C,KAAK,GAAG,EAAE;IAOR,IAAI,CAAC5C,kBAAkB,GAAG,IAAI,CAACmD,EAAE,CAACG,KAAK,CAAC;MACtCV,KAAK,EAAE,CAAC,EAAE,EAAE,CAACnD,sDAAU,CAAC8D,QAAQ,EAAE9D,sDAAU,CAACmD,KAAK,CAAC;KACpD,CAAC;IAEF,IAAI,CAACtB,aAAa,GAAG,IAAI,CAAC6B,EAAE,CAACG,KAAK,CAAC;MACjCE,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC/D,sDAAU,CAAC8D,QAAQ,EAAE9D,sDAAU,CAACgE,SAAS,CAAC,CAAC,CAAC,EAAEhE,sDAAU,CAACiE,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;MAClFC,WAAW,EAAE,CAAC,EAAE,EAAE,CAAClE,sDAAU,CAAC8D,QAAQ,EAAE9D,sDAAU,CAACgE,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;MACjEG,eAAe,EAAE,CAAC,EAAE,EAAE,CAACnE,sDAAU,CAAC8D,QAAQ,CAAC;KAC5C,EAAE;MAAEM,UAAU,EAAE,IAAI,CAACC;IAAsB,CAAE,CAAC;EACjD;EAEAA,sBAAsBA,CAACC,IAAe;IACpC,MAAMJ,WAAW,GAAGI,IAAI,CAAC9D,GAAG,CAAC,aAAa,CAAC,EAAE+D,KAAK;IAClD,MAAMJ,eAAe,GAAGG,IAAI,CAAC9D,GAAG,CAAC,iBAAiB,CAAC,EAAE+D,KAAK;IAC1D,OAAOL,WAAW,KAAKC,eAAe,GAAG,IAAI,GAAG;MAAEK,gBAAgB,EAAE;IAAI,CAAE;EAC5E;EAEA1D,SAASA,CAAA;IACP,IAAI,IAAI,CAACP,kBAAkB,CAACkE,KAAK,EAAE;MACjC,IAAI,CAAChD,SAAS,GAAG,IAAI;MACrB,IAAI,CAACvB,YAAY,GAAG,EAAE;MACtB,IAAI,CAACiD,KAAK,GAAG,IAAI,CAAC5C,kBAAkB,CAACC,GAAG,CAAC,OAAO,CAAC,EAAE+D,KAAK;MAExD,IAAI,CAAC/G,WAAW,CAACkH,cAAc,CAAC;QAAEvB,KAAK,EAAE,IAAI,CAACA;MAAK,CAAE,CAAC,CAACpF,SAAS,CAAC;QAC/DC,IAAI,EAAG2G,QAAQ,IAAI;UACjB,IAAI,CAAClD,SAAS,GAAG,KAAK;UACtB,IAAIkD,QAAQ,CAACC,OAAO,EAAE;YACpB,IAAI,CAACxE,cAAc,GAAG,sCAAsC;YAC5D,IAAI,CAACwD,WAAW,GAAG,KAAK;YACxBiB,UAAU,CAAC,MAAK;cACd,IAAI,CAACzE,cAAc,GAAG,EAAE;YAC1B,CAAC,EAAE,IAAI,CAAC;WACT,MAAM;YACL,IAAI,CAACF,YAAY,GAAGyE,QAAQ,CAACG,OAAO,IAAI,oBAAoB;;QAEhE,CAAC;QACDzG,KAAK,EAAGA,KAAK,IAAI;UACf,IAAI,CAACoD,SAAS,GAAG,KAAK;UACtB,IAAI,CAACvB,YAAY,GAAG7B,KAAK,CAACA,KAAK,EAAEyG,OAAO,IAAI,uCAAuC;QACrF;OACD,CAAC;;EAEN;EAEAxC,WAAWA,CAAA;IACT,IAAI,IAAI,CAACT,aAAa,CAAC4C,KAAK,EAAE;MAC5B,IAAI,CAAChD,SAAS,GAAG,IAAI;MACrB,IAAI,CAACvB,YAAY,GAAG,EAAE;MAEtB,MAAM6E,gBAAgB,GAAG;QACvB5B,KAAK,EAAE,IAAI,CAACA,KAAK;QACjBY,GAAG,EAAE,IAAI,CAAClC,aAAa,CAACrB,GAAG,CAAC,KAAK,CAAC,EAAE+D,KAAK;QACzCL,WAAW,EAAE,IAAI,CAACrC,aAAa,CAACrB,GAAG,CAAC,aAAa,CAAC,EAAE+D,KAAK;QACzDJ,eAAe,EAAE,IAAI,CAACtC,aAAa,CAACrB,GAAG,CAAC,iBAAiB,CAAC,EAAE+D;OAC7D;MAED,IAAI,CAAC/G,WAAW,CAACwH,yBAAyB,CAACD,gBAAgB,CAAC,CAAChH,SAAS,CAAC;QACrEC,IAAI,EAAG2G,QAAQ,IAAI;UACjB,IAAI,CAAClD,SAAS,GAAG,KAAK;UACtB,IAAIkD,QAAQ,CAACC,OAAO,EAAE;YACpB,IAAI,CAACxE,cAAc,GAAG,wDAAwD;YAC9EyE,UAAU,CAAC,MAAK;cACd,IAAI,CAAClB,MAAM,CAACsB,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;YAClC,CAAC,EAAE,IAAI,CAAC;WACT,MAAM;YACL,IAAI,CAAC/E,YAAY,GAAGyE,QAAQ,CAACG,OAAO,IAAI,2BAA2B;;QAEvE,CAAC;QACDzG,KAAK,EAAGA,KAAK,IAAI;UACf,IAAI,CAACoD,SAAS,GAAG,KAAK;UACtB,IAAI,CAACvB,YAAY,GAAG7B,KAAK,CAACA,KAAK,EAAEyG,OAAO,IAAI,8CAA8C;QAC5F;OACD,CAAC;;EAEN;EAEAhC,MAAMA,CAAA;IACJ,IAAI,IAAI,CAACc,WAAW,KAAK,KAAK,EAAE;MAC9B,IAAI,CAACA,WAAW,GAAG,OAAO;MAC1B,IAAI,CAAC/B,aAAa,CAACqD,KAAK,EAAE;;EAE9B;EAEA/D,SAASA,CAAA;IACP,IAAI,CAACwC,MAAM,CAACsB,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;EAClC;EAEAhC,SAASA,CAAA;IACP,IAAI,CAACnC,SAAS,EAAE;EAClB;;;uBAvGWlF,uBAAuB,EAAAW,+DAAA,CAAAF,uDAAA,GAAAE,+DAAA,CAAA6I,+DAAA,GAAA7I,+DAAA,CAAA8I,mDAAA;IAAA;EAAA;;;YAAvBzJ,uBAAuB;MAAA4C,SAAA;MAAAC,KAAA;MAAAC,IAAA;MAAAC,MAAA;MAAAC,QAAA,WAAA2G,iCAAAzG,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;UCVpCvC,4DAAA,aAA4B;UAKDA,oDAAA,sBAAe;UAAAA,0DAAA,EAAK;UACrCA,4DAAA,gBAA4D;UAAtBA,wDAAA,mBAAAiJ,yDAAA;YAAA,OAASzG,GAAA,CAAAoC,SAAA,EAAW;UAAA,EAAC;UACzD5E,uDAAA,WAAgC;UAACA,oDAAA,sBACnC;UAAAA,0DAAA,EAAS;UAEXA,4DAAA,cAAuB;UAGrBA,wDAAA,KAAAkJ,uCAAA,iBAEM;UACNlJ,wDAAA,KAAAmJ,uCAAA,kBAEM;UAGNnJ,wDAAA,KAAAoJ,uCAAA,mBAgCM;UAGNpJ,wDAAA,KAAAqJ,uCAAA,oBA0EM;UACRrJ,0DAAA,EAAM;;;UAtHEA,uDAAA,IAAkB;UAAlBA,wDAAA,SAAAwC,GAAA,CAAAmB,YAAA,CAAkB;UAGlB3D,uDAAA,GAAoB;UAApBA,wDAAA,SAAAwC,GAAA,CAAAqB,cAAA,CAAoB;UAKpB7D,uDAAA,GAA6B;UAA7BA,wDAAA,SAAAwC,GAAA,CAAA6E,WAAA,aAA6B;UAmC7BrH,uDAAA,GAA2B;UAA3BA,wDAAA,SAAAwC,GAAA,CAAA6E,WAAA,WAA2B;;;;;;;;;;;;;;;;;;;;;;;;;;ACvDyB;;;;;;;;ICOhErH,4DAAA,aAAqD;IACnDA,oDAAA,GACF;IAAAA,0DAAA,EAAM;;;;IADJA,uDAAA,GACF;IADEA,gEAAA,MAAA0D,MAAA,CAAAC,YAAA,MACF;;;;;IACA3D,4DAAA,aAAwD;IACtDA,oDAAA,GACF;IAAAA,0DAAA,EAAM;;;;IADJA,uDAAA,GACF;IADEA,gEAAA,MAAA4D,MAAA,CAAAC,cAAA,MACF;;;;;IAgBQ7D,4DAAA,UAAmE;IAAAA,oDAAA,wBAAiB;IAAAA,0DAAA,EAAM;;;;;IAC1FA,4DAAA,UAAgE;IAAAA,oDAAA,yCAAkC;IAAAA,0DAAA,EAAM;;;;;IAF1GA,4DAAA,cAA2H;IACzHA,wDAAA,IAAAsJ,kDAAA,kBAA0F;IAC1FtJ,wDAAA,IAAAuJ,kDAAA,kBAAwG;IAC1GvJ,0DAAA,EAAM;;;;;;IAFEA,uDAAA,GAA2D;IAA3DA,wDAAA,UAAAe,OAAA,GAAAC,MAAA,CAAAwI,kBAAA,CAAAvF,GAAA,4BAAAlD,OAAA,CAAAmD,MAAA,kBAAAnD,OAAA,CAAAmD,MAAA,aAA2D;IAC3DlE,uDAAA,GAAwD;IAAxDA,wDAAA,UAAAmE,OAAA,GAAAnD,MAAA,CAAAwI,kBAAA,CAAAvF,GAAA,4BAAAE,OAAA,CAAAD,MAAA,kBAAAC,OAAA,CAAAD,MAAA,UAAwD;;;;;IAU9DlE,uDAAA,eAA6E;;;;;;IAxBrFA,4DAAA,aAA4D;IACnBA,wDAAA,sBAAAyJ,gEAAA;MAAAzJ,2DAAA,CAAAqE,GAAA;MAAA,MAAAC,MAAA,GAAAtE,2DAAA;MAAA,OAAYA,yDAAA,CAAAsE,MAAA,CAAAC,SAAA,EAAW;IAAA,EAAC;IAC7DvE,4DAAA,cAAwB;IACHA,oDAAA,oBAAa;IAAAA,0DAAA,EAAQ;IACxCA,uDAAA,gBAOE;IACFA,wDAAA,IAAA0J,4CAAA,kBAGM;IACR1J,0DAAA,EAAM;IAENA,4DAAA,cAA0B;IAMtBA,wDAAA,IAAA2J,6CAAA,mBAA6E;IAC7E3J,oDAAA,IACF;IAAAA,0DAAA,EAAS;IACTA,4DAAA,kBAAsE;IAAtBA,wDAAA,mBAAA4J,gEAAA;MAAA5J,2DAAA,CAAAqE,GAAA;MAAA,MAAAM,OAAA,GAAA3E,2DAAA;MAAA,OAASA,yDAAA,CAAA2E,OAAA,CAAAkF,SAAA,EAAW;IAAA,EAAC;IACnE7J,oDAAA,uBACF;IAAAA,0DAAA,EAAS;;;;;;IA5BPA,uDAAA,GAAgC;IAAhCA,wDAAA,cAAA6E,MAAA,CAAA2E,kBAAA,CAAgC;IAShCxJ,uDAAA,GAAyG;IAAzGA,yDAAA,iBAAAmE,OAAA,GAAAU,MAAA,CAAA2E,kBAAA,CAAAvF,GAAA,4BAAAE,OAAA,CAAAY,OAAA,OAAAZ,OAAA,GAAAU,MAAA,CAAA2E,kBAAA,CAAAvF,GAAA,4BAAAE,OAAA,CAAAa,OAAA,EAAyG;IAErGhF,uDAAA,GAA0F;IAA1FA,wDAAA,WAAAiF,OAAA,GAAAJ,MAAA,CAAA2E,kBAAA,CAAAvF,GAAA,4BAAAgB,OAAA,CAAAF,OAAA,OAAAE,OAAA,GAAAJ,MAAA,CAAA2E,kBAAA,CAAAvF,GAAA,4BAAAgB,OAAA,CAAAD,OAAA,EAA0F;IAU9FhF,uDAAA,GAAoD;IAApDA,wDAAA,aAAA6E,MAAA,CAAA2E,kBAAA,CAAAzE,OAAA,IAAAF,MAAA,CAAAK,SAAA,CAAoD;IAE7ClF,uDAAA,GAAe;IAAfA,wDAAA,SAAA6E,MAAA,CAAAK,SAAA,CAAe;IACtBlF,uDAAA,GACF;IADEA,gEAAA,MAAA6E,MAAA,CAAAK,SAAA,sCACF;;;;;IA2BElF,4DAAA,UAA4D;IAAAA,oDAAA,sBAAe;IAAAA,0DAAA,EAAM;;;;;IACjFA,4DAAA,UAAgH;IAAAA,oDAAA,2BAAoB;IAAAA,0DAAA,EAAM;;;;;IAF5IA,4DAAA,cAA6G;IAC3GA,wDAAA,IAAA8J,oDAAA,kBAAiF;IACjF9J,wDAAA,IAAA+J,oDAAA,kBAA0I;IAC5I/J,0DAAA,EAAM;;;;;;IAFEA,uDAAA,GAAoD;IAApDA,wDAAA,UAAAe,OAAA,GAAAsE,OAAA,CAAAC,aAAA,CAAArB,GAAA,0BAAAlD,OAAA,CAAAmD,MAAA,kBAAAnD,OAAA,CAAAmD,MAAA,aAAoD;IACpDlE,uDAAA,GAAwG;IAAxGA,wDAAA,WAAAmE,OAAA,GAAAkB,OAAA,CAAAC,aAAA,CAAArB,GAAA,0BAAAE,OAAA,CAAAD,MAAA,kBAAAC,OAAA,CAAAD,MAAA,oBAAAC,OAAA,GAAAkB,OAAA,CAAAC,aAAA,CAAArB,GAAA,0BAAAE,OAAA,CAAAD,MAAA,kBAAAC,OAAA,CAAAD,MAAA,eAAwG;;;;;IAe9GlE,4DAAA,UAAoE;IAAAA,oDAAA,+BAAwB;IAAAA,0DAAA,EAAM;;;;;IAClGA,4DAAA,UAAqE;IAAAA,oDAAA,6CAAsC;IAAAA,0DAAA,EAAM;;;;;IAFnHA,4DAAA,cAA6H;IAC3HA,wDAAA,IAAAgK,oDAAA,kBAAkG;IAClGhK,wDAAA,IAAAiK,oDAAA,kBAAiH;IACnHjK,0DAAA,EAAM;;;;;;IAFEA,uDAAA,GAA4D;IAA5DA,wDAAA,UAAAe,OAAA,GAAA0E,OAAA,CAAAH,aAAA,CAAArB,GAAA,kCAAAlD,OAAA,CAAAmD,MAAA,kBAAAnD,OAAA,CAAAmD,MAAA,aAA4D;IAC5DlE,uDAAA,GAA6D;IAA7DA,wDAAA,UAAAmE,OAAA,GAAAsB,OAAA,CAAAH,aAAA,CAAArB,GAAA,kCAAAE,OAAA,CAAAD,MAAA,kBAAAC,OAAA,CAAAD,MAAA,cAA6D;;;;;IAenElE,4DAAA,UAAwE;IAAAA,oDAAA,mCAA4B;IAAAA,0DAAA,EAAM;;;;;IAD5GA,4DAAA,cAAqI;IACnIA,wDAAA,IAAAkK,oDAAA,kBAA0G;IAC5GlK,0DAAA,EAAM;;;;;IADEA,uDAAA,GAAgE;IAAhEA,wDAAA,UAAAe,OAAA,GAAA4E,OAAA,CAAAL,aAAA,CAAArB,GAAA,sCAAAlD,OAAA,CAAAmD,MAAA,kBAAAnD,OAAA,CAAAmD,MAAA,aAAgE;;;;;IAExElE,4DAAA,cAAkI;IAChIA,oDAAA,+BACF;IAAAA,0DAAA,EAAM;;;;;IASJA,uDAAA,eAA6E;;;;;;IA/DrFA,4DAAA,aAA0D;IAEnDA,oDAAA,oBAAa;IAAAA,4DAAA,aAAQ;IAAAA,oDAAA,GAAW;IAAAA,0DAAA,EAAS;IAG9CA,4DAAA,cAA6D;IAA3BA,wDAAA,sBAAAmK,iEAAA;MAAAnK,2DAAA,CAAA6F,IAAA;MAAA,MAAAC,OAAA,GAAA9F,2DAAA;MAAA,OAAYA,yDAAA,CAAA8F,OAAA,CAAAC,WAAA,EAAa;IAAA,EAAC;IAC1D/F,4DAAA,cAAwB;IACLA,oDAAA,gBAAS;IAAAA,0DAAA,EAAQ;IAClCA,uDAAA,iBAQE;IACFA,wDAAA,KAAAoK,8CAAA,kBAGM;IACRpK,0DAAA,EAAM;IAENA,4DAAA,eAAwB;IACGA,oDAAA,oBAAY;IAAAA,0DAAA,EAAQ;IAC7CA,uDAAA,iBAOE;IACFA,wDAAA,KAAAqK,8CAAA,kBAGM;IACRrK,0DAAA,EAAM;IAENA,4DAAA,eAAwB;IACOA,oDAAA,4BAAoB;IAAAA,0DAAA,EAAQ;IACzDA,uDAAA,iBAOE;IACFA,wDAAA,KAAAsK,8CAAA,kBAEM;IACNtK,wDAAA,KAAAuK,8CAAA,kBAEM;IACRvK,0DAAA,EAAM;IAENA,4DAAA,eAA0B;IAMtBA,wDAAA,KAAAwK,+CAAA,mBAA6E;IAC7ExK,oDAAA,IACF;IAAAA,0DAAA,EAAS;IACTA,4DAAA,kBAAmE;IAAnBA,wDAAA,mBAAAyK,iEAAA;MAAAzK,2DAAA,CAAA6F,IAAA;MAAA,MAAAS,OAAA,GAAAtG,2DAAA;MAAA,OAASA,yDAAA,CAAAsG,OAAA,CAAAC,MAAA,EAAQ;IAAA,EAAC;IAChEvG,oDAAA,cACF;IAAAA,0DAAA,EAAS;IACTA,4DAAA,kBAAwF;IAA7CA,wDAAA,mBAAA0K,iEAAA;MAAA1K,2DAAA,CAAA6F,IAAA;MAAA,MAAAY,OAAA,GAAAzG,2DAAA;MAAA,OAASA,yDAAA,CAAAyG,OAAA,CAAAC,SAAA,EAAW;IAAA,EAAC;IAC9D1G,oDAAA,oBACF;IAAAA,0DAAA,EAAS;;;;;;;;;;;IArEaA,uDAAA,GAAW;IAAXA,+DAAA,CAAA2G,MAAA,CAAAC,KAAA,CAAW;IAG/B5G,uDAAA,GAA2B;IAA3BA,wDAAA,cAAA2G,MAAA,CAAArB,aAAA,CAA2B;IAU3BtF,uDAAA,GAA2F;IAA3FA,yDAAA,iBAAAiF,OAAA,GAAA0B,MAAA,CAAArB,aAAA,CAAArB,GAAA,0BAAAgB,OAAA,CAAAF,OAAA,OAAAE,OAAA,GAAA0B,MAAA,CAAArB,aAAA,CAAArB,GAAA,0BAAAgB,OAAA,CAAAD,OAAA,EAA2F;IAEvFhF,uDAAA,GAA4E;IAA5EA,wDAAA,WAAA6G,OAAA,GAAAF,MAAA,CAAArB,aAAA,CAAArB,GAAA,0BAAA4C,OAAA,CAAA9B,OAAA,OAAA8B,OAAA,GAAAF,MAAA,CAAArB,aAAA,CAAArB,GAAA,0BAAA4C,OAAA,CAAA7B,OAAA,EAA4E;IAchFhF,uDAAA,GAA2G;IAA3GA,yDAAA,iBAAA8G,OAAA,GAAAH,MAAA,CAAArB,aAAA,CAAArB,GAAA,kCAAA6C,OAAA,CAAA/B,OAAA,OAAA+B,OAAA,GAAAH,MAAA,CAAArB,aAAA,CAAArB,GAAA,kCAAA6C,OAAA,CAAA9B,OAAA,EAA2G;IAEvGhF,uDAAA,GAA4F;IAA5FA,wDAAA,WAAA+G,OAAA,GAAAJ,MAAA,CAAArB,aAAA,CAAArB,GAAA,kCAAA8C,OAAA,CAAAhC,OAAA,OAAAgC,OAAA,GAAAJ,MAAA,CAAArB,aAAA,CAAArB,GAAA,kCAAA8C,OAAA,CAAA/B,OAAA,EAA4F;IAchGhF,uDAAA,GAAmH;IAAnHA,yDAAA,iBAAAgH,OAAA,GAAAL,MAAA,CAAArB,aAAA,CAAArB,GAAA,sCAAA+C,OAAA,CAAAjC,OAAA,OAAAiC,OAAA,GAAAL,MAAA,CAAArB,aAAA,CAAArB,GAAA,sCAAA+C,OAAA,CAAAhC,OAAA,EAAmH;IAE/GhF,uDAAA,GAAoG;IAApGA,wDAAA,WAAAiH,OAAA,GAAAN,MAAA,CAAArB,aAAA,CAAArB,GAAA,sCAAAgD,OAAA,CAAAlC,OAAA,OAAAkC,OAAA,GAAAN,MAAA,CAAArB,aAAA,CAAArB,GAAA,sCAAAgD,OAAA,CAAAjC,OAAA,EAAoG;IAGpGhF,uDAAA,GAAiG;IAAjGA,wDAAA,UAAA2G,MAAA,CAAArB,aAAA,CAAApB,MAAA,kBAAAyC,MAAA,CAAArB,aAAA,CAAApB,MAAA,2BAAAgD,OAAA,GAAAP,MAAA,CAAArB,aAAA,CAAArB,GAAA,sCAAAiD,OAAA,CAAAlC,OAAA,EAAiG;IASrGhF,uDAAA,GAA+C;IAA/CA,wDAAA,aAAA2G,MAAA,CAAArB,aAAA,CAAAP,OAAA,IAAA4B,MAAA,CAAAzB,SAAA,CAA+C;IAExClF,uDAAA,GAAe;IAAfA,wDAAA,SAAA2G,MAAA,CAAAzB,SAAA,CAAe;IACtBlF,uDAAA,GACF;IADEA,gEAAA,MAAA2G,MAAA,CAAAzB,SAAA,mDACF;IAIiElF,uDAAA,GAAsB;IAAtBA,wDAAA,aAAA2G,MAAA,CAAAzB,SAAA,CAAsB;;;AD9G3F,MAAOjG,uBAAuB;EASlCoC,YACU8F,EAAe,EACflG,WAAwB,EACxBmG,MAAc;IAFd,KAAAD,EAAE,GAAFA,EAAE;IACF,KAAAlG,WAAW,GAAXA,WAAW;IACX,KAAAmG,MAAM,GAANA,MAAM;IAThB,KAAAC,WAAW,GAAiC,OAAO;IACnD,KAAAnC,SAAS,GAAG,KAAK;IACjB,KAAAvB,YAAY,GAAG,EAAE;IACjB,KAAAE,cAAc,GAAG,EAAE;IACnB,KAAA+C,KAAK,GAAG,EAAE;IAOR,IAAI,CAAC4C,kBAAkB,GAAG,IAAI,CAACrC,EAAE,CAACG,KAAK,CAAC;MACtCV,KAAK,EAAE,CAAC,EAAE,EAAE,CAACnD,sDAAU,CAAC8D,QAAQ,EAAE9D,sDAAU,CAACmD,KAAK,CAAC;KACpD,CAAC;IAEF,IAAI,CAACtB,aAAa,GAAG,IAAI,CAAC6B,EAAE,CAACG,KAAK,CAAC;MACjCE,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC/D,sDAAU,CAAC8D,QAAQ,EAAE9D,sDAAU,CAACgE,SAAS,CAAC,CAAC,CAAC,EAAEhE,sDAAU,CAACiE,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;MAClFC,WAAW,EAAE,CAAC,EAAE,EAAE,CAAClE,sDAAU,CAAC8D,QAAQ,EAAE9D,sDAAU,CAACgE,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;MACjEG,eAAe,EAAE,CAAC,EAAE,EAAE,CAACnE,sDAAU,CAAC8D,QAAQ,CAAC;KAC5C,EAAE;MAAEM,UAAU,EAAE,IAAI,CAACC;IAAsB,CAAE,CAAC;EACjD;EAEAA,sBAAsBA,CAACC,IAAe;IACpC,MAAMJ,WAAW,GAAGI,IAAI,CAAC9D,GAAG,CAAC,aAAa,CAAC,EAAE+D,KAAK;IAClD,MAAMJ,eAAe,GAAGG,IAAI,CAAC9D,GAAG,CAAC,iBAAiB,CAAC,EAAE+D,KAAK;IAC1D,OAAOL,WAAW,KAAKC,eAAe,GAAG,IAAI,GAAG;MAAEK,gBAAgB,EAAE;IAAI,CAAE;EAC5E;EAEA1D,SAASA,CAAA;IACP,IAAI,IAAI,CAACiF,kBAAkB,CAACtB,KAAK,EAAE;MACjC,IAAI,CAAChD,SAAS,GAAG,IAAI;MACrB,IAAI,CAACvB,YAAY,GAAG,EAAE;MACtB,IAAI,CAACiD,KAAK,GAAG,IAAI,CAAC4C,kBAAkB,CAACvF,GAAG,CAAC,OAAO,CAAC,EAAE+D,KAAK;MAExD,IAAI,CAAC/G,WAAW,CAACkH,cAAc,CAAC;QAAEvB,KAAK,EAAE,IAAI,CAACA;MAAK,CAAE,CAAC,CAACpF,SAAS,CAAC;QAC/DC,IAAI,EAAG2G,QAAQ,IAAI;UACjB,IAAI,CAAClD,SAAS,GAAG,KAAK;UACtB,IAAIkD,QAAQ,CAACC,OAAO,EAAE;YACpB,IAAI,CAACxE,cAAc,GAAG,sCAAsC;YAC5D,IAAI,CAACwD,WAAW,GAAG,KAAK;YACxBiB,UAAU,CAAC,MAAK;cACd,IAAI,CAACzE,cAAc,GAAG,EAAE;YAC1B,CAAC,EAAE,IAAI,CAAC;WACT,MAAM;YACL,IAAI,CAACF,YAAY,GAAGyE,QAAQ,CAACG,OAAO,IAAI,oBAAoB;;QAEhE,CAAC;QACDzG,KAAK,EAAGA,KAAK,IAAI;UACf,IAAI,CAACoD,SAAS,GAAG,KAAK;UACtB,IAAI,CAACvB,YAAY,GAAG7B,KAAK,CAACA,KAAK,EAAEyG,OAAO,IAAI,uCAAuC;QACrF;OACD,CAAC;;EAEN;EAEAxC,WAAWA,CAAA;IACT,IAAI,IAAI,CAACT,aAAa,CAAC4C,KAAK,EAAE;MAC5B,IAAI,CAAChD,SAAS,GAAG,IAAI;MACrB,IAAI,CAACvB,YAAY,GAAG,EAAE;MAEtB,MAAM6E,gBAAgB,GAAG;QACvB5B,KAAK,EAAE,IAAI,CAACA,KAAK;QACjBY,GAAG,EAAE,IAAI,CAAClC,aAAa,CAACrB,GAAG,CAAC,KAAK,CAAC,EAAE+D,KAAK;QACzCL,WAAW,EAAE,IAAI,CAACrC,aAAa,CAACrB,GAAG,CAAC,aAAa,CAAC,EAAE+D,KAAK;QACzDJ,eAAe,EAAE,IAAI,CAACtC,aAAa,CAACrB,GAAG,CAAC,iBAAiB,CAAC,EAAE+D;OAC7D;MAED,IAAI,CAAC/G,WAAW,CAACwH,yBAAyB,CAACD,gBAAgB,CAAC,CAAChH,SAAS,CAAC;QACrEC,IAAI,EAAG2G,QAAQ,IAAI;UACjB,IAAI,CAAClD,SAAS,GAAG,KAAK;UACtB,IAAIkD,QAAQ,CAACC,OAAO,EAAE;YACpB,IAAI,CAACxE,cAAc,GAAG,sDAAsD;YAC5EyE,UAAU,CAAC,MAAK;cACd,IAAI,CAAClB,MAAM,CAACsB,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;YAClC,CAAC,EAAE,IAAI,CAAC;WACT,MAAM;YACL,IAAI,CAAC/E,YAAY,GAAGyE,QAAQ,CAACG,OAAO,IAAI,0BAA0B;;QAEtE,CAAC;QACDzG,KAAK,EAAGA,KAAK,IAAI;UACf,IAAI,CAACoD,SAAS,GAAG,KAAK;UACtB,IAAI,CAACvB,YAAY,GAAG7B,KAAK,CAACA,KAAK,EAAEyG,OAAO,IAAI,6CAA6C;QAC3F;OACD,CAAC;;EAEN;EAEAhC,MAAMA,CAAA;IACJ,IAAI,IAAI,CAACc,WAAW,KAAK,KAAK,EAAE;MAC9B,IAAI,CAACA,WAAW,GAAG,OAAO;MAC1B,IAAI,CAAC/B,aAAa,CAACqD,KAAK,EAAE;;EAE9B;EAEAjC,SAASA,CAAA;IACP,IAAI,CAACnC,SAAS,EAAE;EAClB;EAEAsF,SAASA,CAAA;IACP,IAAI,CAACzC,MAAM,CAACsB,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;EAClC;;;uBAvGWzJ,uBAAuB,EAAAe,+DAAA,CAAAF,uDAAA,GAAAE,+DAAA,CAAA6I,+DAAA,GAAA7I,+DAAA,CAAA8I,mDAAA;IAAA;EAAA;;;YAAvB7J,uBAAuB;MAAAgD,SAAA;MAAAC,KAAA;MAAAC,IAAA;MAAAC,MAAA;MAAAC,QAAA,WAAAsI,iCAAApI,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;UCVpCvC,4DAAA,aAAuC;UAG7BA,oDAAA,sBAAe;UAAAA,0DAAA,EAAK;UACxBA,4DAAA,QAAG;UAAAA,oDAAA,8CAAuC;UAAAA,0DAAA,EAAI;UAIhDA,wDAAA,IAAA4K,sCAAA,iBAEM;UACN5K,wDAAA,IAAA6K,sCAAA,iBAEM;UAGN7K,wDAAA,IAAA8K,sCAAA,kBAgCM;UAGN9K,wDAAA,KAAA+K,uCAAA,mBA0EM;UACR/K,0DAAA,EAAM;;;UAtHEA,uDAAA,GAAkB;UAAlBA,wDAAA,SAAAwC,GAAA,CAAAmB,YAAA,CAAkB;UAGlB3D,uDAAA,GAAoB;UAApBA,wDAAA,SAAAwC,GAAA,CAAAqB,cAAA,CAAoB;UAKpB7D,uDAAA,GAA6B;UAA7BA,wDAAA,SAAAwC,GAAA,CAAA6E,WAAA,aAA6B;UAmC7BrH,uDAAA,GAA2B;UAA3BA,wDAAA,SAAAwC,GAAA,CAAA6E,WAAA,WAA2B;;;;;;;;;;;;;;;;;;;;;;;;;;AClD+B;;;;;;;;ICmBtDrH,4DAAA,cAA6H;IAC3HA,oDAAA,GACF;IAAAA,0DAAA,EAAM;;;;IADJA,uDAAA,GACF;IADEA,gEAAA,MAAA0D,MAAA,CAAAsH,eAAA,yBACF;;;;;IAaAhL,4DAAA,cAA+G;IAC7GA,oDAAA,GACF;IAAAA,0DAAA,EAAM;;;;IADJA,uDAAA,GACF;IADEA,gEAAA,MAAA4D,MAAA,CAAAoH,eAAA,kBACF;;;;;IAIFhL,4DAAA,cAAqD;IACnDA,oDAAA,GACF;IAAAA,0DAAA,EAAM;;;;IADJA,uDAAA,GACF;IADEA,gEAAA,MAAA6E,MAAA,CAAAlB,YAAA,MACF;;;;;IAGA3D,4DAAA,cAAwD;IACtDA,oDAAA,GACF;IAAAA,0DAAA,EAAM;;;;IADJA,uDAAA,GACF;IADEA,gEAAA,MAAA2G,MAAA,CAAA9C,cAAA,MACF;;;;;IAQI7D,uDAAA,eAA2E;;;AD9CrF,MAAOlB,cAAc;EAMzBuC,YACU8F,EAAe,EACflG,WAAwB,EACxBmG,MAAc;IAFd,KAAAD,EAAE,GAAFA,EAAE;IACF,KAAAlG,WAAW,GAAXA,WAAW;IACX,KAAAmG,MAAM,GAANA,MAAM;IAPhB,KAAA6D,OAAO,GAAG,KAAK;IACf,KAAAtH,YAAY,GAAG,EAAE;IACjB,KAAAE,cAAc,GAAG,EAAE;IAOjB,IAAI,CAACqH,SAAS,GAAG,IAAI,CAAC/D,EAAE,CAACG,KAAK,CAAC;MAC7B6D,eAAe,EAAE,CAAC,EAAE,EAAE,CAAC1H,sDAAU,CAAC8D,QAAQ,CAAC,CAAC;MAC5C6D,QAAQ,EAAE,CAAC,EAAE,EAAE,CAAC3H,sDAAU,CAAC8D,QAAQ,EAAE9D,sDAAU,CAACgE,SAAS,CAAC,CAAC,CAAC,CAAC;KAC9D,CAAC;EACJ;EAEA4D,QAAQA,CAAA;IACN,IAAI,IAAI,CAACH,SAAS,CAAChD,KAAK,EAAE;MACxB,IAAI,CAAC+C,OAAO,GAAG,IAAI;MACnB,IAAI,CAACtH,YAAY,GAAG,EAAE;MACtB,IAAI,CAACE,cAAc,GAAG,EAAE;MAExB,IAAI,CAAC5C,WAAW,CAACqK,KAAK,CAAC,IAAI,CAACJ,SAAS,CAAClD,KAAK,CAAC,CAACxG,SAAS,CAAC;QACrDC,IAAI,EAAG2G,QAAQ,IAAI;UACjB,IAAIA,QAAQ,CAACC,OAAO,EAAE;YACpB,IAAI,CAACpH,WAAW,CAACsK,WAAW,CAACnD,QAAQ,CAACoD,IAAK,CAAC;YAC5C,IAAI,CAAC3H,cAAc,GAAG,mBAAmB;YACzCyE,UAAU,CAAC,MAAK;cACd,IAAI,CAAClB,MAAM,CAACsB,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC;YACtC,CAAC,EAAE,IAAI,CAAC;WACT,MAAM;YACL,IAAI,CAAC/E,YAAY,GAAGyE,QAAQ,CAACG,OAAO;;UAEtC,IAAI,CAAC0C,OAAO,GAAG,KAAK;QACtB,CAAC;QACDnJ,KAAK,EAAGA,KAAK,IAAI;UACf,IAAI,CAAC6B,YAAY,GAAG7B,KAAK,CAACA,KAAK,EAAEyG,OAAO,IAAI,iCAAiC;UAC7E,IAAI,CAAC0C,OAAO,GAAG,KAAK;QACtB;OACD,CAAC;;EAEN;EAEAD,eAAeA,CAACS,KAAa;IAC3B,MAAMC,OAAO,GAAG,IAAI,CAACR,SAAS,CAACjH,GAAG,CAACwH,KAAK,CAAC;IACzC,IAAIC,OAAO,EAAEC,QAAQ,CAAC,UAAU,CAAC,EAAE;MACjC,OAAO,GAAGF,KAAK,CAACG,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,EAAE,GAAGJ,KAAK,CAACK,KAAK,CAAC,CAAC,CAAC,cAAc;;IAExE,IAAIJ,OAAO,EAAEC,QAAQ,CAAC,WAAW,CAAC,EAAE;MAClC,OAAO,GAAGF,KAAK,CAACG,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,EAAE,GAAGJ,KAAK,CAACK,KAAK,CAAC,CAAC,CAAC,gCAAgC;;IAE1F,OAAO,EAAE;EACX;;;uBArDWhN,cAAc,EAAAkB,+DAAA,CAAAF,uDAAA,GAAAE,+DAAA,CAAA6I,+DAAA,GAAA7I,+DAAA,CAAA8I,mDAAA;IAAA;EAAA;;;YAAdhK,cAAc;MAAAmD,SAAA;MAAAC,KAAA;MAAAC,IAAA;MAAAC,MAAA;MAAAC,QAAA,WAAA0J,wBAAAxJ,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;UCV3BvC,4DAAA,aAA4B;UAKDA,oDAAA,YAAK;UAAAA,0DAAA,EAAK;UAE7BA,4DAAA,aAAuB;UACSA,wDAAA,sBAAAgM,iDAAA;YAAA,OAAYxJ,GAAA,CAAA6I,QAAA,EAAU;UAAA,EAAC;UAGnDrL,4DAAA,aAAkB;UACgCA,oDAAA,yBAAiB;UAAAA,0DAAA,EAAQ;UACzEA,uDAAA,iBAMwC;UACxCA,wDAAA,KAAAiM,8BAAA,kBAEM;UACRjM,0DAAA,EAAM;UAGNA,4DAAA,cAAkB;UACyBA,oDAAA,gBAAQ;UAAAA,0DAAA,EAAQ;UACzDA,uDAAA,iBAM+B;UAC/BA,wDAAA,KAAAkM,8BAAA,kBAEM;UACRlM,0DAAA,EAAM;UAGNA,wDAAA,KAAAmM,8BAAA,kBAEM;UAGNnM,wDAAA,KAAAoM,8BAAA,kBAEM;UAGNpM,4DAAA,eAAoB;UAKhBA,wDAAA,KAAAqM,+BAAA,mBAA2E;UAC3ErM,oDAAA,IACF;UAAAA,0DAAA,EAAS;UAMbA,4DAAA,eAA8B;UAC2BA,oDAAA,uCAA+B;UAAAA,0DAAA,EAAI;UAE5FA,4DAAA,eAA8B;UACkCA,oDAAA,wBAAgB;UAAAA,0DAAA,EAAI;;;;;;;UA5D9EA,uDAAA,GAAuB;UAAvBA,wDAAA,cAAAwC,GAAA,CAAA0I,SAAA,CAAuB;UAUvBlL,uDAAA,GAA2G;UAA3GA,yDAAA,iBAAAmE,OAAA,GAAA3B,GAAA,CAAA0I,SAAA,CAAAjH,GAAA,sCAAAE,OAAA,CAAAY,OAAA,OAAAZ,OAAA,GAAA3B,GAAA,CAAA0I,SAAA,CAAAjH,GAAA,sCAAAE,OAAA,CAAAa,OAAA,EAA2G;UAE9EhF,uDAAA,GAA4F;UAA5FA,wDAAA,WAAAiF,OAAA,GAAAzC,GAAA,CAAA0I,SAAA,CAAAjH,GAAA,sCAAAgB,OAAA,CAAAF,OAAA,OAAAE,OAAA,GAAAzC,GAAA,CAAA0I,SAAA,CAAAjH,GAAA,sCAAAgB,OAAA,CAAAD,OAAA,EAA4F;UAazHhF,uDAAA,GAA6F;UAA7FA,yDAAA,iBAAA6G,OAAA,GAAArE,GAAA,CAAA0I,SAAA,CAAAjH,GAAA,+BAAA4C,OAAA,CAAA9B,OAAA,OAAA8B,OAAA,GAAArE,GAAA,CAAA0I,SAAA,CAAAjH,GAAA,+BAAA4C,OAAA,CAAA7B,OAAA,EAA6F;UAEhEhF,uDAAA,GAA8E;UAA9EA,wDAAA,WAAA8G,OAAA,GAAAtE,GAAA,CAAA0I,SAAA,CAAAjH,GAAA,+BAAA6C,OAAA,CAAA/B,OAAA,OAAA+B,OAAA,GAAAtE,GAAA,CAAA0I,SAAA,CAAAjH,GAAA,+BAAA6C,OAAA,CAAA9B,OAAA,EAA8E;UAM9EhF,uDAAA,GAAkB;UAAlBA,wDAAA,SAAAwC,GAAA,CAAAmB,YAAA,CAAkB;UAKjB3D,uDAAA,GAAoB;UAApBA,wDAAA,SAAAwC,GAAA,CAAAqB,cAAA,CAAoB;UASlD7D,uDAAA,GAAyC;UAAzCA,wDAAA,aAAAwC,GAAA,CAAA0I,SAAA,CAAAnG,OAAA,IAAAvC,GAAA,CAAAyI,OAAA,CAAyC;UACYjL,uDAAA,GAAa;UAAbA,wDAAA,SAAAwC,GAAA,CAAAyI,OAAA,CAAa;UAClEjL,uDAAA,GACF;UADEA,gEAAA,MAAAwC,GAAA,CAAAyI,OAAA,kCACF;;;;;;;;;;;;;;;;;;;;;;;;;;ACzDsD;;;;;;;;ICoBpDjL,4DAAA,cAAqH;IACnHA,oDAAA,GACF;IAAAA,0DAAA,EAAM;;;;IADJA,uDAAA,GACF;IADEA,gEAAA,MAAA0D,MAAA,CAAAsH,eAAA,kBACF;;;;;IAaAhL,4DAAA,cAA+G;IAC7GA,oDAAA,GACF;IAAAA,0DAAA,EAAM;;;;IADJA,uDAAA,GACF;IADEA,gEAAA,MAAA4D,MAAA,CAAAoH,eAAA,eACF;;;;;IAeAhL,4DAAA,cAAuH;IACrHA,oDAAA,GACF;IAAAA,0DAAA,EAAM;;;;IADJA,uDAAA,GACF;IADEA,gEAAA,MAAA6E,MAAA,CAAAmG,eAAA,mBACF;;;;;IAaAhL,4DAAA,cAAqH;IACnHA,oDAAA,GACF;IAAAA,0DAAA,EAAM;;;;IADJA,uDAAA,GACF;IADEA,gEAAA,MAAA2G,MAAA,CAAAqE,eAAA,kBACF;;;;;IAeAhL,4DAAA,cAAqH;IACnHA,oDAAA,GACF;IAAAA,0DAAA,EAAM;;;;IADJA,uDAAA,GACF;IADEA,gEAAA,MAAAgB,MAAA,CAAAgK,eAAA,kBACF;;;;;IAaAhL,4DAAA,cAAmI;IACjIA,oDAAA,GACF;IAAAA,0DAAA,EAAM;;;;IADJA,uDAAA,GACF;IADEA,gEAAA,MAAAS,MAAA,CAAAuK,eAAA,yBACF;;;;;IAKJhL,4DAAA,cAAqD;IACnDA,oDAAA,GACF;IAAAA,0DAAA,EAAM;;;;IADJA,uDAAA,GACF;IADEA,gEAAA,MAAAsM,MAAA,CAAA3I,YAAA,MACF;;;;;IAGA3D,4DAAA,cAAwD;IACtDA,oDAAA,GACF;IAAAA,0DAAA,EAAM;;;;IADJA,uDAAA,GACF;IADEA,gEAAA,MAAAuM,MAAA,CAAA1I,cAAA,MACF;;;;;IAQI7D,uDAAA,eAA2E;;;ADhHrF,MAAOjB,iBAAiB;EAM5BsC,YACU8F,EAAe,EACflG,WAAwB,EACxBmG,MAAc;IAFd,KAAAD,EAAE,GAAFA,EAAE;IACF,KAAAlG,WAAW,GAAXA,WAAW;IACX,KAAAmG,MAAM,GAANA,MAAM;IAPhB,KAAA6D,OAAO,GAAG,KAAK;IACf,KAAAtH,YAAY,GAAG,EAAE;IACjB,KAAAE,cAAc,GAAG,EAAE;IAOjB,IAAI,CAAC2I,YAAY,GAAG,IAAI,CAACrF,EAAE,CAACG,KAAK,CAAC;MAChCnG,QAAQ,EAAE,CAAC,EAAE,EAAE,CAACsC,sDAAU,CAAC8D,QAAQ,EAAE9D,sDAAU,CAACgE,SAAS,CAAC,CAAC,CAAC,EAAEhE,sDAAU,CAACiE,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC;MACxFd,KAAK,EAAE,CAAC,EAAE,EAAE,CAACnD,sDAAU,CAAC8D,QAAQ,EAAE9D,sDAAU,CAACmD,KAAK,CAAC,CAAC;MACpDwE,QAAQ,EAAE,CAAC,EAAE,EAAE,CAAC3H,sDAAU,CAAC8D,QAAQ,EAAE9D,sDAAU,CAACgE,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;MAC9DG,eAAe,EAAE,CAAC,EAAE,EAAE,CAACnE,sDAAU,CAAC8D,QAAQ,CAAC,CAAC;MAC5CkF,SAAS,EAAE,CAAC,EAAE,EAAE,CAAChJ,sDAAU,CAACiE,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC;MAC3CgF,QAAQ,EAAE,CAAC,EAAE,EAAE,CAACjJ,sDAAU,CAACiE,SAAS,CAAC,EAAE,CAAC,CAAC;KAC1C,EAAE;MAAEG,UAAU,EAAE,IAAI,CAACC;IAAsB,CAAE,CAAC;EACjD;EAEAA,sBAAsBA,CAACC,IAAe;IACpC,MAAMqD,QAAQ,GAAGrD,IAAI,CAAC9D,GAAG,CAAC,UAAU,CAAC;IACrC,MAAM2D,eAAe,GAAGG,IAAI,CAAC9D,GAAG,CAAC,iBAAiB,CAAC;IAEnD,IAAImH,QAAQ,IAAIxD,eAAe,IAAIwD,QAAQ,CAACpD,KAAK,KAAKJ,eAAe,CAACI,KAAK,EAAE;MAC3EJ,eAAe,CAAC+E,SAAS,CAAC;QAAE1E,gBAAgB,EAAE;MAAI,CAAE,CAAC;MACrD,OAAO;QAAEA,gBAAgB,EAAE;MAAI,CAAE;;IAGnC,IAAIL,eAAe,EAAE1D,MAAM,GAAG,kBAAkB,CAAC,EAAE;MACjD,OAAO0D,eAAe,CAAC1D,MAAM,CAAC,kBAAkB,CAAC;MACjD,IAAI0I,MAAM,CAACC,IAAI,CAACjF,eAAe,CAAC1D,MAAM,CAAC,CAAC4I,MAAM,KAAK,CAAC,EAAE;QACpDlF,eAAe,CAAC+E,SAAS,CAAC,IAAI,CAAC;;;IAInC,OAAO,IAAI;EACb;EAEAtB,QAAQA,CAAA;IACN,IAAI,IAAI,CAACmB,YAAY,CAACtE,KAAK,EAAE;MAC3B,IAAI,CAAC+C,OAAO,GAAG,IAAI;MACnB,IAAI,CAACtH,YAAY,GAAG,EAAE;MACtB,IAAI,CAACE,cAAc,GAAG,EAAE;MAExB,IAAI,CAAC5C,WAAW,CAAC8L,QAAQ,CAAC,IAAI,CAACP,YAAY,CAACxE,KAAK,CAAC,CAACxG,SAAS,CAAC;QAC3DC,IAAI,EAAG2G,QAAQ,IAAI;UACjB,IAAIA,QAAQ,CAACC,OAAO,EAAE;YACpB,IAAI,CAACxE,cAAc,GAAG,wCAAwC;YAC9DyE,UAAU,CAAC,MAAK;cACd,IAAI,CAAClB,MAAM,CAACsB,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;YAClC,CAAC,EAAE,IAAI,CAAC;WACT,MAAM;YACL,IAAI,CAAC/E,YAAY,GAAGyE,QAAQ,CAACG,OAAO;;UAEtC,IAAI,CAAC0C,OAAO,GAAG,KAAK;QACtB,CAAC;QACDnJ,KAAK,EAAGA,KAAK,IAAI;UACf,IAAI,CAAC6B,YAAY,GAAG7B,KAAK,CAACA,KAAK,EAAEyG,OAAO,IAAI,wCAAwC;UACpF,IAAI,CAAC0C,OAAO,GAAG,KAAK;QACtB;OACD,CAAC;;EAEN;EAEAD,eAAeA,CAACS,KAAa;IAC3B,MAAMC,OAAO,GAAG,IAAI,CAACc,YAAY,CAACvI,GAAG,CAACwH,KAAK,CAAC;IAC5C,IAAIC,OAAO,EAAEC,QAAQ,CAAC,UAAU,CAAC,EAAE;MACjC,OAAO,GAAGF,KAAK,CAACG,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,EAAE,GAAGJ,KAAK,CAACK,KAAK,CAAC,CAAC,CAAC,cAAc;;IAExE,IAAIJ,OAAO,EAAEC,QAAQ,CAAC,OAAO,CAAC,EAAE;MAC9B,OAAO,oCAAoC;;IAE7C,IAAID,OAAO,EAAEC,QAAQ,CAAC,WAAW,CAAC,EAAE;MAClC,MAAMlE,SAAS,GAAGiE,OAAO,CAACxH,MAAM,GAAG,WAAW,CAAC,EAAE8I,cAAc;MAC/D,OAAO,GAAGvB,KAAK,CAACG,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,EAAE,GAAGJ,KAAK,CAACK,KAAK,CAAC,CAAC,CAAC,qBAAqBrE,SAAS,aAAa;;IAErG,IAAIiE,OAAO,EAAEC,QAAQ,CAAC,WAAW,CAAC,EAAE;MAClC,MAAMjE,SAAS,GAAGgE,OAAO,CAACxH,MAAM,GAAG,WAAW,CAAC,EAAE8I,cAAc;MAC/D,OAAO,GAAGvB,KAAK,CAACG,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,EAAE,GAAGJ,KAAK,CAACK,KAAK,CAAC,CAAC,CAAC,kBAAkBpE,SAAS,aAAa;;IAElG,IAAIgE,OAAO,EAAEC,QAAQ,CAAC,kBAAkB,CAAC,EAAE;MACzC,OAAO,wBAAwB;;IAEjC,OAAO,EAAE;EACX;;;uBAtFW5M,iBAAiB,EAAAiB,+DAAA,CAAAF,uDAAA,GAAAE,+DAAA,CAAA6I,+DAAA,GAAA7I,+DAAA,CAAA8I,mDAAA;IAAA;EAAA;;;YAAjB/J,iBAAiB;MAAAkD,SAAA;MAAAC,KAAA;MAAAC,IAAA;MAAAC,MAAA;MAAAC,QAAA,WAAA4K,2BAAA1K,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;UCV9BvC,4DAAA,aAA4B;UAKDA,oDAAA,eAAQ;UAAAA,0DAAA,EAAK;UAEhCA,4DAAA,aAAuB;UACYA,wDAAA,sBAAAkN,oDAAA;YAAA,OAAY1K,GAAA,CAAA6I,QAAA,EAAU;UAAA,EAAC;UAEtDrL,4DAAA,aAAiB;UAG4BA,oDAAA,kBAAU;UAAAA,0DAAA,EAAQ;UAC3DA,uDAAA,iBAM+B;UAC/BA,wDAAA,KAAAmN,iCAAA,kBAEM;UACRnN,0DAAA,EAAM;UAGNA,4DAAA,cAA2B;UACaA,oDAAA,eAAO;UAAAA,0DAAA,EAAQ;UACrDA,uDAAA,iBAM4B;UAC5BA,wDAAA,KAAAoN,iCAAA,kBAEM;UACRpN,0DAAA,EAAM;UAGRA,4DAAA,cAAiB;UAG6BA,oDAAA,kBAAU;UAAAA,0DAAA,EAAQ;UAC5DA,uDAAA,iBAMiC;UACjCA,wDAAA,KAAAqN,iCAAA,kBAEM;UACRrN,0DAAA,EAAM;UAGNA,4DAAA,cAA2B;UACgBA,oDAAA,iBAAS;UAAAA,0DAAA,EAAQ;UAC1DA,uDAAA,iBAMgC;UAChCA,wDAAA,KAAAsN,iCAAA,kBAEM;UACRtN,0DAAA,EAAM;UAGRA,4DAAA,cAAiB;UAG4BA,oDAAA,kBAAU;UAAAA,0DAAA,EAAQ;UAC3DA,uDAAA,iBAM+B;UAC/BA,wDAAA,KAAAuN,iCAAA,kBAEM;UACRvN,0DAAA,EAAM;UAGNA,4DAAA,cAA2B;UACuBA,oDAAA,0BAAkB;UAAAA,0DAAA,EAAQ;UAC1EA,uDAAA,iBAMiC;UACjCA,wDAAA,KAAAwN,iCAAA,kBAEM;UACRxN,0DAAA,EAAM;UAIRA,wDAAA,KAAAyN,iCAAA,kBAEM;UAGNzN,wDAAA,KAAA0N,iCAAA,kBAEM;UAGN1N,4DAAA,eAAoB;UAKhBA,wDAAA,KAAA2N,kCAAA,mBAA2E;UAC3E3N,oDAAA,IACF;UAAAA,0DAAA,EAAS;UAMbA,4DAAA,eAA8B;UACwBA,oDAAA,sCAA8B;UAAAA,0DAAA,EAAI;;;;;;;;;;;;;;;UA3HlFA,uDAAA,GAA0B;UAA1BA,wDAAA,cAAAwC,GAAA,CAAAgK,YAAA,CAA0B;UAWxBxM,uDAAA,GAAmG;UAAnGA,yDAAA,iBAAAmE,OAAA,GAAA3B,GAAA,CAAAgK,YAAA,CAAAvI,GAAA,+BAAAE,OAAA,CAAAY,OAAA,OAAAZ,OAAA,GAAA3B,GAAA,CAAAgK,YAAA,CAAAvI,GAAA,+BAAAE,OAAA,CAAAa,OAAA,EAAmG;UAEtEhF,uDAAA,GAAoF;UAApFA,wDAAA,WAAAiF,OAAA,GAAAzC,GAAA,CAAAgK,YAAA,CAAAvI,GAAA,+BAAAgB,OAAA,CAAAF,OAAA,OAAAE,OAAA,GAAAzC,GAAA,CAAAgK,YAAA,CAAAvI,GAAA,+BAAAgB,OAAA,CAAAD,OAAA,EAAoF;UAajHhF,uDAAA,GAA6F;UAA7FA,yDAAA,iBAAA6G,OAAA,GAAArE,GAAA,CAAAgK,YAAA,CAAAvI,GAAA,4BAAA4C,OAAA,CAAA9B,OAAA,OAAA8B,OAAA,GAAArE,GAAA,CAAAgK,YAAA,CAAAvI,GAAA,4BAAA4C,OAAA,CAAA7B,OAAA,EAA6F;UAEhEhF,uDAAA,GAA8E;UAA9EA,wDAAA,WAAA8G,OAAA,GAAAtE,GAAA,CAAAgK,YAAA,CAAAvI,GAAA,4BAAA6C,OAAA,CAAA/B,OAAA,OAAA+B,OAAA,GAAAtE,GAAA,CAAAgK,YAAA,CAAAvI,GAAA,4BAAA6C,OAAA,CAAA9B,OAAA,EAA8E;UAe3GhF,uDAAA,GAAqG;UAArGA,yDAAA,iBAAA+G,OAAA,GAAAvE,GAAA,CAAAgK,YAAA,CAAAvI,GAAA,gCAAA8C,OAAA,CAAAhC,OAAA,OAAAgC,OAAA,GAAAvE,GAAA,CAAAgK,YAAA,CAAAvI,GAAA,gCAAA8C,OAAA,CAAA/B,OAAA,EAAqG;UAExEhF,uDAAA,GAAsF;UAAtFA,wDAAA,WAAAgH,OAAA,GAAAxE,GAAA,CAAAgK,YAAA,CAAAvI,GAAA,gCAAA+C,OAAA,CAAAjC,OAAA,OAAAiC,OAAA,GAAAxE,GAAA,CAAAgK,YAAA,CAAAvI,GAAA,gCAAA+C,OAAA,CAAAhC,OAAA,EAAsF;UAanHhF,uDAAA,GAAmG;UAAnGA,yDAAA,iBAAAiH,OAAA,GAAAzE,GAAA,CAAAgK,YAAA,CAAAvI,GAAA,+BAAAgD,OAAA,CAAAlC,OAAA,OAAAkC,OAAA,GAAAzE,GAAA,CAAAgK,YAAA,CAAAvI,GAAA,+BAAAgD,OAAA,CAAAjC,OAAA,EAAmG;UAEtEhF,uDAAA,GAAoF;UAApFA,wDAAA,WAAAkH,OAAA,GAAA1E,GAAA,CAAAgK,YAAA,CAAAvI,GAAA,+BAAAiD,OAAA,CAAAnC,OAAA,OAAAmC,OAAA,GAAA1E,GAAA,CAAAgK,YAAA,CAAAvI,GAAA,+BAAAiD,OAAA,CAAAlC,OAAA,EAAoF;UAejHhF,uDAAA,GAAmG;UAAnGA,yDAAA,iBAAA4N,OAAA,GAAApL,GAAA,CAAAgK,YAAA,CAAAvI,GAAA,+BAAA2J,OAAA,CAAA7I,OAAA,OAAA6I,OAAA,GAAApL,GAAA,CAAAgK,YAAA,CAAAvI,GAAA,+BAAA2J,OAAA,CAAA5I,OAAA,EAAmG;UAEtEhF,uDAAA,GAAoF;UAApFA,wDAAA,WAAA6N,QAAA,GAAArL,GAAA,CAAAgK,YAAA,CAAAvI,GAAA,+BAAA4J,QAAA,CAAA9I,OAAA,OAAA8I,QAAA,GAAArL,GAAA,CAAAgK,YAAA,CAAAvI,GAAA,+BAAA4J,QAAA,CAAA7I,OAAA,EAAoF;UAajHhF,uDAAA,GAAiH;UAAjHA,yDAAA,iBAAA8N,QAAA,GAAAtL,GAAA,CAAAgK,YAAA,CAAAvI,GAAA,sCAAA6J,QAAA,CAAA/I,OAAA,OAAA+I,QAAA,GAAAtL,GAAA,CAAAgK,YAAA,CAAAvI,GAAA,sCAAA6J,QAAA,CAAA9I,OAAA,EAAiH;UAEpFhF,uDAAA,GAAkG;UAAlGA,wDAAA,WAAA+N,QAAA,GAAAvL,GAAA,CAAAgK,YAAA,CAAAvI,GAAA,sCAAA8J,QAAA,CAAAhJ,OAAA,OAAAgJ,QAAA,GAAAvL,GAAA,CAAAgK,YAAA,CAAAvI,GAAA,sCAAA8J,QAAA,CAAA/I,OAAA,EAAkG;UAOpGhF,uDAAA,GAAkB;UAAlBA,wDAAA,SAAAwC,GAAA,CAAAmB,YAAA,CAAkB;UAKjB3D,uDAAA,GAAoB;UAApBA,wDAAA,SAAAwC,GAAA,CAAAqB,cAAA,CAAoB;UASlD7D,uDAAA,GAA4C;UAA5CA,wDAAA,aAAAwC,GAAA,CAAAgK,YAAA,CAAAzH,OAAA,IAAAvC,GAAA,CAAAyI,OAAA,CAA4C;UACSjL,uDAAA,GAAa;UAAbA,wDAAA,SAAAwC,GAAA,CAAAyI,OAAA,CAAa;UAClEjL,uDAAA,GACF;UADEA,gEAAA,MAAAwC,GAAA,CAAAyI,OAAA,sCACF;;;;;;;;;;;;;;;;;;;;;;;;;;AC3HsD;;;;;;;;ICY1DjL,4DAAA,cAAqD;IACnDA,oDAAA,GACF;IAAAA,0DAAA,EAAM;;;;IADJA,uDAAA,GACF;IADEA,gEAAA,MAAA0D,MAAA,CAAAC,YAAA,MACF;;;;;IAGA3D,4DAAA,cAAwD;IACtDA,oDAAA,GACF;IAAAA,0DAAA,EAAM;;;;IADJA,uDAAA,GACF;IADEA,gEAAA,MAAA4D,MAAA,CAAAC,cAAA,MACF;;;;;IAgBM7D,4DAAA,cAA+G;IAC7GA,oDAAA,GACF;IAAAA,0DAAA,EAAM;;;;IADJA,uDAAA,GACF;IADEA,gEAAA,MAAA6E,MAAA,CAAAmG,eAAA,mBACF;;;;;IAaAhL,4DAAA,cAA6G;IAC3GA,oDAAA,GACF;IAAAA,0DAAA,EAAM;;;;IADJA,uDAAA,GACF;IADEA,gEAAA,MAAA2G,MAAA,CAAAqE,eAAA,kBACF;;;;;IAcFhL,4DAAA,cAAuG;IACrGA,oDAAA,GACF;IAAAA,0DAAA,EAAM;;;;IADJA,uDAAA,GACF;IADEA,gEAAA,MAAAgB,MAAA,CAAAgK,eAAA,eACF;;;;;IAaAhL,4DAAA,cAAmH;IACjHA,oDAAA,GACF;IAAAA,0DAAA,EAAM;;;;IADJA,uDAAA,GACF;IADEA,gEAAA,MAAAS,MAAA,CAAAuK,eAAA,qBACF;;;;;IAoBEhL,uDAAA,eAA2E;;;AD9FrF,MAAOZ,mBAAmB;EAM9BiC,YACU8F,EAAe,EACf6G,WAAwB,EACxB5G,MAAc;IAFd,KAAAD,EAAE,GAAFA,EAAE;IACF,KAAA6G,WAAW,GAAXA,WAAW;IACX,KAAA5G,MAAM,GAANA,MAAM;IAPhB,KAAA6D,OAAO,GAAG,KAAK;IACf,KAAAtH,YAAY,GAAG,EAAE;IACjB,KAAAE,cAAc,GAAG,EAAE;IAOjB,IAAI,CAACoK,QAAQ,GAAG,IAAI,CAAC9G,EAAE,CAACG,KAAK,CAAC;MAC5BmF,SAAS,EAAE,CAAC,EAAE,EAAE,CAAChJ,sDAAU,CAAC8D,QAAQ,CAAC,CAAC;MACtCmF,QAAQ,EAAE,CAAC,EAAE,EAAE,CAACjJ,sDAAU,CAAC8D,QAAQ,CAAC,CAAC;MACrCX,KAAK,EAAE,CAAC,EAAE,EAAE,CAACnD,sDAAU,CAAC8D,QAAQ,EAAE9D,sDAAU,CAACmD,KAAK,CAAC,CAAC;MACpDsH,WAAW,EAAE,CAAC,EAAE,EAAE,CAACzK,sDAAU,CAAC8D,QAAQ,EAAE9D,sDAAU,CAACgE,SAAS,CAAC,EAAE,CAAC,EAAEhE,sDAAU,CAACiE,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC;MAC5FyG,OAAO,EAAE,CAAC,EAAE;KACb,CAAC;EACJ;EAEA9C,QAAQA,CAAA;IACN,IAAI,IAAI,CAAC4C,QAAQ,CAAC/F,KAAK,EAAE;MACvB,IAAI,CAAC+C,OAAO,GAAG,IAAI;MACnB,IAAI,CAACtH,YAAY,GAAG,EAAE;MAEtB,MAAMpC,QAAQ,GAAG,IAAI,CAAC0M,QAAQ,CAACjG,KAAK;MACpC,IAAI,CAACgG,WAAW,CAACI,UAAU,CAAC7M,QAAQ,CAAC,CAACC,SAAS,CAAC;QAC9CC,IAAI,EAAG2G,QAAQ,IAAI;UACjB,IAAIA,QAAQ,CAACC,OAAO,EAAE;YACpB,IAAI,CAACxE,cAAc,GAAG,4BAA4B;YAClDyE,UAAU,CAAC,MAAK;cACd,IAAI,CAAClB,MAAM,CAACsB,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;YAClC,CAAC,EAAE,IAAI,CAAC;WACT,MAAM;YACL,IAAI,CAAC/E,YAAY,GAAGyE,QAAQ,CAACG,OAAO,IAAI,uBAAuB;;UAEjE,IAAI,CAAC0C,OAAO,GAAG,KAAK;QACtB,CAAC;QACDnJ,KAAK,EAAGA,KAAK,IAAI;UACf,IAAI,CAAC6B,YAAY,GAAG7B,KAAK,CAACA,KAAK,EAAEyG,OAAO,IAAI,uBAAuB;UACnE,IAAI,CAAC0C,OAAO,GAAG,KAAK;QACtB;OACD,CAAC;;EAEN;EAEAoD,QAAQA,CAAA;IACN,IAAI,CAACjH,MAAM,CAACsB,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;EAClC;EAEAsC,eAAeA,CAACsD,SAAiB;IAC/B,MAAM7C,KAAK,GAAG,IAAI,CAACwC,QAAQ,CAAChK,GAAG,CAACqK,SAAS,CAAC;IAC1C,IAAI7C,KAAK,EAAEvH,MAAM,EAAE;MACjB,IAAIuH,KAAK,CAACvH,MAAM,CAAC,UAAU,CAAC,EAAE;QAC5B,OAAO,GAAGoK,SAAS,CAAC1C,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,EAAE,GAAGyC,SAAS,CAACxC,KAAK,CAAC,CAAC,CAAC,cAAc;;MAEhF,IAAIL,KAAK,CAACvH,MAAM,CAAC,OAAO,CAAC,EAAE;QACzB,OAAO,oCAAoC;;MAE7C,IAAIuH,KAAK,CAACvH,MAAM,CAAC,WAAW,CAAC,EAAE;QAC7B,OAAO,GAAGoK,SAAS,CAAC1C,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,EAAE,GAAGyC,SAAS,CAACxC,KAAK,CAAC,CAAC,CAAC,qBAAqBL,KAAK,CAACvH,MAAM,CAAC,WAAW,CAAC,CAAC8I,cAAc,aAAa;;MAE5I,IAAIvB,KAAK,CAACvH,MAAM,CAAC,WAAW,CAAC,EAAE;QAC7B,OAAO,GAAGoK,SAAS,CAAC1C,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,EAAE,GAAGyC,SAAS,CAACxC,KAAK,CAAC,CAAC,CAAC,kBAAkBL,KAAK,CAACvH,MAAM,CAAC,WAAW,CAAC,CAAC8I,cAAc,aAAa;;;IAG3I,OAAO,EAAE;EACX;;;uBAnEW5N,mBAAmB,EAAAY,+DAAA,CAAAF,uDAAA,GAAAE,+DAAA,CAAA6I,+DAAA,GAAA7I,+DAAA,CAAA8I,mDAAA;IAAA;EAAA;;;YAAnB1J,mBAAmB;MAAA6C,SAAA;MAAAC,KAAA;MAAAC,IAAA;MAAAC,MAAA;MAAAC,QAAA,WAAAmM,6BAAAjM,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;UCVhCvC,4DAAA,aAA4B;UAKDA,oDAAA,sBAAe;UAAAA,0DAAA,EAAK;UACrCA,4DAAA,gBAAmD;UAArBA,wDAAA,mBAAAyO,qDAAA;YAAA,OAASjM,GAAA,CAAA6L,QAAA,EAAU;UAAA,EAAC;UAChDrO,uDAAA,WAAgC;UAACA,oDAAA,sBACnC;UAAAA,0DAAA,EAAS;UAEXA,4DAAA,cAAuB;UAGrBA,wDAAA,KAAA0O,mCAAA,iBAEM;UAGN1O,wDAAA,KAAA2O,mCAAA,kBAEM;UAGN3O,4DAAA,gBAAqD;UAAxBA,wDAAA,sBAAA4O,uDAAA;YAAA,OAAYpM,GAAA,CAAA6I,QAAA,EAAU;UAAA,EAAC;UAElDrL,4DAAA,eAAiB;UAG6BA,oDAAA,oBAAY;UAAAA,0DAAA,EAAQ;UAC9DA,uDAAA,iBAMiC;UACjCA,wDAAA,KAAA6O,mCAAA,kBAEM;UACR7O,0DAAA,EAAM;UAGNA,4DAAA,eAA2B;UACgBA,oDAAA,mBAAW;UAAAA,0DAAA,EAAQ;UAC5DA,uDAAA,iBAMgC;UAChCA,wDAAA,KAAA8O,mCAAA,kBAEM;UACR9O,0DAAA,EAAM;UAIRA,4DAAA,eAAkB;UACsBA,oDAAA,eAAO;UAAAA,0DAAA,EAAQ;UACrDA,uDAAA,iBAMoC;UACpCA,wDAAA,KAAA+O,mCAAA,kBAEM;UACR/O,0DAAA,EAAM;UAGNA,4DAAA,eAAkB;UAC4BA,oDAAA,sBAAc;UAAAA,0DAAA,EAAQ;UAClEA,uDAAA,iBAMkD;UAClDA,wDAAA,KAAAgP,mCAAA,kBAEM;UACRhP,0DAAA,EAAM;UAGNA,4DAAA,eAAkB;UACwBA,oDAAA,eAAO;UAAAA,0DAAA,EAAQ;UACvDA,uDAAA,oBAKyC;UAC3CA,0DAAA,EAAM;UAGNA,4DAAA,eAA0B;UAKtBA,wDAAA,KAAAiP,oCAAA,mBAA2E;UAC3EjP,oDAAA,IACF;UAAAA,0DAAA,EAAS;UACTA,4DAAA,kBAIuB;UADrBA,wDAAA,mBAAAkP,sDAAA;YAAA,OAAS1M,GAAA,CAAA6L,QAAA,EAAU;UAAA,EAAC;UAEpBrO,oDAAA,gBACF;UAAAA,0DAAA,EAAS;;;;;;;;;;;UApGoBA,uDAAA,IAAkB;UAAlBA,wDAAA,SAAAwC,GAAA,CAAAmB,YAAA,CAAkB;UAKjB3D,uDAAA,GAAoB;UAApBA,wDAAA,SAAAwC,GAAA,CAAAqB,cAAA,CAAoB;UAKhD7D,uDAAA,GAAsB;UAAtBA,wDAAA,cAAAwC,GAAA,CAAAyL,QAAA,CAAsB;UAWpBjO,uDAAA,GAA6F;UAA7FA,yDAAA,iBAAA6G,OAAA,GAAArE,GAAA,CAAAyL,QAAA,CAAAhK,GAAA,gCAAA4C,OAAA,CAAA9B,OAAA,OAAA8B,OAAA,GAAArE,GAAA,CAAAyL,QAAA,CAAAhK,GAAA,gCAAA4C,OAAA,CAAA7B,OAAA,EAA6F;UAEhEhF,uDAAA,GAA8E;UAA9EA,wDAAA,WAAA8G,OAAA,GAAAtE,GAAA,CAAAyL,QAAA,CAAAhK,GAAA,gCAAA6C,OAAA,CAAA/B,OAAA,OAAA+B,OAAA,GAAAtE,GAAA,CAAAyL,QAAA,CAAAhK,GAAA,gCAAA6C,OAAA,CAAA9B,OAAA,EAA8E;UAa3GhF,uDAAA,GAA2F;UAA3FA,yDAAA,iBAAA+G,OAAA,GAAAvE,GAAA,CAAAyL,QAAA,CAAAhK,GAAA,+BAAA8C,OAAA,CAAAhC,OAAA,OAAAgC,OAAA,GAAAvE,GAAA,CAAAyL,QAAA,CAAAhK,GAAA,+BAAA8C,OAAA,CAAA/B,OAAA,EAA2F;UAE9DhF,uDAAA,GAA4E;UAA5EA,wDAAA,WAAAgH,OAAA,GAAAxE,GAAA,CAAAyL,QAAA,CAAAhK,GAAA,+BAAA+C,OAAA,CAAAjC,OAAA,OAAAiC,OAAA,GAAAxE,GAAA,CAAAyL,QAAA,CAAAhK,GAAA,+BAAA+C,OAAA,CAAAhC,OAAA,EAA4E;UAc3GhF,uDAAA,GAAqF;UAArFA,yDAAA,iBAAAiH,OAAA,GAAAzE,GAAA,CAAAyL,QAAA,CAAAhK,GAAA,4BAAAgD,OAAA,CAAAlC,OAAA,OAAAkC,OAAA,GAAAzE,GAAA,CAAAyL,QAAA,CAAAhK,GAAA,4BAAAgD,OAAA,CAAAjC,OAAA,EAAqF;UAExDhF,uDAAA,GAAsE;UAAtEA,wDAAA,WAAAkH,OAAA,GAAA1E,GAAA,CAAAyL,QAAA,CAAAhK,GAAA,4BAAAiD,OAAA,CAAAnC,OAAA,OAAAmC,OAAA,GAAA1E,GAAA,CAAAyL,QAAA,CAAAhK,GAAA,4BAAAiD,OAAA,CAAAlC,OAAA,EAAsE;UAanGhF,uDAAA,GAAiG;UAAjGA,yDAAA,iBAAA4N,OAAA,GAAApL,GAAA,CAAAyL,QAAA,CAAAhK,GAAA,kCAAA2J,OAAA,CAAA7I,OAAA,OAAA6I,OAAA,GAAApL,GAAA,CAAAyL,QAAA,CAAAhK,GAAA,kCAAA2J,OAAA,CAAA5I,OAAA,EAAiG;UAEpEhF,uDAAA,GAAkF;UAAlFA,wDAAA,WAAA6N,QAAA,GAAArL,GAAA,CAAAyL,QAAA,CAAAhK,GAAA,kCAAA4J,QAAA,CAAA9I,OAAA,OAAA8I,QAAA,GAAArL,GAAA,CAAAyL,QAAA,CAAAhK,GAAA,kCAAA4J,QAAA,CAAA7I,OAAA,EAAkF;UAqB/GhF,uDAAA,GAAwC;UAAxCA,wDAAA,aAAAwC,GAAA,CAAAyL,QAAA,CAAAlJ,OAAA,IAAAvC,GAAA,CAAAyI,OAAA,CAAwC;UACajL,uDAAA,GAAa;UAAbA,wDAAA,SAAAwC,GAAA,CAAAyI,OAAA,CAAa;UAClEjL,uDAAA,GACF;UADEA,gEAAA,MAAAwC,GAAA,CAAAyI,OAAA,sCACF;UAKEjL,uDAAA,GAAoB;UAApBA,wDAAA,aAAAwC,GAAA,CAAAyI,OAAA,CAAoB;;;;;;;;;;;;;;;;;;;;;;;;;;AC9GgC;;;;;;;;ICY1DjL,4DAAA,cAAqD;IACnDA,oDAAA,GACF;IAAAA,0DAAA,EAAM;;;;IADJA,uDAAA,GACF;IADEA,gEAAA,MAAA0D,MAAA,CAAAC,YAAA,MACF;;;;;IAGA3D,4DAAA,cAAwD;IACtDA,oDAAA,GACF;IAAAA,0DAAA,EAAM;;;;IADJA,uDAAA,GACF;IADEA,gEAAA,MAAA4D,MAAA,CAAAC,cAAA,MACF;;;;;IAGA7D,4DAAA,cAA0D;IAExBA,oDAAA,iBAAU;IAAAA,0DAAA,EAAO;;;;;IAkB7CA,4DAAA,cAA+G;IAC7GA,oDAAA,GACF;IAAAA,0DAAA,EAAM;;;;IADJA,uDAAA,GACF;IADEA,gEAAA,MAAAgB,MAAA,CAAAgK,eAAA,mBACF;;;;;IAaAhL,4DAAA,cAA6G;IAC3GA,oDAAA,GACF;IAAAA,0DAAA,EAAM;;;;IADJA,uDAAA,GACF;IADEA,gEAAA,MAAAS,MAAA,CAAAuK,eAAA,kBACF;;;;;IAcFhL,4DAAA,cAAuG;IACrGA,oDAAA,GACF;IAAAA,0DAAA,EAAM;;;;IADJA,uDAAA,GACF;IADEA,gEAAA,MAAAsM,MAAA,CAAAtB,eAAA,eACF;;;;;IAaAhL,4DAAA,cAAmH;IACjHA,oDAAA,GACF;IAAAA,0DAAA,EAAM;;;;IADJA,uDAAA,GACF;IADEA,gEAAA,MAAAuM,MAAA,CAAAvB,eAAA,qBACF;;;;;IAoBEhL,uDAAA,eAA2E;;;;;;IAjFjFA,4DAAA,eAAsF;IAAzDA,wDAAA,sBAAAmP,4DAAA;MAAAnP,2DAAA,CAAAoP,IAAA;MAAA,MAAAC,MAAA,GAAArP,2DAAA;MAAA,OAAYA,yDAAA,CAAAqP,MAAA,CAAAhE,QAAA,EAAU;IAAA,EAAC;IAElDrL,4DAAA,cAAiB;IAG6BA,oDAAA,mBAAY;IAAAA,0DAAA,EAAQ;IAC9DA,uDAAA,gBAMiC;IACjCA,wDAAA,IAAAsP,wCAAA,kBAEM;IACRtP,0DAAA,EAAM;IAGNA,4DAAA,cAA2B;IACgBA,oDAAA,kBAAW;IAAAA,0DAAA,EAAQ;IAC5DA,uDAAA,iBAMgC;IAChCA,wDAAA,KAAAuP,yCAAA,kBAEM;IACRvP,0DAAA,EAAM;IAIRA,4DAAA,eAAkB;IACsBA,oDAAA,eAAO;IAAAA,0DAAA,EAAQ;IACrDA,uDAAA,iBAMoC;IACpCA,wDAAA,KAAAwP,yCAAA,kBAEM;IACRxP,0DAAA,EAAM;IAGNA,4DAAA,eAAkB;IAC4BA,oDAAA,sBAAc;IAAAA,0DAAA,EAAQ;IAClEA,uDAAA,iBAMkD;IAClDA,wDAAA,KAAAyP,yCAAA,kBAEM;IACRzP,0DAAA,EAAM;IAGNA,4DAAA,eAAkB;IACwBA,oDAAA,eAAO;IAAAA,0DAAA,EAAQ;IACvDA,uDAAA,oBAKyC;IAC3CA,0DAAA,EAAM;IAGNA,4DAAA,eAA0B;IAKtBA,wDAAA,KAAA0P,0CAAA,mBAA2E;IAC3E1P,oDAAA,IACF;IAAAA,0DAAA,EAAS;IACTA,4DAAA,kBAIuB;IADrBA,wDAAA,mBAAA2P,4DAAA;MAAA3P,2DAAA,CAAAoP,IAAA;MAAA,MAAA/J,OAAA,GAAArF,2DAAA;MAAA,OAASA,yDAAA,CAAAqF,OAAA,CAAAgJ,QAAA,EAAU;IAAA,EAAC;IAEpBrO,oDAAA,gBACF;IAAAA,0DAAA,EAAS;;;;;;;;;;;;IA1FPA,wDAAA,cAAA2G,MAAA,CAAAsH,QAAA,CAAsB;IAWpBjO,uDAAA,GAA6F;IAA7FA,yDAAA,iBAAAmE,OAAA,GAAAwC,MAAA,CAAAsH,QAAA,CAAAhK,GAAA,gCAAAE,OAAA,CAAAY,OAAA,OAAAZ,OAAA,GAAAwC,MAAA,CAAAsH,QAAA,CAAAhK,GAAA,gCAAAE,OAAA,CAAAa,OAAA,EAA6F;IAEhEhF,uDAAA,GAA8E;IAA9EA,wDAAA,WAAAiF,OAAA,GAAA0B,MAAA,CAAAsH,QAAA,CAAAhK,GAAA,gCAAAgB,OAAA,CAAAF,OAAA,OAAAE,OAAA,GAAA0B,MAAA,CAAAsH,QAAA,CAAAhK,GAAA,gCAAAgB,OAAA,CAAAD,OAAA,EAA8E;IAa3GhF,uDAAA,GAA2F;IAA3FA,yDAAA,iBAAA6G,OAAA,GAAAF,MAAA,CAAAsH,QAAA,CAAAhK,GAAA,+BAAA4C,OAAA,CAAA9B,OAAA,OAAA8B,OAAA,GAAAF,MAAA,CAAAsH,QAAA,CAAAhK,GAAA,+BAAA4C,OAAA,CAAA7B,OAAA,EAA2F;IAE9DhF,uDAAA,GAA4E;IAA5EA,wDAAA,WAAA8G,OAAA,GAAAH,MAAA,CAAAsH,QAAA,CAAAhK,GAAA,+BAAA6C,OAAA,CAAA/B,OAAA,OAAA+B,OAAA,GAAAH,MAAA,CAAAsH,QAAA,CAAAhK,GAAA,+BAAA6C,OAAA,CAAA9B,OAAA,EAA4E;IAc3GhF,uDAAA,GAAqF;IAArFA,yDAAA,iBAAA+G,OAAA,GAAAJ,MAAA,CAAAsH,QAAA,CAAAhK,GAAA,4BAAA8C,OAAA,CAAAhC,OAAA,OAAAgC,OAAA,GAAAJ,MAAA,CAAAsH,QAAA,CAAAhK,GAAA,4BAAA8C,OAAA,CAAA/B,OAAA,EAAqF;IAExDhF,uDAAA,GAAsE;IAAtEA,wDAAA,WAAAgH,OAAA,GAAAL,MAAA,CAAAsH,QAAA,CAAAhK,GAAA,4BAAA+C,OAAA,CAAAjC,OAAA,OAAAiC,OAAA,GAAAL,MAAA,CAAAsH,QAAA,CAAAhK,GAAA,4BAAA+C,OAAA,CAAAhC,OAAA,EAAsE;IAanGhF,uDAAA,GAAiG;IAAjGA,yDAAA,iBAAAiH,OAAA,GAAAN,MAAA,CAAAsH,QAAA,CAAAhK,GAAA,kCAAAgD,OAAA,CAAAlC,OAAA,OAAAkC,OAAA,GAAAN,MAAA,CAAAsH,QAAA,CAAAhK,GAAA,kCAAAgD,OAAA,CAAAjC,OAAA,EAAiG;IAEpEhF,uDAAA,GAAkF;IAAlFA,wDAAA,WAAAkH,OAAA,GAAAP,MAAA,CAAAsH,QAAA,CAAAhK,GAAA,kCAAAiD,OAAA,CAAAnC,OAAA,OAAAmC,OAAA,GAAAP,MAAA,CAAAsH,QAAA,CAAAhK,GAAA,kCAAAiD,OAAA,CAAAlC,OAAA,EAAkF;IAqB/GhF,uDAAA,GAAwC;IAAxCA,wDAAA,aAAA2G,MAAA,CAAAsH,QAAA,CAAAlJ,OAAA,IAAA4B,MAAA,CAAAsE,OAAA,CAAwC;IACajL,uDAAA,GAAa;IAAbA,wDAAA,SAAA2G,MAAA,CAAAsE,OAAA,CAAa;IAClEjL,uDAAA,GACF;IADEA,gEAAA,MAAA2G,MAAA,CAAAsE,OAAA,sCACF;IAKEjL,uDAAA,GAAoB;IAApBA,wDAAA,aAAA2G,MAAA,CAAAsE,OAAA,CAAoB;;;AD3G9B,MAAO/L,iBAAiB;EAO5BmC,YACU8F,EAAe,EACf6G,WAAwB,EACxB4B,KAAqB,EACrBxI,MAAc;IAHd,KAAAD,EAAE,GAAFA,EAAE;IACF,KAAA6G,WAAW,GAAXA,WAAW;IACX,KAAA4B,KAAK,GAALA,KAAK;IACL,KAAAxI,MAAM,GAANA,MAAM;IAThB,KAAAyI,MAAM,GAAkB,IAAI;IAC5B,KAAA5E,OAAO,GAAG,KAAK;IACf,KAAAtH,YAAY,GAAG,EAAE;IACjB,KAAAE,cAAc,GAAG,EAAE;IAQjB,IAAI,CAACoK,QAAQ,GAAG,IAAI,CAAC9G,EAAE,CAACG,KAAK,CAAC;MAC5BmF,SAAS,EAAE,CAAC,EAAE,EAAE,CAAChJ,sDAAU,CAAC8D,QAAQ,CAAC,CAAC;MACtCmF,QAAQ,EAAE,CAAC,EAAE,EAAE,CAACjJ,sDAAU,CAAC8D,QAAQ,CAAC,CAAC;MACrCX,KAAK,EAAE,CAAC,EAAE,EAAE,CAACnD,sDAAU,CAAC8D,QAAQ,EAAE9D,sDAAU,CAACmD,KAAK,CAAC,CAAC;MACpDsH,WAAW,EAAE,CAAC,EAAE,EAAE,CAACzK,sDAAU,CAAC8D,QAAQ,EAAE9D,sDAAU,CAACgE,SAAS,CAAC,EAAE,CAAC,EAAEhE,sDAAU,CAACiE,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC;MAC5FyG,OAAO,EAAE,CAAC,EAAE;KACb,CAAC;EACJ;EAEA2B,QAAQA,CAAA;IACN,IAAI,CAACF,KAAK,CAACG,MAAM,CAACvO,SAAS,CAACuO,MAAM,IAAG;MACnC,IAAI,CAACF,MAAM,GAAG,CAACE,MAAM,CAAC,IAAI,CAAC;MAC3B,IAAI,IAAI,CAACF,MAAM,EAAE;QACf,IAAI,CAACG,QAAQ,EAAE;;IAEnB,CAAC,CAAC;EACJ;EAEAA,QAAQA,CAAA;IACN,IAAI,CAAC,IAAI,CAACH,MAAM,EAAE;IAElB,IAAI,CAAC5E,OAAO,GAAG,IAAI;IACnB,IAAI,CAAC+C,WAAW,CAACiC,WAAW,CAAC,IAAI,CAACJ,MAAM,CAAC,CAACrO,SAAS,CAAC;MAClDC,IAAI,EAAG2G,QAAQ,IAAI;QACjB,IAAIA,QAAQ,CAACC,OAAO,IAAID,QAAQ,CAACoD,IAAI,EAAE;UACrC,MAAM0E,IAAI,GAAG9H,QAAQ,CAACoD,IAAI;UAC1B,IAAI,CAACyC,QAAQ,CAACkC,UAAU,CAAC;YACvB1D,SAAS,EAAEyD,IAAI,CAACzD,SAAS;YACzBC,QAAQ,EAAEwD,IAAI,CAACxD,QAAQ;YACvB9F,KAAK,EAAEsJ,IAAI,CAACtJ,KAAK;YACjBsH,WAAW,EAAEgC,IAAI,CAAChC,WAAW,IAAI,EAAE;YACnCC,OAAO,EAAE+B,IAAI,CAAC/B,OAAO,IAAI;WAC1B,CAAC;SACH,MAAM;UACL,IAAI,CAACxK,YAAY,GAAGyE,QAAQ,CAACG,OAAO,IAAI,qBAAqB;;QAE/D,IAAI,CAAC0C,OAAO,GAAG,KAAK;MACtB,CAAC;MACDnJ,KAAK,EAAGA,KAAK,IAAI;QACf,IAAI,CAAC6B,YAAY,GAAG7B,KAAK,CAACA,KAAK,EAAEyG,OAAO,IAAI,qBAAqB;QACjE,IAAI,CAAC0C,OAAO,GAAG,KAAK;MACtB;KACD,CAAC;EACJ;EAEAI,QAAQA,CAAA;IACN,IAAI,IAAI,CAAC4C,QAAQ,CAAC/F,KAAK,IAAI,IAAI,CAAC2H,MAAM,EAAE;MACtC,IAAI,CAAC5E,OAAO,GAAG,IAAI;MACnB,IAAI,CAACtH,YAAY,GAAG,EAAE;MAEtB,MAAMyM,UAAU,GAAG,IAAI,CAACnC,QAAQ,CAACjG,KAAK;MACtC,IAAI,CAACgG,WAAW,CAACqC,UAAU,CAAC,IAAI,CAACR,MAAM,EAAEO,UAAU,CAAC,CAAC5O,SAAS,CAAC;QAC7DC,IAAI,EAAG2G,QAAQ,IAAI;UACjB,IAAIA,QAAQ,CAACC,OAAO,EAAE;YACpB,IAAI,CAACxE,cAAc,GAAG,4BAA4B;YAClDyE,UAAU,CAAC,MAAK;cACd,IAAI,CAAClB,MAAM,CAACsB,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;YAClC,CAAC,EAAE,IAAI,CAAC;WACT,MAAM;YACL,IAAI,CAAC/E,YAAY,GAAGyE,QAAQ,CAACG,OAAO,IAAI,uBAAuB;;UAEjE,IAAI,CAAC0C,OAAO,GAAG,KAAK;QACtB,CAAC;QACDnJ,KAAK,EAAGA,KAAK,IAAI;UACf,IAAI,CAAC6B,YAAY,GAAG7B,KAAK,CAACA,KAAK,EAAEyG,OAAO,IAAI,uBAAuB;UACnE,IAAI,CAAC0C,OAAO,GAAG,KAAK;QACtB;OACD,CAAC;;EAEN;EAEAoD,QAAQA,CAAA;IACN,IAAI,CAACjH,MAAM,CAACsB,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;EAClC;EAEAsC,eAAeA,CAACsD,SAAiB;IAC/B,MAAM7C,KAAK,GAAG,IAAI,CAACwC,QAAQ,CAAChK,GAAG,CAACqK,SAAS,CAAC;IAC1C,IAAI7C,KAAK,EAAEvH,MAAM,EAAE;MACjB,IAAIuH,KAAK,CAACvH,MAAM,CAAC,UAAU,CAAC,EAAE;QAC5B,OAAO,GAAGoK,SAAS,CAAC1C,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,EAAE,GAAGyC,SAAS,CAACxC,KAAK,CAAC,CAAC,CAAC,cAAc;;MAEhF,IAAIL,KAAK,CAACvH,MAAM,CAAC,OAAO,CAAC,EAAE;QACzB,OAAO,oCAAoC;;MAE7C,IAAIuH,KAAK,CAACvH,MAAM,CAAC,WAAW,CAAC,EAAE;QAC7B,OAAO,GAAGoK,SAAS,CAAC1C,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,EAAE,GAAGyC,SAAS,CAACxC,KAAK,CAAC,CAAC,CAAC,qBAAqBL,KAAK,CAACvH,MAAM,CAAC,WAAW,CAAC,CAAC8I,cAAc,aAAa;;MAE5I,IAAIvB,KAAK,CAACvH,MAAM,CAAC,WAAW,CAAC,EAAE;QAC7B,OAAO,GAAGoK,SAAS,CAAC1C,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,EAAE,GAAGyC,SAAS,CAACxC,KAAK,CAAC,CAAC,CAAC,kBAAkBL,KAAK,CAACvH,MAAM,CAAC,WAAW,CAAC,CAAC8I,cAAc,aAAa;;;IAG3I,OAAO,EAAE;EACX;;;uBAzGW9N,iBAAiB,EAAAc,+DAAA,CAAAF,uDAAA,GAAAE,+DAAA,CAAA6I,+DAAA,GAAA7I,+DAAA,CAAA8I,2DAAA,GAAA9I,+DAAA,CAAA8I,mDAAA;IAAA;EAAA;;;YAAjB5J,iBAAiB;MAAA+C,SAAA;MAAAC,KAAA;MAAAC,IAAA;MAAAC,MAAA;MAAAC,QAAA,WAAAkO,2BAAAhO,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;UCX9BvC,4DAAA,aAA4B;UAKDA,oDAAA,gBAAS;UAAAA,0DAAA,EAAK;UAC/BA,4DAAA,gBAAmD;UAArBA,wDAAA,mBAAAwQ,mDAAA;YAAA,OAAShO,GAAA,CAAA6L,QAAA,EAAU;UAAA,EAAC;UAChDrO,uDAAA,WAAgC;UAACA,oDAAA,sBACnC;UAAAA,0DAAA,EAAS;UAEXA,4DAAA,cAAuB;UAGrBA,wDAAA,KAAAyQ,iCAAA,iBAEM;UAGNzQ,wDAAA,KAAA0Q,iCAAA,kBAEM;UAGN1Q,wDAAA,KAAA2Q,iCAAA,kBAIM;UAGN3Q,wDAAA,KAAA4Q,kCAAA,qBA6FO;UAET5Q,0DAAA,EAAM;;;UAhH6BA,uDAAA,IAAkB;UAAlBA,wDAAA,SAAAwC,GAAA,CAAAmB,YAAA,CAAkB;UAKjB3D,uDAAA,GAAoB;UAApBA,wDAAA,SAAAwC,GAAA,CAAAqB,cAAA,CAAoB;UAK5B7D,uDAAA,GAA8B;UAA9BA,wDAAA,SAAAwC,GAAA,CAAAyI,OAAA,KAAAzI,GAAA,CAAAmB,YAAA,CAA8B;UAOF3D,uDAAA,GAA8B;UAA9BA,wDAAA,UAAAwC,GAAA,CAAAyI,OAAA,IAAAzI,GAAA,CAAAmB,YAAA,CAA8B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IEG9E3D,4DAAA,iBAIqB;IADnBA,wDAAA,mBAAA6Q,6DAAA;MAAA7Q,2DAAA,CAAA8Q,GAAA;MAAA,MAAA9P,MAAA,GAAAhB,2DAAA;MAAA,OAASA,yDAAA,CAAAgB,MAAA,CAAA+P,WAAA,EAAa;IAAA,EAAC;IAEvB/Q,uDAAA,YAA8B;IAACA,oDAAA,cACjC;IAAAA,0DAAA,EAAS;;;;;IAmBfA,4DAAA,cAAqD;IACnDA,oDAAA,GACF;IAAAA,0DAAA,EAAM;;;;IADJA,uDAAA,GACF;IADEA,gEAAA,MAAA4D,MAAA,CAAAD,YAAA,MACF;;;;;IAGA3D,4DAAA,cAAyC;IAEPA,oDAAA,iBAAU;IAAAA,0DAAA,EAAO;;;;;;IAoB7CA,4DAAA,SAA+B;IACzBA,oDAAA,GAAa;IAAAA,0DAAA,EAAK;IACtBA,4DAAA,SAAI;IAAAA,oDAAA,GAAwC;IAAAA,0DAAA,EAAK;IACjDA,4DAAA,SAAI;IAAAA,oDAAA,GAAgB;IAAAA,0DAAA,EAAK;IACzBA,4DAAA,SAAI;IAAAA,oDAAA,GAAsB;IAAAA,0DAAA,EAAK;IAC/BA,4DAAA,SAAI;IAAAA,oDAAA,IAA2B;IAAAA,0DAAA,EAAK;IACpCA,4DAAA,UAAI;IAIAA,oDAAA,IACF;IAAAA,0DAAA,EAAO;IAETA,4DAAA,UAAI;IAAAA,oDAAA,IAAmC;;IAAAA,0DAAA,EAAK;IAC5CA,4DAAA,UAAI;IAIEA,wDAAA,mBAAAgR,iEAAA;MAAA,MAAAC,WAAA,GAAAjR,2DAAA,CAAAoP,IAAA;MAAA,MAAA8B,OAAA,GAAAD,WAAA,CAAAE,SAAA;MAAA,MAAA9B,MAAA,GAAArP,2DAAA;MAAA,OAASA,yDAAA,CAAAqP,MAAA,CAAA+B,QAAA,CAAAF,OAAA,CAAAG,EAAA,CAAkB;IAAA,EAAC;IAE5BrR,uDAAA,aAA4B;IAC9BA,0DAAA,EAAS;IACTA,4DAAA,kBAGe;IADbA,wDAAA,mBAAAsR,iEAAA;MAAA,MAAAL,WAAA,GAAAjR,2DAAA,CAAAoP,IAAA;MAAA,MAAA8B,OAAA,GAAAD,WAAA,CAAAE,SAAA;MAAA,MAAA9L,OAAA,GAAArF,2DAAA;MAAA,OAASA,yDAAA,CAAAqF,OAAA,CAAAkM,QAAA,CAAAL,OAAA,CAAAG,EAAA,CAAkB;IAAA,EAAC;IAE5BrR,uDAAA,aAAyB;IAC3BA,0DAAA,EAAS;IACTA,4DAAA,kBAGsD;IADpDA,wDAAA,mBAAAwR,iEAAA;MAAA,MAAAP,WAAA,GAAAjR,2DAAA,CAAAoP,IAAA;MAAA,MAAA8B,OAAA,GAAAD,WAAA,CAAAE,SAAA;MAAA,MAAA1L,OAAA,GAAAzF,2DAAA;MAAA,OAASA,yDAAA,CAAAkR,OAAA,CAAAO,QAAA,GAAgBhM,OAAA,CAAAiM,cAAA,CAAAR,OAAA,CAAAG,EAAA,CAAwB,GAAG5L,OAAA,CAAAkM,YAAA,CAAAT,OAAA,CAAAG,EAAA,CAAsB;IAAA,EAAC;IAE3ErR,uDAAA,aAA8E;IAChFA,0DAAA,EAAS;IACTA,4DAAA,kBAGiB;IADfA,wDAAA,mBAAA4R,iEAAA;MAAA,MAAAX,WAAA,GAAAjR,2DAAA,CAAAoP,IAAA;MAAA,MAAA8B,OAAA,GAAAD,WAAA,CAAAE,SAAA;MAAA,MAAAxL,OAAA,GAAA3F,2DAAA;MAAA,OAASA,yDAAA,CAAA2F,OAAA,CAAAkM,UAAA,CAAAX,OAAA,CAAAG,EAAA,CAAoB;IAAA,EAAC;IAE9BrR,uDAAA,aAA2B;IAC7BA,0DAAA,EAAS;;;;IAtCTA,uDAAA,GAAa;IAAbA,+DAAA,CAAAkR,OAAA,CAAAG,EAAA,CAAa;IACbrR,uDAAA,GAAwC;IAAxCA,gEAAA,KAAAkR,OAAA,CAAAzE,SAAA,OAAAyE,OAAA,CAAAxE,QAAA,KAAwC;IACxC1M,uDAAA,GAAgB;IAAhBA,+DAAA,CAAAkR,OAAA,CAAAtK,KAAA,CAAgB;IAChB5G,uDAAA,GAAsB;IAAtBA,+DAAA,CAAAkR,OAAA,CAAAhD,WAAA,CAAsB;IACtBlO,uDAAA,GAA2B;IAA3BA,+DAAA,CAAAkR,OAAA,CAAA/C,OAAA,UAA2B;IAI3BnO,uDAAA,GAAoD;IAApDA,wDAAA,CAAAkR,OAAA,CAAAO,QAAA,8BAAoD;IACpDzR,uDAAA,GACF;IADEA,gEAAA,MAAAkR,OAAA,CAAAO,QAAA,8BACF;IAEEzR,uDAAA,GAAmC;IAAnCA,+DAAA,CAAAA,yDAAA,SAAAkR,OAAA,CAAAe,SAAA,WAAmC;IAkBjCjS,uDAAA,GAAmD;IAAnDA,wDAAA,UAAAkR,OAAA,CAAAO,QAAA,6BAAmD;IACrCzR,uDAAA,GAA2D;IAA3DA,wDAAA,CAAAkR,OAAA,CAAAO,QAAA,qCAA2D;;;;;IAWjFzR,4DAAA,SAA+B;IAE3BA,oDAAA,uBACF;IAAAA,0DAAA,EAAK;;;;;IA7DbA,4DAAA,cAA+C;IAInCA,oDAAA,SAAE;IAAAA,0DAAA,EAAK;IACXA,4DAAA,SAAI;IAAAA,oDAAA,WAAI;IAAAA,0DAAA,EAAK;IACbA,4DAAA,SAAI;IAAAA,oDAAA,YAAK;IAAAA,0DAAA,EAAK;IACdA,4DAAA,UAAI;IAAAA,oDAAA,aAAK;IAAAA,0DAAA,EAAK;IACdA,4DAAA,UAAI;IAAAA,oDAAA,eAAO;IAAAA,0DAAA,EAAK;IAChBA,4DAAA,UAAI;IAAAA,oDAAA,cAAM;IAAAA,0DAAA,EAAK;IACfA,4DAAA,UAAI;IAAAA,oDAAA,eAAO;IAAAA,0DAAA,EAAK;IAChBA,4DAAA,UAAI;IAAAA,oDAAA,eAAO;IAAAA,0DAAA,EAAK;IAGpBA,4DAAA,aAAO;IACLA,wDAAA,KAAAkS,uCAAA,mBA0CK;IACLlS,wDAAA,KAAAmS,uCAAA,iBAIK;IACPnS,0DAAA,EAAQ;;;;IAhDeA,uDAAA,IAAQ;IAARA,wDAAA,YAAA2G,MAAA,CAAAyL,KAAA,CAAQ;IA2CxBpS,uDAAA,GAAwB;IAAxBA,wDAAA,SAAA2G,MAAA,CAAAyL,KAAA,CAAAtF,MAAA,OAAwB;;;ADtHvC,MAAO9N,iBAAiB;EAO5BqC,YACU2M,WAAwB,EACxB5G,MAAc;IADd,KAAA4G,WAAW,GAAXA,WAAW;IACX,KAAA5G,MAAM,GAANA,MAAM;IARhB,KAAAgL,KAAK,GAAW,EAAE;IAClB,KAAAnH,OAAO,GAAG,KAAK;IACf,KAAAtH,YAAY,GAAG,EAAE;IACjB,KAAA0O,UAAU,GAAG,EAAE;IACf,KAAAC,cAAc,GAAG,KAAK;EAKlB;EAEJxC,QAAQA,CAAA;IACN,IAAI,CAACyC,SAAS,EAAE;EAClB;EAEAA,SAASA,CAAA;IACP,IAAI,CAACtH,OAAO,GAAG,IAAI;IACnB,IAAI,CAACtH,YAAY,GAAG,EAAE;IAEtB,MAAM6O,UAAU,GAAG,IAAI,CAACF,cAAc,GAClC,IAAI,CAACtE,WAAW,CAACyE,cAAc,EAAE,GACjC,IAAI,CAACzE,WAAW,CAAC0E,WAAW,EAAE;IAElCF,UAAU,CAAChR,SAAS,CAAC;MACnBC,IAAI,EAAG2G,QAAQ,IAAI;QACjB,IAAIA,QAAQ,CAACC,OAAO,EAAE;UACpB,IAAI,CAAC+J,KAAK,GAAGhK,QAAQ,CAACoD,IAAI,IAAI,EAAE;SACjC,MAAM;UACL,IAAI,CAAC7H,YAAY,GAAGyE,QAAQ,CAACG,OAAO;;QAEtC,IAAI,CAAC0C,OAAO,GAAG,KAAK;MACtB,CAAC;MACDnJ,KAAK,EAAGA,KAAK,IAAI;QACf,IAAI,CAAC6B,YAAY,GAAG7B,KAAK,CAACA,KAAK,EAAEyG,OAAO,IAAI,sBAAsB;QAClE,IAAI,CAAC0C,OAAO,GAAG,KAAK;MACtB;KACD,CAAC;EACJ;EAEA0H,WAAWA,CAAA;IACT,IAAI,IAAI,CAACN,UAAU,CAACO,IAAI,EAAE,EAAE;MAC1B,IAAI,CAAC3H,OAAO,GAAG,IAAI;MACnB,IAAI,CAACtH,YAAY,GAAG,EAAE;MAEtB,IAAI,CAACqK,WAAW,CAAC6E,iBAAiB,CAAC,IAAI,CAACR,UAAU,CAAC,CAAC7Q,SAAS,CAAC;QAC5DC,IAAI,EAAG2G,QAAQ,IAAI;UACjB,IAAIA,QAAQ,CAACC,OAAO,EAAE;YACpB,IAAI,CAAC+J,KAAK,GAAGhK,QAAQ,CAACoD,IAAI,IAAI,EAAE;WACjC,MAAM;YACL,IAAI,CAAC7H,YAAY,GAAGyE,QAAQ,CAACG,OAAO;;UAEtC,IAAI,CAAC0C,OAAO,GAAG,KAAK;QACtB,CAAC;QACDnJ,KAAK,EAAGA,KAAK,IAAI;UACf,IAAI,CAAC6B,YAAY,GAAG7B,KAAK,CAACA,KAAK,EAAEyG,OAAO,IAAI,wBAAwB;UACpE,IAAI,CAAC0C,OAAO,GAAG,KAAK;QACtB;OACD,CAAC;KACH,MAAM;MACL,IAAI,CAACsH,SAAS,EAAE;;EAEpB;EAEAO,kBAAkBA,CAAA;IAChB,IAAI,CAACR,cAAc,GAAG,CAAC,IAAI,CAACA,cAAc;IAC1C,IAAI,CAACC,SAAS,EAAE;EAClB;EAEAV,UAAUA,CAAChC,MAAc;IACvB,IAAIkD,OAAO,CAAC,4CAA4C,CAAC,EAAE;MACzD,IAAI,CAAC/E,WAAW,CAAC6D,UAAU,CAAChC,MAAM,CAAC,CAACrO,SAAS,CAAC;QAC5CC,IAAI,EAAG2G,QAAQ,IAAI;UACjB,IAAIA,QAAQ,CAACC,OAAO,EAAE;YACpB,IAAI,CAAC+J,KAAK,GAAG,IAAI,CAACA,KAAK,CAACY,MAAM,CAAC9C,IAAI,IAAIA,IAAI,CAACmB,EAAE,KAAKxB,MAAM,CAAC;WAC3D,MAAM;YACL,IAAI,CAAClM,YAAY,GAAGyE,QAAQ,CAACG,OAAO;;QAExC,CAAC;QACDzG,KAAK,EAAGA,KAAK,IAAI;UACf,IAAI,CAAC6B,YAAY,GAAG7B,KAAK,CAACA,KAAK,EAAEyG,OAAO,IAAI,uBAAuB;QACrE;OACD,CAAC;;EAEN;EAEAmJ,cAAcA,CAAC7B,MAAc;IAC3B,IAAI,CAAC7B,WAAW,CAAC0D,cAAc,CAAC7B,MAAM,CAAC,CAACrO,SAAS,CAAC;MAChDC,IAAI,EAAG2G,QAAQ,IAAI;QACjB,IAAIA,QAAQ,CAACC,OAAO,EAAE;UACpB,IAAI,CAACkK,SAAS,EAAE,CAAC,CAAC;SACnB,MAAM;UACL,IAAI,CAAC5O,YAAY,GAAGyE,QAAQ,CAACG,OAAO;;MAExC,CAAC;MACDzG,KAAK,EAAGA,KAAK,IAAI;QACf,IAAI,CAAC6B,YAAY,GAAG7B,KAAK,CAACA,KAAK,EAAEyG,OAAO,IAAI,2BAA2B;MACzE;KACD,CAAC;EACJ;EAEAoJ,YAAYA,CAAC9B,MAAc;IACzB,IAAI,CAAC7B,WAAW,CAAC2D,YAAY,CAAC9B,MAAM,CAAC,CAACrO,SAAS,CAAC;MAC9CC,IAAI,EAAG2G,QAAQ,IAAI;QACjB,IAAIA,QAAQ,CAACC,OAAO,EAAE;UACpB,IAAI,CAACkK,SAAS,EAAE,CAAC,CAAC;SACnB,MAAM;UACL,IAAI,CAAC5O,YAAY,GAAGyE,QAAQ,CAACG,OAAO;;MAExC,CAAC;MACDzG,KAAK,EAAGA,KAAK,IAAI;QACf,IAAI,CAAC6B,YAAY,GAAG7B,KAAK,CAACA,KAAK,EAAEyG,OAAO,IAAI,yBAAyB;MACvE;KACD,CAAC;EACJ;EAEAwI,WAAWA,CAAA;IACT,IAAI,CAACsB,UAAU,GAAG,EAAE;IACpB,IAAI,CAACE,SAAS,EAAE;EAClB;EAEAhB,QAAQA,CAAC1B,MAAc;IACrB;IACAoD,OAAO,CAACC,GAAG,CAAC,iCAAiC,EAAErD,MAAM,CAAC;IACtD,IAAI,CAACzI,MAAM,CAACsB,QAAQ,CAAC,CAAC,QAAQ,EAAEmH,MAAM,CAAC,CAAC,CAACsD,IAAI,CAAC,MAAK;MACjDF,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAC;IACrC,CAAC,CAAC,CAACE,KAAK,CAACC,GAAG,IAAG;MACbJ,OAAO,CAACnR,KAAK,CAAC,mBAAmB,EAAEuR,GAAG,CAAC;IACzC,CAAC,CAAC;EACJ;EAEAjC,QAAQA,CAACvB,MAAc;IACrB;IACA,IAAI,CAACzI,MAAM,CAACsB,QAAQ,CAAC,CAAC,QAAQ,EAAEmH,MAAM,EAAE,MAAM,CAAC,CAAC;EAClD;;;uBAtIW7Q,iBAAiB,EAAAgB,+DAAA,CAAAF,+DAAA,GAAAE,+DAAA,CAAA6I,mDAAA;IAAA;EAAA;;;YAAjB7J,iBAAiB;MAAAiD,SAAA;MAAAC,KAAA;MAAAC,IAAA;MAAAC,MAAA;MAAAC,QAAA,WAAAiR,2BAAA/Q,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;UCV9BvC,4DAAA,aAA4B;UAKDA,oDAAA,sBAAe;UAAAA,0DAAA,EAAK;UACrCA,4DAAA,aAA0B;UAEtBA,uDAAA,WAAiC;UAACA,oDAAA,sBACpC;UAAAA,0DAAA,EAAS;UACTA,4DAAA,iBAA8D;UAC5DA,uDAAA,aAAyB;UAACA,oDAAA,yBAC5B;UAAAA,0DAAA,EAAS;UAGbA,4DAAA,eAAuB;UAUbA,wDAAA,2BAAAuT,2DAAAC,MAAA;YAAA,OAAAhR,GAAA,CAAA6P,UAAA,GAAAmB,MAAA;UAAA,EAAwB,yBAAAC,yDAAA;YAAA,OACTjR,GAAA,CAAAmQ,WAAA,EAAa;UAAA,EADJ;UAJ1B3S,0DAAA,EAKgC;UAChCA,4DAAA,kBAG0B;UAAxBA,wDAAA,mBAAA0T,oDAAA;YAAA,OAASlR,GAAA,CAAAmQ,WAAA,EAAa;UAAA,EAAC;UACvB3S,uDAAA,aAA4B;UAACA,oDAAA,gBAC/B;UAAAA,0DAAA,EAAS;UACTA,wDAAA,KAAA2T,oCAAA,qBAMS;UACX3T,0DAAA,EAAM;UAERA,4DAAA,eAA+B;UAMzBA,wDAAA,2BAAA4T,2DAAAJ,MAAA;YAAA,OAAAhR,GAAA,CAAA8P,cAAA,GAAAkB,MAAA;UAAA,EAA4B,oBAAAK,oDAAA;YAAA,OAClBrR,GAAA,CAAAsQ,kBAAA,EAAoB;UAAA,EADF;UAJ9B9S,0DAAA,EAKkC;UAClCA,4DAAA,iBAAmD;UACjDA,oDAAA,gCACF;UAAAA,0DAAA,EAAQ;UAMdA,wDAAA,KAAA8T,iCAAA,kBAEM;UAGN9T,wDAAA,KAAA+T,iCAAA,kBAIM;UAGN/T,wDAAA,KAAAgU,iCAAA,mBAiEM;UAGNhU,4DAAA,eAA6B;UAC3BA,oDAAA,IACF;UAAAA,0DAAA,EAAM;;;UAnHEA,uDAAA,IAAwB;UAAxBA,wDAAA,YAAAwC,GAAA,CAAA6P,UAAA,CAAwB;UAYvBrS,uDAAA,GAAgB;UAAhBA,wDAAA,SAAAwC,GAAA,CAAA6P,UAAA,CAAgB;UAWjBrS,uDAAA,GAA4B;UAA5BA,wDAAA,YAAAwC,GAAA,CAAA8P,cAAA,CAA4B;UAUHtS,uDAAA,GAAkB;UAAlBA,wDAAA,SAAAwC,GAAA,CAAAmB,YAAA,CAAkB;UAKzB3D,uDAAA,GAAa;UAAbA,wDAAA,SAAAwC,GAAA,CAAAyI,OAAA,CAAa;UAORjL,uDAAA,GAAc;UAAdA,wDAAA,UAAAwC,GAAA,CAAAyI,OAAA,CAAc;UAqE3CjL,uDAAA,GACF;UADEA,gEAAA,mBAAAwC,GAAA,CAAA4P,KAAA,CAAAtF,MAAA,MACF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IE/HA9M,4DAAA,cAAqD;IACnDA,oDAAA,GACF;IAAAA,0DAAA,EAAM;;;;IADJA,uDAAA,GACF;IADEA,gEAAA,MAAA0D,MAAA,CAAAC,YAAA,MACF;;;;;IAGA3D,4DAAA,cAA0D;IAExBA,oDAAA,iBAAU;IAAAA,0DAAA,EAAO;;;;;;IAKnDA,4DAAA,cAAmD;IAKfA,oDAAA,eAAQ;IAAAA,0DAAA,EAAQ;IAC5CA,4DAAA,eAA2B;IAAAA,oDAAA,GAAa;IAAAA,0DAAA,EAAO;IAGnDA,4DAAA,cAAsB;IAEUA,oDAAA,eAAO;IAAAA,0DAAA,EAAQ;IAC3CA,4DAAA,gBAA2B;IAEvBA,oDAAA,IACF;IAAAA,0DAAA,EAAO;IAMfA,4DAAA,eAAiB;IAGiBA,oDAAA,mBAAW;IAAAA,0DAAA,EAAQ;IAC/CA,4DAAA,gBAA2B;IAAAA,oDAAA,IAAoB;IAAAA,0DAAA,EAAO;IAG1DA,4DAAA,eAAsB;IAEUA,oDAAA,kBAAU;IAAAA,0DAAA,EAAQ;IAC9CA,4DAAA,gBAA2B;IAAAA,oDAAA,IAAmB;IAAAA,0DAAA,EAAO;IAK3DA,4DAAA,eAAyB;IACKA,oDAAA,cAAM;IAAAA,0DAAA,EAAQ;IAC1CA,4DAAA,gBAA2B;IAAAA,oDAAA,IAAgB;IAAAA,0DAAA,EAAO;IAGpDA,4DAAA,eAAyB;IACKA,oDAAA,qBAAa;IAAAA,0DAAA,EAAQ;IACjDA,4DAAA,gBAA2B;IAAAA,oDAAA,IAAwC;IAAAA,0DAAA,EAAO;IAG5EA,4DAAA,eAAyB;IACKA,oDAAA,gBAAQ;IAAAA,0DAAA,EAAQ;IAC5CA,4DAAA,gBAA2B;IAAAA,oDAAA,IAAoC;IAAAA,0DAAA,EAAO;IAGxEA,4DAAA,eAAiB;IAGiBA,oDAAA,mBAAW;IAAAA,0DAAA,EAAQ;IAC/CA,4DAAA,gBAA2B;IAAAA,oDAAA,IAAoC;;IAAAA,0DAAA,EAAO;IAG1EA,4DAAA,eAAsB;IAEUA,oDAAA,mBAAW;IAAAA,0DAAA,EAAQ;IAC/CA,4DAAA,gBAA2B;IAAAA,oDAAA,IAAoC;;IAAAA,0DAAA,EAAO;IAM5EA,4DAAA,eAA+B;IAG3BA,wDAAA,mBAAAiU,2DAAA;MAAAjU,2DAAA,CAAAkU,GAAA;MAAA,MAAAvN,MAAA,GAAA3G,2DAAA;MAAA,OAASA,yDAAA,CAAA2G,MAAA,CAAAwN,MAAA,EAAQ;IAAA,EAAC;IAClBnU,uDAAA,aAA4B;IAACA,oDAAA,mBAC/B;IAAAA,0DAAA,EAAS;IACTA,4DAAA,kBAEqB;IAAnBA,wDAAA,mBAAAoU,2DAAA;MAAApU,2DAAA,CAAAkU,GAAA;MAAA,MAAAzT,MAAA,GAAAT,2DAAA;MAAA,OAASA,yDAAA,CAAAS,MAAA,CAAA4T,MAAA,EAAQ;IAAA,EAAC;IAClBrU,oDAAA,sBACF;IAAAA,0DAAA,EAAS;;;;IAvEsBA,uDAAA,GAAa;IAAbA,+DAAA,CAAA6E,MAAA,CAAAqL,IAAA,CAAAmB,EAAA,CAAa;IAOlBrR,uDAAA,GAAoD;IAApDA,wDAAA,CAAA6E,MAAA,CAAAqL,IAAA,CAAAuB,QAAA,8BAAoD;IACtEzR,uDAAA,GACF;IADEA,gEAAA,MAAA6E,MAAA,CAAAqL,IAAA,CAAAuB,QAAA,8BACF;IAUyBzR,uDAAA,GAAoB;IAApBA,+DAAA,CAAA6E,MAAA,CAAAqL,IAAA,CAAAzD,SAAA,CAAoB;IAMpBzM,uDAAA,GAAmB;IAAnBA,+DAAA,CAAA6E,MAAA,CAAAqL,IAAA,CAAAxD,QAAA,CAAmB;IAOvB1M,uDAAA,GAAgB;IAAhBA,+DAAA,CAAA6E,MAAA,CAAAqL,IAAA,CAAAtJ,KAAA,CAAgB;IAKhB5G,uDAAA,GAAwC;IAAxCA,+DAAA,CAAA6E,MAAA,CAAAqL,IAAA,CAAAhC,WAAA,mBAAwC;IAKxClO,uDAAA,GAAoC;IAApCA,+DAAA,CAAA6E,MAAA,CAAAqL,IAAA,CAAA/B,OAAA,mBAAoC;IAOhCnO,uDAAA,GAAoC;IAApCA,+DAAA,CAAAA,yDAAA,SAAA6E,MAAA,CAAAqL,IAAA,CAAA+B,SAAA,YAAoC;IAMpCjS,uDAAA,GAAoC;IAApCA,+DAAA,CAAAA,yDAAA,SAAA6E,MAAA,CAAAqL,IAAA,CAAAoE,SAAA,YAAoC;;;AD5E3E,MAAOnV,iBAAiB;EAM5BkC,YACU2M,WAAwB,EACxB4B,KAAqB,EACrBxI,MAAc;IAFd,KAAA4G,WAAW,GAAXA,WAAW;IACX,KAAA4B,KAAK,GAALA,KAAK;IACL,KAAAxI,MAAM,GAANA,MAAM;IARhB,KAAA8I,IAAI,GAAgB,IAAI;IACxB,KAAAL,MAAM,GAAkB,IAAI;IAC5B,KAAA5E,OAAO,GAAG,KAAK;IACf,KAAAtH,YAAY,GAAG,EAAE;EAMd;EAEHmM,QAAQA,CAAA;IACNmD,OAAO,CAACC,GAAG,CAAC,+BAA+B,CAAC;IAC5C,IAAI,CAACtD,KAAK,CAACG,MAAM,CAACvO,SAAS,CAACuO,MAAM,IAAG;MACnC,IAAI,CAACF,MAAM,GAAG,CAACE,MAAM,CAAC,IAAI,CAAC;MAC3BkD,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAE,IAAI,CAACrD,MAAM,CAAC;MAChD,IAAI,IAAI,CAACA,MAAM,EAAE;QACf,IAAI,CAACG,QAAQ,EAAE;;IAEnB,CAAC,CAAC;EACJ;EAEAA,QAAQA,CAAA;IACN,IAAI,CAAC,IAAI,CAACH,MAAM,EAAE;IAElBoD,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAE,IAAI,CAACrD,MAAM,CAAC;IACjD,IAAI,CAAC5E,OAAO,GAAG,IAAI;IACnB,IAAI,CAAC+C,WAAW,CAACiC,WAAW,CAAC,IAAI,CAACJ,MAAM,CAAC,CAACrO,SAAS,CAAC;MAClDC,IAAI,EAAG2G,QAAQ,IAAI;QACjB6K,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAE9K,QAAQ,CAAC;QAC5C,IAAIA,QAAQ,CAACC,OAAO,IAAID,QAAQ,CAACoD,IAAI,EAAE;UACrC,IAAI,CAAC0E,IAAI,GAAG9H,QAAQ,CAACoD,IAAI;SAC1B,MAAM;UACL,IAAI,CAAC7H,YAAY,GAAGyE,QAAQ,CAACG,OAAO,IAAI,qBAAqB;;QAE/D,IAAI,CAAC0C,OAAO,GAAG,KAAK;MACtB,CAAC;MACDnJ,KAAK,EAAGA,KAAK,IAAI;QACfmR,OAAO,CAACnR,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;QAC3C,IAAI,CAAC6B,YAAY,GAAG7B,KAAK,CAACA,KAAK,EAAEyG,OAAO,IAAI,qBAAqB;QACjE,IAAI,CAAC0C,OAAO,GAAG,KAAK;MACtB;KACD,CAAC;EACJ;EAEAkJ,MAAMA,CAAA;IACJ,IAAI,IAAI,CAACtE,MAAM,EAAE;MACf,IAAI,CAACzI,MAAM,CAACsB,QAAQ,CAAC,CAAC,QAAQ,EAAE,IAAI,CAACmH,MAAM,EAAE,MAAM,CAAC,CAAC;;EAEzD;EAEAwE,MAAMA,CAAA;IACJ,IAAI,CAACjN,MAAM,CAACsB,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;EAClC;;;uBAtDWvJ,iBAAiB,EAAAa,+DAAA,CAAAF,+DAAA,GAAAE,+DAAA,CAAA6I,2DAAA,GAAA7I,+DAAA,CAAA6I,mDAAA;IAAA;EAAA;;;YAAjB1J,iBAAiB;MAAA8C,SAAA;MAAAC,KAAA;MAAAC,IAAA;MAAAC,MAAA;MAAAC,QAAA,WAAAkS,2BAAAhS,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;UCV9BvC,4DAAA,aAA4B;UAKDA,oDAAA,mBAAY;UAAAA,0DAAA,EAAK;UAClCA,4DAAA,gBAAiD;UAAnBA,wDAAA,mBAAAwU,mDAAA;YAAA,OAAShS,GAAA,CAAA6R,MAAA,EAAQ;UAAA,EAAC;UAC9CrU,uDAAA,WAAgC;UAACA,oDAAA,sBACnC;UAAAA,0DAAA,EAAS;UAEXA,4DAAA,cAAuB;UAGrBA,wDAAA,KAAAyU,iCAAA,iBAEM;UAGNzU,wDAAA,KAAA0U,iCAAA,kBAIM;UAGN1U,wDAAA,KAAA2U,iCAAA,oBAgFM;UAER3U,0DAAA,EAAM;;;UA9F6BA,uDAAA,IAAkB;UAAlBA,wDAAA,SAAAwC,GAAA,CAAAmB,YAAA,CAAkB;UAKzB3D,uDAAA,GAA8B;UAA9BA,wDAAA,SAAAwC,GAAA,CAAAyI,OAAA,KAAAzI,GAAA,CAAAmB,YAAA,CAA8B;UAOlD3D,uDAAA,GAAsB;UAAtBA,wDAAA,SAAAwC,GAAA,CAAA0N,IAAA,KAAA1N,GAAA,CAAAyI,OAAA,CAAsB;;;;;;;;;;;;;;;;;;;;;;;;;ACThC,MAAOjJ,WAAW;EAGtBX,YAAoBuT,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,MAAM,GAAG,gCAAgC;EAET;EAExC;EACA9H,QAAQA,CAAC+H,eAAgC;IACvC,OAAO,IAAI,CAACF,IAAI,CAACG,IAAI,CAA4B,GAAG,IAAI,CAACF,MAAM,WAAW,EAAEC,eAAe,CAAC;EAC9F;EAEA;EACAxJ,KAAKA,CAAC0J,YAA0B;IAC9B,OAAO,IAAI,CAACJ,IAAI,CAACG,IAAI,CAA4B,GAAG,IAAI,CAACF,MAAM,QAAQ,EAAEG,YAAY,CAAC;EACxF;EAEA;EACApU,MAAMA,CAACuK,eAAuB;IAC5B,OAAO,IAAI,CAACyJ,IAAI,CAACG,IAAI,CAAsB,GAAG,IAAI,CAACF,MAAM,2BAA2B1J,eAAe,EAAE,EAAE,EAAE,CAAC;EAC5G;EAEA;EACAhD,cAAcA,CAAC8M,qBAA4C;IACzD,OAAO,IAAI,CAACL,IAAI,CAACG,IAAI,CAAsB,GAAG,IAAI,CAACF,MAAM,kBAAkB,EAAEI,qBAAqB,CAAC;EACrG;EAEA;EACAxM,yBAAyBA,CAACD,gBAAkC;IAC1D,OAAO,IAAI,CAACoM,IAAI,CAACG,IAAI,CAAsB,GAAG,IAAI,CAACF,MAAM,aAAa,EAAErM,gBAAgB,CAAC;EAC3F;EAEA;EACA0M,cAAcA,CAACC,qBAA4C;IACzD,OAAO,IAAI,CAACP,IAAI,CAACG,IAAI,CAAsB,GAAG,IAAI,CAACF,MAAM,kBAAkB,EAAEM,qBAAqB,CAAC;EACrG;EAEA;EACAC,SAASA,CAACxO,KAAa;IACrB,OAAO,IAAI,CAACgO,IAAI,CAACG,IAAI,CAAsB,GAAG,IAAI,CAACF,MAAM,qBAAqBjO,KAAK,EAAE,EAAE,EAAE,CAAC;EAC5F;EAEA;EACA2E,WAAWA,CAAChK,QAAsB;IAChC8T,YAAY,CAACC,OAAO,CAAC,UAAU,EAAEC,IAAI,CAACC,SAAS,CAACjU,QAAQ,CAAC,CAAC;EAC5D;EAEA;EACAL,WAAWA,CAAA;IACT,MAAMK,QAAQ,GAAG8T,YAAY,CAACI,OAAO,CAAC,UAAU,CAAC;IACjD,OAAOlU,QAAQ,GAAGgU,IAAI,CAACG,KAAK,CAACnU,QAAQ,CAAC,GAAG,IAAI;EAC/C;EAEA;EACAG,aAAaA,CAAA;IACX2T,YAAY,CAACM,UAAU,CAAC,UAAU,CAAC;EACrC;EAEA;EACA1S,UAAUA,CAAA;IACR,OAAO,IAAI,CAAC/B,WAAW,EAAE,KAAK,IAAI;EACpC;;;uBA3DWc,WAAW,EAAAhC,sDAAA,CAAAF,4DAAA;IAAA;EAAA;;;aAAXkC,WAAW;MAAA8T,OAAA,EAAX9T,WAAW,CAAA+T,IAAA;MAAAC,UAAA,EAFV;IAAM;EAAA;;;;;;;;;;;;;;;;;;;ACNd,MAAOzH,WAAW;EAGtBlN,YAAoBuT,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,MAAM,GAAG,2BAA2B;EAEJ;EAExC;EACAnC,WAAWA,CAAA;IACT,OAAO,IAAI,CAACkC,IAAI,CAAC3Q,GAAG,CAAsB,GAAG,IAAI,CAAC4Q,MAAM,QAAQ,CAAC;EACnE;EAEA;EACApC,cAAcA,CAAA;IACZ,OAAO,IAAI,CAACmC,IAAI,CAAC3Q,GAAG,CAAsB,GAAG,IAAI,CAAC4Q,MAAM,eAAe,CAAC;EAC1E;EAEA;EACA5E,WAAWA,CAACoB,EAAU;IACpB,OAAO,IAAI,CAACuD,IAAI,CAAC3Q,GAAG,CAAoB,GAAG,IAAI,CAAC4Q,MAAM,UAAUxD,EAAE,EAAE,CAAC;EACvE;EAEA;EACA4E,cAAcA,CAACrP,KAAa;IAC1B,OAAO,IAAI,CAACgO,IAAI,CAAC3Q,GAAG,CAAoB,GAAG,IAAI,CAAC4Q,MAAM,gBAAgBjO,KAAK,EAAE,CAAC;EAChF;EAEA;EACAiM,iBAAiBA,CAACqD,IAAY;IAC5B,OAAO,IAAI,CAACtB,IAAI,CAAC3Q,GAAG,CAAsB,GAAG,IAAI,CAAC4Q,MAAM,sBAAsBqB,IAAI,EAAE,CAAC;EACvF;EAEA;EACA9H,UAAUA,CAAC8B,IAAU;IACnB,OAAO,IAAI,CAAC0E,IAAI,CAACG,IAAI,CAAoB,GAAG,IAAI,CAACF,MAAM,QAAQ,EAAE3E,IAAI,CAAC;EACxE;EAEA;EACAG,UAAUA,CAACgB,EAAU,EAAE8E,UAAsB;IAC3C,OAAO,IAAI,CAACvB,IAAI,CAACwB,GAAG,CAAoB,GAAG,IAAI,CAACvB,MAAM,UAAUxD,EAAE,EAAE,EAAE8E,UAAU,CAAC;EACnF;EAEA;EACAtE,UAAUA,CAACR,EAAU;IACnB,OAAO,IAAI,CAACuD,IAAI,CAACyB,MAAM,CAAsB,GAAG,IAAI,CAACxB,MAAM,UAAUxD,EAAE,EAAE,CAAC;EAC5E;EAEA;EACAK,cAAcA,CAACL,EAAU;IACvB,OAAO,IAAI,CAACuD,IAAI,CAAC0B,KAAK,CAAsB,GAAG,IAAI,CAACzB,MAAM,UAAUxD,EAAE,aAAa,EAAE,EAAE,CAAC;EAC1F;EAEA;EACAM,YAAYA,CAACN,EAAU;IACrB,OAAO,IAAI,CAACuD,IAAI,CAAC0B,KAAK,CAAsB,GAAG,IAAI,CAACzB,MAAM,UAAUxD,EAAE,WAAW,EAAE,EAAE,CAAC;EACxF;EAEA;EACAkF,IAAIA,CAAA;IACF,OAAO,IAAI,CAAC3B,IAAI,CAAC3Q,GAAG,CAAC,GAAG,IAAI,CAAC4Q,MAAM,OAAO,EAAE;MAAE2B,YAAY,EAAE;IAAM,CAAE,CAAC;EACvE;;;uBA1DWjI,WAAW,EAAAvO,sDAAA,CAAAF,4DAAA;IAAA;EAAA;;;aAAXyO,WAAW;MAAAuH,OAAA,EAAXvH,WAAW,CAAAwH,IAAA;MAAAC,UAAA,EAFV;IAAM;EAAA;;;;;;;;;;;;;;;ACJyB;AAE7CS,sEAAA,EAAwB,CAACE,eAAe,CAACrT,sDAAS,CAAC,CAChD8P,KAAK,CAACC,GAAG,IAAIJ,OAAO,CAACnR,KAAK,CAACuR,GAAG,CAAC,CAAC,C","sources":["./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/change-password/change-password.component.ts","./src/app/components/change-password/change-password.component.html","./src/app/components/forget-password/forget-password.component.ts","./src/app/components/forget-password/forget-password.component.html","./src/app/components/login/login.component.ts","./src/app/components/login/login.component.html","./src/app/components/register/register.component.ts","./src/app/components/register/register.component.html","./src/app/components/user-create/user-create.component.ts","./src/app/components/user-create/user-create.component.html","./src/app/components/user-edit/user-edit.component.ts","./src/app/components/user-edit/user-edit.component.html","./src/app/components/user-list/user-list.component.ts","./src/app/components/user-list/user-list.component.html","./src/app/components/user-view/user-view.component.ts","./src/app/components/user-view/user-view.component.html","./src/app/services/auth.service.ts","./src/app/services/user.service.ts","./src/main.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { LoginComponent } from './components/login/login.component';\nimport { RegisterComponent } from './components/register/register.component';\nimport { UserListComponent } from './components/user-list/user-list.component';\nimport { ForgetPasswordComponent } from './components/forget-password/forget-password.component';\nimport { UserEditComponent } from './components/user-edit/user-edit.component';\nimport { UserViewComponent } from './components/user-view/user-view.component';\nimport { UserCreateComponent } from './components/user-create/user-create.component';\nimport { ChangePasswordComponent } from './components/change-password/change-password.component';\n\nconst routes: Routes = [\n  { path: '', redirectTo: '/login', pathMatch: 'full' },\n  { path: 'login', component: LoginComponent },\n  { path: 'register', component: RegisterComponent },\n  { path: 'forget-password', component: ForgetPasswordComponent },\n  { path: 'users', component: UserListComponent },\n  { path: 'users/create', component: UserCreateComponent },\n  { path: 'users/:id/edit', component: UserEditComponent },\n  { path: 'users/:id', component: UserViewComponent },\n  { path: 'change-password', component: ChangePasswordComponent },\n  { path: 'dashboard', component: UserListComponent }, // For now, redirect to user list\n  { path: '**', redirectTo: '/login' }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { } ","import { Component } from '@angular/core';\nimport { AuthService } from './services/auth.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'End-to-End Application';\n\n  constructor(public authService: AuthService) { }\n\n  logout(): void {\n    const userData = this.authService.getUserData();\n    if (userData) {\n      this.authService.logout(userData.username).subscribe({\n        next: () => {\n          this.authService.clearUserData();\n          window.location.href = '/login';\n        },\n        error: () => {\n          this.authService.clearUserData();\n          window.location.href = '/login';\n        }\n      });\n    }\n  }\n} ","<nav class=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n  <div class=\"container\">\n    <a class=\"navbar-brand\" routerLink=\"/\">{{ title }}</a>\n    \n    <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarNav\">\n      <span class=\"navbar-toggler-icon\"></span>\n    </button>\n    \n    <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\n      <ul class=\"navbar-nav me-auto\">\n        <li class=\"nav-item\" *ngIf=\"authService.isLoggedIn()\">\n          <a class=\"nav-link\" routerLink=\"/dashboard\" routerLinkActive=\"active\">Dashboard</a>\n        </li>\n        <li class=\"nav-item\" *ngIf=\"authService.isLoggedIn()\">\n          <a class=\"nav-link\" routerLink=\"/users\" routerLinkActive=\"active\">Users</a>\n        </li>\n      </ul>\n      \n      <ul class=\"navbar-nav\">\n        <li class=\"nav-item\" *ngIf=\"!authService.isLoggedIn()\">\n          <a class=\"nav-link\" routerLink=\"/login\" routerLinkActive=\"active\">Login</a>\n        </li>\n        <li class=\"nav-item\" *ngIf=\"!authService.isLoggedIn()\">\n          <a class=\"nav-link\" routerLink=\"/register\" routerLinkActive=\"active\">Register</a>\n        </li>\n        <li class=\"nav-item dropdown\" *ngIf=\"authService.isLoggedIn()\">\n          <a class=\"nav-link dropdown-toggle\" href=\"#\" role=\"button\" data-bs-toggle=\"dropdown\">\n            {{ authService.getUserData()?.username }}\n          </a>\n          <ul class=\"dropdown-menu\">\n            <li><a class=\"dropdown-item\" routerLink=\"/profile\">Profile</a></li>\n            <li><a class=\"dropdown-item\" routerLink=\"/change-password\">Change Password</a></li>\n            <li><hr class=\"dropdown-divider\"></li>\n            <li><a class=\"dropdown-item\" href=\"#\" (click)=\"logout()\">Logout</a></li>\n          </ul>\n        </li>\n      </ul>\n    </div>\n  </div>\n</nav>\n\n<main>\n  <router-outlet></router-outlet>\n</main>\n\n<footer class=\"bg-dark text-white text-center py-3 mt-5\">\n  <div class=\"container\">\n    <p class=\"mb-0\">&copy; 2024 End-to-End Application. All rights reserved.</p>\n  </div>\n</footer> ","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { RegisterComponent } from './components/register/register.component';\nimport { UserListComponent } from './components/user-list/user-list.component';\nimport { ForgetPasswordComponent } from './components/forget-password/forget-password.component';\nimport { UserEditComponent } from './components/user-edit/user-edit.component';\nimport { UserViewComponent } from './components/user-view/user-view.component';\nimport { UserCreateComponent } from './components/user-create/user-create.component';\nimport { ChangePasswordComponent } from './components/change-password/change-password.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    RegisterComponent,\n    UserListComponent,\n    ForgetPasswordComponent,\n    UserEditComponent,\n    UserViewComponent,\n    UserCreateComponent,\n    ChangePasswordComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n    RouterModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { } ","import { Component } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../../services/auth.service';\n\n@Component({\n  selector: 'app-change-password',\n  templateUrl: './change-password.component.html',\n  styleUrls: ['./change-password.component.css']\n})\nexport class ChangePasswordComponent {\n  changePasswordForm: FormGroup;\n  verifyOtpForm: FormGroup;\n  currentStep: 'email' | 'otp' | 'password' = 'email';\n  isLoading = false;\n  errorMessage = '';\n  successMessage = '';\n  email = '';\n\n  constructor(\n    private fb: FormBuilder,\n    private authService: AuthService,\n    private router: Router\n  ) {\n    this.changePasswordForm = this.fb.group({\n      email: ['', [Validators.required, Validators.email]]\n    });\n\n    this.verifyOtpForm = this.fb.group({\n      otp: ['', [Validators.required, Validators.minLength(6), Validators.maxLength(6)]],\n      newPassword: ['', [Validators.required, Validators.minLength(6)]],\n      confirmPassword: ['', [Validators.required]]\n    }, { validators: this.passwordMatchValidator });\n  }\n\n  passwordMatchValidator(form: FormGroup) {\n    const newPassword = form.get('newPassword')?.value;\n    const confirmPassword = form.get('confirmPassword')?.value;\n    return newPassword === confirmPassword ? null : { passwordMismatch: true };\n  }\n\n  onSendOtp() {\n    if (this.changePasswordForm.valid) {\n      this.isLoading = true;\n      this.errorMessage = '';\n      this.email = this.changePasswordForm.get('email')?.value;\n\n      this.authService.forgetPassword({ email: this.email }).subscribe({\n        next: (response) => {\n          this.isLoading = false;\n          if (response.success) {\n            this.successMessage = 'OTP sent successfully to your email!';\n            this.currentStep = 'otp';\n            setTimeout(() => {\n              this.successMessage = '';\n            }, 3000);\n          } else {\n            this.errorMessage = response.message || 'Failed to send OTP';\n          }\n        },\n        error: (error) => {\n          this.isLoading = false;\n          this.errorMessage = error.error?.message || 'Failed to send OTP. Please try again.';\n        }\n      });\n    }\n  }\n\n  onVerifyOtp() {\n    if (this.verifyOtpForm.valid) {\n      this.isLoading = true;\n      this.errorMessage = '';\n\n      const verifyOtpRequest = {\n        email: this.email,\n        otp: this.verifyOtpForm.get('otp')?.value,\n        newPassword: this.verifyOtpForm.get('newPassword')?.value,\n        confirmPassword: this.verifyOtpForm.get('confirmPassword')?.value\n      };\n\n      this.authService.verifyOtpAndResetPassword(verifyOtpRequest).subscribe({\n        next: (response) => {\n          this.isLoading = false;\n          if (response.success) {\n            this.successMessage = 'Password changed successfully! Redirecting to users...';\n            setTimeout(() => {\n              this.router.navigate(['/users']);\n            }, 2000);\n          } else {\n            this.errorMessage = response.message || 'Failed to change password';\n          }\n        },\n        error: (error) => {\n          this.isLoading = false;\n          this.errorMessage = error.error?.message || 'Failed to change password. Please try again.';\n        }\n      });\n    }\n  }\n\n  goBack() {\n    if (this.currentStep === 'otp') {\n      this.currentStep = 'email';\n      this.verifyOtpForm.reset();\n    }\n  }\n\n  goToUsers() {\n    this.router.navigate(['/users']);\n  }\n\n  resendOtp() {\n    this.onSendOtp();\n  }\n} ","<div class=\"container mt-4\">\n  <div class=\"row justify-content-center\">\n    <div class=\"col-md-8\">\n      <div class=\"card shadow\">\n        <div class=\"card-header bg-dark text-white d-flex justify-content-between align-items-center\">\n          <h4 class=\"mb-0\">Change Password</h4>\n          <button class=\"btn btn-outline-light\" (click)=\"goToUsers()\">\n            <i class=\"bi bi-arrow-left\"></i> Back to Users\n          </button>\n        </div>\n        <div class=\"card-body\">\n          \n          <!-- Error and Success Messages -->\n          <div *ngIf=\"errorMessage\" class=\"alert alert-danger\">\n            {{ errorMessage }}\n          </div>\n          <div *ngIf=\"successMessage\" class=\"alert alert-success\">\n            {{ successMessage }}\n          </div>\n\n          <!-- Step 1: Email Input -->\n          <div *ngIf=\"currentStep === 'email'\" class=\"step-container\">\n            <form [formGroup]=\"changePasswordForm\" (ngSubmit)=\"onSendOtp()\">\n              <div class=\"form-group\">\n                <label for=\"email\">Email Address</label>\n                <input\n                  type=\"email\"\n                  id=\"email\"\n                  formControlName=\"email\"\n                  class=\"form-control\"\n                  placeholder=\"Enter your email address\"\n                  [class.is-invalid]=\"changePasswordForm.get('email')?.invalid && changePasswordForm.get('email')?.touched\"\n                />\n                <div *ngIf=\"changePasswordForm.get('email')?.invalid && changePasswordForm.get('email')?.touched\" class=\"invalid-feedback\">\n                  <div *ngIf=\"changePasswordForm.get('email')?.errors?.['required']\">Email is required</div>\n                  <div *ngIf=\"changePasswordForm.get('email')?.errors?.['email']\">Please enter a valid email address</div>\n                </div>\n              </div>\n\n              <div class=\"form-actions\">\n                <button\n                  type=\"submit\"\n                  class=\"btn btn-primary\"\n                  [disabled]=\"changePasswordForm.invalid || isLoading\"\n                >\n                  <span *ngIf=\"isLoading\" class=\"spinner-border spinner-border-sm me-2\"></span>\n                  {{ isLoading ? 'Sending OTP...' : 'Send OTP' }}\n                </button>\n                <button type=\"button\" class=\"btn btn-secondary\" (click)=\"goToUsers()\">\n                  Cancel\n                </button>\n              </div>\n            </form>\n          </div>\n\n          <!-- Step 2: OTP Verification and Password Change -->\n          <div *ngIf=\"currentStep === 'otp'\" class=\"step-container\">\n            <div class=\"email-info\">\n              <p>OTP sent to: <strong>{{ email }}</strong></p>\n            </div>\n\n            <form [formGroup]=\"verifyOtpForm\" (ngSubmit)=\"onVerifyOtp()\">\n              <div class=\"form-group\">\n                <label for=\"otp\">Enter OTP</label>\n                <input\n                  type=\"text\"\n                  id=\"otp\"\n                  formControlName=\"otp\"\n                  class=\"form-control\"\n                  placeholder=\"Enter 6-digit OTP\"\n                  maxlength=\"6\"\n                  [class.is-invalid]=\"verifyOtpForm.get('otp')?.invalid && verifyOtpForm.get('otp')?.touched\"\n                />\n                <div *ngIf=\"verifyOtpForm.get('otp')?.invalid && verifyOtpForm.get('otp')?.touched\" class=\"invalid-feedback\">\n                  <div *ngIf=\"verifyOtpForm.get('otp')?.errors?.['required']\">OTP is required</div>\n                  <div *ngIf=\"verifyOtpForm.get('otp')?.errors?.['minlength'] || verifyOtpForm.get('otp')?.errors?.['maxlength']\">OTP must be 6 digits</div>\n                </div>\n              </div>\n\n              <div class=\"form-group\">\n                <label for=\"newPassword\">New Password</label>\n                <input\n                  type=\"password\"\n                  id=\"newPassword\"\n                  formControlName=\"newPassword\"\n                  class=\"form-control\"\n                  placeholder=\"Enter new password\"\n                  [class.is-invalid]=\"verifyOtpForm.get('newPassword')?.invalid && verifyOtpForm.get('newPassword')?.touched\"\n                />\n                <div *ngIf=\"verifyOtpForm.get('newPassword')?.invalid && verifyOtpForm.get('newPassword')?.touched\" class=\"invalid-feedback\">\n                  <div *ngIf=\"verifyOtpForm.get('newPassword')?.errors?.['required']\">New password is required</div>\n                  <div *ngIf=\"verifyOtpForm.get('newPassword')?.errors?.['minlength']\">Password must be at least 6 characters</div>\n                </div>\n              </div>\n\n              <div class=\"form-group\">\n                <label for=\"confirmPassword\">Confirm New Password</label>\n                <input\n                  type=\"password\"\n                  id=\"confirmPassword\"\n                  formControlName=\"confirmPassword\"\n                  class=\"form-control\"\n                  placeholder=\"Confirm new password\"\n                  [class.is-invalid]=\"verifyOtpForm.get('confirmPassword')?.invalid && verifyOtpForm.get('confirmPassword')?.touched\"\n                />\n                <div *ngIf=\"verifyOtpForm.get('confirmPassword')?.invalid && verifyOtpForm.get('confirmPassword')?.touched\" class=\"invalid-feedback\">\n                  <div *ngIf=\"verifyOtpForm.get('confirmPassword')?.errors?.['required']\">Confirm password is required</div>\n                </div>\n                <div *ngIf=\"verifyOtpForm.errors?.['passwordMismatch'] && verifyOtpForm.get('confirmPassword')?.touched\" class=\"invalid-feedback\">\n                  Passwords do not match\n                </div>\n              </div>\n\n              <div class=\"form-actions\">\n                <button\n                  type=\"submit\"\n                  class=\"btn btn-primary\"\n                  [disabled]=\"verifyOtpForm.invalid || isLoading\"\n                >\n                  <span *ngIf=\"isLoading\" class=\"spinner-border spinner-border-sm me-2\"></span>\n                  {{ isLoading ? 'Changing Password...' : 'Change Password' }}\n                </button>\n                <button type=\"button\" class=\"btn btn-secondary\" (click)=\"goBack()\">\n                  Back\n                </button>\n                <button type=\"button\" class=\"btn btn-outline-primary\" (click)=\"resendOtp()\" [disabled]=\"isLoading\">\n                  Resend OTP\n                </button>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div> ","import { Component } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../../services/auth.service';\n\n@Component({\n  selector: 'app-forget-password',\n  templateUrl: './forget-password.component.html',\n  styleUrls: ['./forget-password.component.css']\n})\nexport class ForgetPasswordComponent {\n  forgetPasswordForm: FormGroup;\n  verifyOtpForm: FormGroup;\n  currentStep: 'email' | 'otp' | 'password' = 'email';\n  isLoading = false;\n  errorMessage = '';\n  successMessage = '';\n  email = '';\n\n  constructor(\n    private fb: FormBuilder,\n    private authService: AuthService,\n    private router: Router\n  ) {\n    this.forgetPasswordForm = this.fb.group({\n      email: ['', [Validators.required, Validators.email]]\n    });\n\n    this.verifyOtpForm = this.fb.group({\n      otp: ['', [Validators.required, Validators.minLength(6), Validators.maxLength(6)]],\n      newPassword: ['', [Validators.required, Validators.minLength(6)]],\n      confirmPassword: ['', [Validators.required]]\n    }, { validators: this.passwordMatchValidator });\n  }\n\n  passwordMatchValidator(form: FormGroup) {\n    const newPassword = form.get('newPassword')?.value;\n    const confirmPassword = form.get('confirmPassword')?.value;\n    return newPassword === confirmPassword ? null : { passwordMismatch: true };\n  }\n\n  onSendOtp() {\n    if (this.forgetPasswordForm.valid) {\n      this.isLoading = true;\n      this.errorMessage = '';\n      this.email = this.forgetPasswordForm.get('email')?.value;\n\n      this.authService.forgetPassword({ email: this.email }).subscribe({\n        next: (response) => {\n          this.isLoading = false;\n          if (response.success) {\n            this.successMessage = 'OTP sent successfully to your email!';\n            this.currentStep = 'otp';\n            setTimeout(() => {\n              this.successMessage = '';\n            }, 3000);\n          } else {\n            this.errorMessage = response.message || 'Failed to send OTP';\n          }\n        },\n        error: (error) => {\n          this.isLoading = false;\n          this.errorMessage = error.error?.message || 'Failed to send OTP. Please try again.';\n        }\n      });\n    }\n  }\n\n  onVerifyOtp() {\n    if (this.verifyOtpForm.valid) {\n      this.isLoading = true;\n      this.errorMessage = '';\n\n      const verifyOtpRequest = {\n        email: this.email,\n        otp: this.verifyOtpForm.get('otp')?.value,\n        newPassword: this.verifyOtpForm.get('newPassword')?.value,\n        confirmPassword: this.verifyOtpForm.get('confirmPassword')?.value\n      };\n\n      this.authService.verifyOtpAndResetPassword(verifyOtpRequest).subscribe({\n        next: (response) => {\n          this.isLoading = false;\n          if (response.success) {\n            this.successMessage = 'Password reset successfully! Redirecting to login...';\n            setTimeout(() => {\n              this.router.navigate(['/login']);\n            }, 2000);\n          } else {\n            this.errorMessage = response.message || 'Failed to reset password';\n          }\n        },\n        error: (error) => {\n          this.isLoading = false;\n          this.errorMessage = error.error?.message || 'Failed to reset password. Please try again.';\n        }\n      });\n    }\n  }\n\n  goBack() {\n    if (this.currentStep === 'otp') {\n      this.currentStep = 'email';\n      this.verifyOtpForm.reset();\n    }\n  }\n\n  resendOtp() {\n    this.onSendOtp();\n  }\n\n  goToLogin() {\n    this.router.navigate(['/login']);\n  }\n} ","<div class=\"forget-password-container\">\n  <div class=\"forget-password-card\">\n    <div class=\"header\">\n      <h2>Forgot Password</h2>\n      <p>Enter your email to reset your password</p>\n    </div>\n\n    <!-- Error and Success Messages -->\n    <div *ngIf=\"errorMessage\" class=\"alert alert-danger\">\n      {{ errorMessage }}\n    </div>\n    <div *ngIf=\"successMessage\" class=\"alert alert-success\">\n      {{ successMessage }}\n    </div>\n\n    <!-- Step 1: Email Input -->\n    <div *ngIf=\"currentStep === 'email'\" class=\"step-container\">\n      <form [formGroup]=\"forgetPasswordForm\" (ngSubmit)=\"onSendOtp()\">\n        <div class=\"form-group\">\n          <label for=\"email\">Email Address</label>\n          <input\n            type=\"email\"\n            id=\"email\"\n            formControlName=\"email\"\n            class=\"form-control\"\n            placeholder=\"Enter your email address\"\n            [class.is-invalid]=\"forgetPasswordForm.get('email')?.invalid && forgetPasswordForm.get('email')?.touched\"\n          />\n          <div *ngIf=\"forgetPasswordForm.get('email')?.invalid && forgetPasswordForm.get('email')?.touched\" class=\"invalid-feedback\">\n            <div *ngIf=\"forgetPasswordForm.get('email')?.errors?.['required']\">Email is required</div>\n            <div *ngIf=\"forgetPasswordForm.get('email')?.errors?.['email']\">Please enter a valid email address</div>\n          </div>\n        </div>\n\n        <div class=\"form-actions\">\n          <button\n            type=\"submit\"\n            class=\"btn btn-primary\"\n            [disabled]=\"forgetPasswordForm.invalid || isLoading\"\n          >\n            <span *ngIf=\"isLoading\" class=\"spinner-border spinner-border-sm me-2\"></span>\n            {{ isLoading ? 'Sending OTP...' : 'Send OTP' }}\n          </button>\n          <button type=\"button\" class=\"btn btn-secondary\" (click)=\"goToLogin()\">\n            Back to Login\n          </button>\n        </div>\n      </form>\n    </div>\n\n    <!-- Step 2: OTP Verification and Password Reset -->\n    <div *ngIf=\"currentStep === 'otp'\" class=\"step-container\">\n      <div class=\"email-info\">\n        <p>OTP sent to: <strong>{{ email }}</strong></p>\n      </div>\n\n      <form [formGroup]=\"verifyOtpForm\" (ngSubmit)=\"onVerifyOtp()\">\n        <div class=\"form-group\">\n          <label for=\"otp\">Enter OTP</label>\n          <input\n            type=\"text\"\n            id=\"otp\"\n            formControlName=\"otp\"\n            class=\"form-control\"\n            placeholder=\"Enter 6-digit OTP\"\n            maxlength=\"6\"\n            [class.is-invalid]=\"verifyOtpForm.get('otp')?.invalid && verifyOtpForm.get('otp')?.touched\"\n          />\n          <div *ngIf=\"verifyOtpForm.get('otp')?.invalid && verifyOtpForm.get('otp')?.touched\" class=\"invalid-feedback\">\n            <div *ngIf=\"verifyOtpForm.get('otp')?.errors?.['required']\">OTP is required</div>\n            <div *ngIf=\"verifyOtpForm.get('otp')?.errors?.['minlength'] || verifyOtpForm.get('otp')?.errors?.['maxlength']\">OTP must be 6 digits</div>\n          </div>\n        </div>\n\n        <div class=\"form-group\">\n          <label for=\"newPassword\">New Password</label>\n          <input\n            type=\"password\"\n            id=\"newPassword\"\n            formControlName=\"newPassword\"\n            class=\"form-control\"\n            placeholder=\"Enter new password\"\n            [class.is-invalid]=\"verifyOtpForm.get('newPassword')?.invalid && verifyOtpForm.get('newPassword')?.touched\"\n          />\n          <div *ngIf=\"verifyOtpForm.get('newPassword')?.invalid && verifyOtpForm.get('newPassword')?.touched\" class=\"invalid-feedback\">\n            <div *ngIf=\"verifyOtpForm.get('newPassword')?.errors?.['required']\">New password is required</div>\n            <div *ngIf=\"verifyOtpForm.get('newPassword')?.errors?.['minlength']\">Password must be at least 6 characters</div>\n          </div>\n        </div>\n\n        <div class=\"form-group\">\n          <label for=\"confirmPassword\">Confirm New Password</label>\n          <input\n            type=\"password\"\n            id=\"confirmPassword\"\n            formControlName=\"confirmPassword\"\n            class=\"form-control\"\n            placeholder=\"Confirm new password\"\n            [class.is-invalid]=\"verifyOtpForm.get('confirmPassword')?.invalid && verifyOtpForm.get('confirmPassword')?.touched\"\n          />\n          <div *ngIf=\"verifyOtpForm.get('confirmPassword')?.invalid && verifyOtpForm.get('confirmPassword')?.touched\" class=\"invalid-feedback\">\n            <div *ngIf=\"verifyOtpForm.get('confirmPassword')?.errors?.['required']\">Confirm password is required</div>\n          </div>\n          <div *ngIf=\"verifyOtpForm.errors?.['passwordMismatch'] && verifyOtpForm.get('confirmPassword')?.touched\" class=\"invalid-feedback\">\n            Passwords do not match\n          </div>\n        </div>\n\n        <div class=\"form-actions\">\n          <button\n            type=\"submit\"\n            class=\"btn btn-primary\"\n            [disabled]=\"verifyOtpForm.invalid || isLoading\"\n          >\n            <span *ngIf=\"isLoading\" class=\"spinner-border spinner-border-sm me-2\"></span>\n            {{ isLoading ? 'Resetting Password...' : 'Reset Password' }}\n          </button>\n          <button type=\"button\" class=\"btn btn-secondary\" (click)=\"goBack()\">\n            Back\n          </button>\n          <button type=\"button\" class=\"btn btn-link\" (click)=\"resendOtp()\" [disabled]=\"isLoading\">\n            Resend OTP\n          </button>\n        </div>\n      </form>\n    </div>\n  </div>\n</div> ","import { Component } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../../services/auth.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent {\n  loginForm: FormGroup;\n  loading = false;\n  errorMessage = '';\n  successMessage = '';\n\n  constructor(\n    private fb: FormBuilder,\n    private authService: AuthService,\n    private router: Router\n  ) {\n    this.loginForm = this.fb.group({\n      usernameOrEmail: ['', [Validators.required]],\n      password: ['', [Validators.required, Validators.minLength(6)]]\n    });\n  }\n\n  onSubmit(): void {\n    if (this.loginForm.valid) {\n      this.loading = true;\n      this.errorMessage = '';\n      this.successMessage = '';\n\n      this.authService.login(this.loginForm.value).subscribe({\n        next: (response) => {\n          if (response.success) {\n            this.authService.setUserData(response.data!);\n            this.successMessage = 'Login successful!';\n            setTimeout(() => {\n              this.router.navigate(['/dashboard']);\n            }, 1000);\n          } else {\n            this.errorMessage = response.message;\n          }\n          this.loading = false;\n        },\n        error: (error) => {\n          this.errorMessage = error.error?.message || 'Login failed. Please try again.';\n          this.loading = false;\n        }\n      });\n    }\n  }\n\n  getErrorMessage(field: string): string {\n    const control = this.loginForm.get(field);\n    if (control?.hasError('required')) {\n      return `${field.charAt(0).toUpperCase() + field.slice(1)} is required`;\n    }\n    if (control?.hasError('minlength')) {\n      return `${field.charAt(0).toUpperCase() + field.slice(1)} must be at least 6 characters`;\n    }\n    return '';\n  }\n} ","<div class=\"container mt-5\">\n  <div class=\"row justify-content-center\">\n    <div class=\"col-md-6 col-lg-4\">\n      <div class=\"card shadow\">\n        <div class=\"card-header bg-primary text-white text-center\">\n          <h4 class=\"mb-0\">Login</h4>\n        </div>\n        <div class=\"card-body\">\n          <form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\">\n            \n            <!-- Username or Email -->\n            <div class=\"mb-3\">\n              <label for=\"usernameOrEmail\" class=\"form-label\">Username or Email</label>\n              <input \n                type=\"text\" \n                class=\"form-control\" \n                id=\"usernameOrEmail\"\n                formControlName=\"usernameOrEmail\"\n                [class.is-invalid]=\"loginForm.get('usernameOrEmail')?.invalid && loginForm.get('usernameOrEmail')?.touched\"\n                placeholder=\"Enter username or email\">\n              <div class=\"invalid-feedback\" *ngIf=\"loginForm.get('usernameOrEmail')?.invalid && loginForm.get('usernameOrEmail')?.touched\">\n                {{ getErrorMessage('usernameOrEmail') }}\n              </div>\n            </div>\n\n            <!-- Password -->\n            <div class=\"mb-3\">\n              <label for=\"password\" class=\"form-label\">Password</label>\n              <input \n                type=\"password\" \n                class=\"form-control\" \n                id=\"password\"\n                formControlName=\"password\"\n                [class.is-invalid]=\"loginForm.get('password')?.invalid && loginForm.get('password')?.touched\"\n                placeholder=\"Enter password\">\n              <div class=\"invalid-feedback\" *ngIf=\"loginForm.get('password')?.invalid && loginForm.get('password')?.touched\">\n                {{ getErrorMessage('password') }}\n              </div>\n            </div>\n\n            <!-- Error Message -->\n            <div class=\"alert alert-danger\" *ngIf=\"errorMessage\">\n              {{ errorMessage }}\n            </div>\n\n            <!-- Success Message -->\n            <div class=\"alert alert-success\" *ngIf=\"successMessage\">\n              {{ successMessage }}\n            </div>\n\n            <!-- Submit Button -->\n            <div class=\"d-grid\">\n              <button \n                type=\"submit\" \n                class=\"btn btn-primary\"\n                [disabled]=\"loginForm.invalid || loading\">\n                <span class=\"spinner-border spinner-border-sm me-2\" *ngIf=\"loading\"></span>\n                {{ loading ? 'Logging in...' : 'Login' }}\n              </button>\n            </div>\n\n          </form>\n\n          <!-- Links -->\n          <div class=\"mt-3 text-center\">\n            <a routerLink=\"/register\" class=\"text-decoration-none\">Don't have an account? Register</a>\n          </div>\n          <div class=\"mt-2 text-center\">\n            <a routerLink=\"/forget-password\" class=\"text-decoration-none\">Forgot Password?</a>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div> ","import { Component } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../../services/auth.service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent {\n  registerForm: FormGroup;\n  loading = false;\n  errorMessage = '';\n  successMessage = '';\n\n  constructor(\n    private fb: FormBuilder,\n    private authService: AuthService,\n    private router: Router\n  ) {\n    this.registerForm = this.fb.group({\n      username: ['', [Validators.required, Validators.minLength(3), Validators.maxLength(50)]],\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required, Validators.minLength(6)]],\n      confirmPassword: ['', [Validators.required]],\n      firstName: ['', [Validators.maxLength(50)]],\n      lastName: ['', [Validators.maxLength(50)]]\n    }, { validators: this.passwordMatchValidator });\n  }\n\n  passwordMatchValidator(form: FormGroup) {\n    const password = form.get('password');\n    const confirmPassword = form.get('confirmPassword');\n    \n    if (password && confirmPassword && password.value !== confirmPassword.value) {\n      confirmPassword.setErrors({ passwordMismatch: true });\n      return { passwordMismatch: true };\n    }\n    \n    if (confirmPassword?.errors?.['passwordMismatch']) {\n      delete confirmPassword.errors['passwordMismatch'];\n      if (Object.keys(confirmPassword.errors).length === 0) {\n        confirmPassword.setErrors(null);\n      }\n    }\n    \n    return null;\n  }\n\n  onSubmit(): void {\n    if (this.registerForm.valid) {\n      this.loading = true;\n      this.errorMessage = '';\n      this.successMessage = '';\n\n      this.authService.register(this.registerForm.value).subscribe({\n        next: (response) => {\n          if (response.success) {\n            this.successMessage = 'Registration successful! Please login.';\n            setTimeout(() => {\n              this.router.navigate(['/login']);\n            }, 2000);\n          } else {\n            this.errorMessage = response.message;\n          }\n          this.loading = false;\n        },\n        error: (error) => {\n          this.errorMessage = error.error?.message || 'Registration failed. Please try again.';\n          this.loading = false;\n        }\n      });\n    }\n  }\n\n  getErrorMessage(field: string): string {\n    const control = this.registerForm.get(field);\n    if (control?.hasError('required')) {\n      return `${field.charAt(0).toUpperCase() + field.slice(1)} is required`;\n    }\n    if (control?.hasError('email')) {\n      return 'Please enter a valid email address';\n    }\n    if (control?.hasError('minlength')) {\n      const minLength = control.errors?.['minlength']?.requiredLength;\n      return `${field.charAt(0).toUpperCase() + field.slice(1)} must be at least ${minLength} characters`;\n    }\n    if (control?.hasError('maxlength')) {\n      const maxLength = control.errors?.['maxlength']?.requiredLength;\n      return `${field.charAt(0).toUpperCase() + field.slice(1)} cannot exceed ${maxLength} characters`;\n    }\n    if (control?.hasError('passwordMismatch')) {\n      return 'Passwords do not match';\n    }\n    return '';\n  }\n} ","<div class=\"container mt-5\">\n  <div class=\"row justify-content-center\">\n    <div class=\"col-md-8 col-lg-6\">\n      <div class=\"card shadow\">\n        <div class=\"card-header bg-success text-white text-center\">\n          <h4 class=\"mb-0\">Register</h4>\n        </div>\n        <div class=\"card-body\">\n          <form [formGroup]=\"registerForm\" (ngSubmit)=\"onSubmit()\">\n            \n            <div class=\"row\">\n              <!-- Username -->\n              <div class=\"col-md-6 mb-3\">\n                <label for=\"username\" class=\"form-label\">Username *</label>\n                <input \n                  type=\"text\" \n                  class=\"form-control\" \n                  id=\"username\"\n                  formControlName=\"username\"\n                  [class.is-invalid]=\"registerForm.get('username')?.invalid && registerForm.get('username')?.touched\"\n                  placeholder=\"Enter username\">\n                <div class=\"invalid-feedback\" *ngIf=\"registerForm.get('username')?.invalid && registerForm.get('username')?.touched\">\n                  {{ getErrorMessage('username') }}\n                </div>\n              </div>\n\n              <!-- Email -->\n              <div class=\"col-md-6 mb-3\">\n                <label for=\"email\" class=\"form-label\">Email *</label>\n                <input \n                  type=\"email\" \n                  class=\"form-control\" \n                  id=\"email\"\n                  formControlName=\"email\"\n                  [class.is-invalid]=\"registerForm.get('email')?.invalid && registerForm.get('email')?.touched\"\n                  placeholder=\"Enter email\">\n                <div class=\"invalid-feedback\" *ngIf=\"registerForm.get('email')?.invalid && registerForm.get('email')?.touched\">\n                  {{ getErrorMessage('email') }}\n                </div>\n              </div>\n            </div>\n\n            <div class=\"row\">\n              <!-- First Name -->\n              <div class=\"col-md-6 mb-3\">\n                <label for=\"firstName\" class=\"form-label\">First Name</label>\n                <input \n                  type=\"text\" \n                  class=\"form-control\" \n                  id=\"firstName\"\n                  formControlName=\"firstName\"\n                  [class.is-invalid]=\"registerForm.get('firstName')?.invalid && registerForm.get('firstName')?.touched\"\n                  placeholder=\"Enter first name\">\n                <div class=\"invalid-feedback\" *ngIf=\"registerForm.get('firstName')?.invalid && registerForm.get('firstName')?.touched\">\n                  {{ getErrorMessage('firstName') }}\n                </div>\n              </div>\n\n              <!-- Last Name -->\n              <div class=\"col-md-6 mb-3\">\n                <label for=\"lastName\" class=\"form-label\">Last Name</label>\n                <input \n                  type=\"text\" \n                  class=\"form-control\" \n                  id=\"lastName\"\n                  formControlName=\"lastName\"\n                  [class.is-invalid]=\"registerForm.get('lastName')?.invalid && registerForm.get('lastName')?.touched\"\n                  placeholder=\"Enter last name\">\n                <div class=\"invalid-feedback\" *ngIf=\"registerForm.get('lastName')?.invalid && registerForm.get('lastName')?.touched\">\n                  {{ getErrorMessage('lastName') }}\n                </div>\n              </div>\n            </div>\n\n            <div class=\"row\">\n              <!-- Password -->\n              <div class=\"col-md-6 mb-3\">\n                <label for=\"password\" class=\"form-label\">Password *</label>\n                <input \n                  type=\"password\" \n                  class=\"form-control\" \n                  id=\"password\"\n                  formControlName=\"password\"\n                  [class.is-invalid]=\"registerForm.get('password')?.invalid && registerForm.get('password')?.touched\"\n                  placeholder=\"Enter password\">\n                <div class=\"invalid-feedback\" *ngIf=\"registerForm.get('password')?.invalid && registerForm.get('password')?.touched\">\n                  {{ getErrorMessage('password') }}\n                </div>\n              </div>\n\n              <!-- Confirm Password -->\n              <div class=\"col-md-6 mb-3\">\n                <label for=\"confirmPassword\" class=\"form-label\">Confirm Password *</label>\n                <input \n                  type=\"password\" \n                  class=\"form-control\" \n                  id=\"confirmPassword\"\n                  formControlName=\"confirmPassword\"\n                  [class.is-invalid]=\"registerForm.get('confirmPassword')?.invalid && registerForm.get('confirmPassword')?.touched\"\n                  placeholder=\"Confirm password\">\n                <div class=\"invalid-feedback\" *ngIf=\"registerForm.get('confirmPassword')?.invalid && registerForm.get('confirmPassword')?.touched\">\n                  {{ getErrorMessage('confirmPassword') }}\n                </div>\n              </div>\n            </div>\n\n            <!-- Error Message -->\n            <div class=\"alert alert-danger\" *ngIf=\"errorMessage\">\n              {{ errorMessage }}\n            </div>\n\n            <!-- Success Message -->\n            <div class=\"alert alert-success\" *ngIf=\"successMessage\">\n              {{ successMessage }}\n            </div>\n\n            <!-- Submit Button -->\n            <div class=\"d-grid\">\n              <button \n                type=\"submit\" \n                class=\"btn btn-success\"\n                [disabled]=\"registerForm.invalid || loading\">\n                <span class=\"spinner-border spinner-border-sm me-2\" *ngIf=\"loading\"></span>\n                {{ loading ? 'Registering...' : 'Register' }}\n              </button>\n            </div>\n\n          </form>\n\n          <!-- Link to Login -->\n          <div class=\"mt-3 text-center\">\n            <a routerLink=\"/login\" class=\"text-decoration-none\">Already have an account? Login</a>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div> ","import { Component } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { UserService } from '../../services/user.service';\n\n@Component({\n  selector: 'app-user-create',\n  templateUrl: './user-create.component.html',\n  styleUrls: ['./user-create.component.css']\n})\nexport class UserCreateComponent {\n  userForm: FormGroup;\n  loading = false;\n  errorMessage = '';\n  successMessage = '';\n\n  constructor(\n    private fb: FormBuilder,\n    private userService: UserService,\n    private router: Router\n  ) {\n    this.userForm = this.fb.group({\n      firstName: ['', [Validators.required]],\n      lastName: ['', [Validators.required]],\n      email: ['', [Validators.required, Validators.email]],\n      phoneNumber: ['', [Validators.required, Validators.minLength(10), Validators.maxLength(15)]],\n      address: ['']\n    });\n  }\n\n  onSubmit(): void {\n    if (this.userForm.valid) {\n      this.loading = true;\n      this.errorMessage = '';\n\n      const userData = this.userForm.value;\n      this.userService.createUser(userData).subscribe({\n        next: (response) => {\n          if (response.success) {\n            this.successMessage = 'User created successfully!';\n            setTimeout(() => {\n              this.router.navigate(['/users']);\n            }, 2000);\n          } else {\n            this.errorMessage = response.message || 'Failed to create user';\n          }\n          this.loading = false;\n        },\n        error: (error) => {\n          this.errorMessage = error.error?.message || 'Failed to create user';\n          this.loading = false;\n        }\n      });\n    }\n  }\n\n  onCancel(): void {\n    this.router.navigate(['/users']);\n  }\n\n  getErrorMessage(fieldName: string): string {\n    const field = this.userForm.get(fieldName);\n    if (field?.errors) {\n      if (field.errors['required']) {\n        return `${fieldName.charAt(0).toUpperCase() + fieldName.slice(1)} is required`;\n      }\n      if (field.errors['email']) {\n        return 'Please enter a valid email address';\n      }\n      if (field.errors['minlength']) {\n        return `${fieldName.charAt(0).toUpperCase() + fieldName.slice(1)} must be at least ${field.errors['minlength'].requiredLength} characters`;\n      }\n      if (field.errors['maxlength']) {\n        return `${fieldName.charAt(0).toUpperCase() + fieldName.slice(1)} cannot exceed ${field.errors['maxlength'].requiredLength} characters`;\n      }\n    }\n    return '';\n  }\n} ","<div class=\"container mt-4\">\n  <div class=\"row justify-content-center\">\n    <div class=\"col-md-8\">\n      <div class=\"card shadow\">\n        <div class=\"card-header bg-success text-white d-flex justify-content-between align-items-center\">\n          <h4 class=\"mb-0\">Create New User</h4>\n          <button class=\"btn btn-light\" (click)=\"onCancel()\">\n            <i class=\"bi bi-arrow-left\"></i> Back to Users\n          </button>\n        </div>\n        <div class=\"card-body\">\n          \n          <!-- Error Message -->\n          <div class=\"alert alert-danger\" *ngIf=\"errorMessage\">\n            {{ errorMessage }}\n          </div>\n\n          <!-- Success Message -->\n          <div class=\"alert alert-success\" *ngIf=\"successMessage\">\n            {{ successMessage }}\n          </div>\n\n          <!-- Create Form -->\n          <form [formGroup]=\"userForm\" (ngSubmit)=\"onSubmit()\">\n            \n            <div class=\"row\">\n              <!-- First Name -->\n              <div class=\"col-md-6 mb-3\">\n                <label for=\"firstName\" class=\"form-label\">First Name *</label>\n                <input \n                  type=\"text\" \n                  class=\"form-control\" \n                  id=\"firstName\"\n                  formControlName=\"firstName\"\n                  [class.is-invalid]=\"userForm.get('firstName')?.invalid && userForm.get('firstName')?.touched\"\n                  placeholder=\"Enter first name\">\n                <div class=\"invalid-feedback\" *ngIf=\"userForm.get('firstName')?.invalid && userForm.get('firstName')?.touched\">\n                  {{ getErrorMessage('firstName') }}\n                </div>\n              </div>\n\n              <!-- Last Name -->\n              <div class=\"col-md-6 mb-3\">\n                <label for=\"lastName\" class=\"form-label\">Last Name *</label>\n                <input \n                  type=\"text\" \n                  class=\"form-control\" \n                  id=\"lastName\"\n                  formControlName=\"lastName\"\n                  [class.is-invalid]=\"userForm.get('lastName')?.invalid && userForm.get('lastName')?.touched\"\n                  placeholder=\"Enter last name\">\n                <div class=\"invalid-feedback\" *ngIf=\"userForm.get('lastName')?.invalid && userForm.get('lastName')?.touched\">\n                  {{ getErrorMessage('lastName') }}\n                </div>\n              </div>\n            </div>\n\n            <!-- Email -->\n            <div class=\"mb-3\">\n              <label for=\"email\" class=\"form-label\">Email *</label>\n              <input \n                type=\"email\" \n                class=\"form-control\" \n                id=\"email\"\n                formControlName=\"email\"\n                [class.is-invalid]=\"userForm.get('email')?.invalid && userForm.get('email')?.touched\"\n                placeholder=\"Enter email address\">\n              <div class=\"invalid-feedback\" *ngIf=\"userForm.get('email')?.invalid && userForm.get('email')?.touched\">\n                {{ getErrorMessage('email') }}\n              </div>\n            </div>\n\n            <!-- Phone Number -->\n            <div class=\"mb-3\">\n              <label for=\"phoneNumber\" class=\"form-label\">Phone Number *</label>\n              <input \n                type=\"tel\" \n                class=\"form-control\" \n                id=\"phoneNumber\"\n                formControlName=\"phoneNumber\"\n                [class.is-invalid]=\"userForm.get('phoneNumber')?.invalid && userForm.get('phoneNumber')?.touched\"\n                placeholder=\"Enter phone number (10-15 digits)\">\n              <div class=\"invalid-feedback\" *ngIf=\"userForm.get('phoneNumber')?.invalid && userForm.get('phoneNumber')?.touched\">\n                {{ getErrorMessage('phoneNumber') }}\n              </div>\n            </div>\n\n            <!-- Address -->\n            <div class=\"mb-3\">\n              <label for=\"address\" class=\"form-label\">Address</label>\n              <textarea \n                class=\"form-control\" \n                id=\"address\"\n                formControlName=\"address\"\n                rows=\"3\"\n                placeholder=\"Enter address\"></textarea>\n            </div>\n\n            <!-- Form Actions -->\n            <div class=\"d-flex gap-2\">\n              <button \n                type=\"submit\" \n                class=\"btn btn-success\"\n                [disabled]=\"userForm.invalid || loading\">\n                <span class=\"spinner-border spinner-border-sm me-2\" *ngIf=\"loading\"></span>\n                {{ loading ? 'Creating...' : 'Create User' }}\n              </button>\n              <button \n                type=\"button\" \n                class=\"btn btn-secondary\"\n                (click)=\"onCancel()\"\n                [disabled]=\"loading\">\n                Cancel\n              </button>\n            </div>\n\n          </form>\n\n        </div>\n      </div>\n    </div>\n  </div>\n</div> ","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { UserService } from '../../services/user.service';\nimport { User } from '../../models/user.model';\n\n@Component({\n  selector: 'app-user-edit',\n  templateUrl: './user-edit.component.html',\n  styleUrls: ['./user-edit.component.css']\n})\nexport class UserEditComponent implements OnInit {\n  userForm: FormGroup;\n  userId: number | null = null;\n  loading = false;\n  errorMessage = '';\n  successMessage = '';\n\n  constructor(\n    private fb: FormBuilder,\n    private userService: UserService,\n    private route: ActivatedRoute,\n    private router: Router\n  ) {\n    this.userForm = this.fb.group({\n      firstName: ['', [Validators.required]],\n      lastName: ['', [Validators.required]],\n      email: ['', [Validators.required, Validators.email]],\n      phoneNumber: ['', [Validators.required, Validators.minLength(10), Validators.maxLength(15)]],\n      address: ['']\n    });\n  }\n\n  ngOnInit(): void {\n    this.route.params.subscribe(params => {\n      this.userId = +params['id'];\n      if (this.userId) {\n        this.loadUser();\n      }\n    });\n  }\n\n  loadUser(): void {\n    if (!this.userId) return;\n\n    this.loading = true;\n    this.userService.getUserById(this.userId).subscribe({\n      next: (response) => {\n        if (response.success && response.data) {\n          const user = response.data;\n          this.userForm.patchValue({\n            firstName: user.firstName,\n            lastName: user.lastName,\n            email: user.email,\n            phoneNumber: user.phoneNumber || '',\n            address: user.address || ''\n          });\n        } else {\n          this.errorMessage = response.message || 'Failed to load user';\n        }\n        this.loading = false;\n      },\n      error: (error) => {\n        this.errorMessage = error.error?.message || 'Failed to load user';\n        this.loading = false;\n      }\n    });\n  }\n\n  onSubmit(): void {\n    if (this.userForm.valid && this.userId) {\n      this.loading = true;\n      this.errorMessage = '';\n\n      const updateData = this.userForm.value;\n      this.userService.updateUser(this.userId, updateData).subscribe({\n        next: (response) => {\n          if (response.success) {\n            this.successMessage = 'User updated successfully!';\n            setTimeout(() => {\n              this.router.navigate(['/users']);\n            }, 2000);\n          } else {\n            this.errorMessage = response.message || 'Failed to update user';\n          }\n          this.loading = false;\n        },\n        error: (error) => {\n          this.errorMessage = error.error?.message || 'Failed to update user';\n          this.loading = false;\n        }\n      });\n    }\n  }\n\n  onCancel(): void {\n    this.router.navigate(['/users']);\n  }\n\n  getErrorMessage(fieldName: string): string {\n    const field = this.userForm.get(fieldName);\n    if (field?.errors) {\n      if (field.errors['required']) {\n        return `${fieldName.charAt(0).toUpperCase() + fieldName.slice(1)} is required`;\n      }\n      if (field.errors['email']) {\n        return 'Please enter a valid email address';\n      }\n      if (field.errors['minlength']) {\n        return `${fieldName.charAt(0).toUpperCase() + fieldName.slice(1)} must be at least ${field.errors['minlength'].requiredLength} characters`;\n      }\n      if (field.errors['maxlength']) {\n        return `${fieldName.charAt(0).toUpperCase() + fieldName.slice(1)} cannot exceed ${field.errors['maxlength'].requiredLength} characters`;\n      }\n    }\n    return '';\n  }\n} ","<div class=\"container mt-4\">\n  <div class=\"row justify-content-center\">\n    <div class=\"col-md-8\">\n      <div class=\"card shadow\">\n        <div class=\"card-header bg-primary text-white d-flex justify-content-between align-items-center\">\n          <h4 class=\"mb-0\">Edit User</h4>\n          <button class=\"btn btn-light\" (click)=\"onCancel()\">\n            <i class=\"bi bi-arrow-left\"></i> Back to Users\n          </button>\n        </div>\n        <div class=\"card-body\">\n          \n          <!-- Error Message -->\n          <div class=\"alert alert-danger\" *ngIf=\"errorMessage\">\n            {{ errorMessage }}\n          </div>\n\n          <!-- Success Message -->\n          <div class=\"alert alert-success\" *ngIf=\"successMessage\">\n            {{ successMessage }}\n          </div>\n\n          <!-- Loading Spinner -->\n          <div class=\"text-center\" *ngIf=\"loading && !errorMessage\">\n            <div class=\"spinner-border text-primary\" role=\"status\">\n              <span class=\"visually-hidden\">Loading...</span>\n            </div>\n          </div>\n\n          <!-- Edit Form -->\n          <form [formGroup]=\"userForm\" (ngSubmit)=\"onSubmit()\" *ngIf=\"!loading || errorMessage\">\n            \n            <div class=\"row\">\n              <!-- First Name -->\n              <div class=\"col-md-6 mb-3\">\n                <label for=\"firstName\" class=\"form-label\">First Name *</label>\n                <input \n                  type=\"text\" \n                  class=\"form-control\" \n                  id=\"firstName\"\n                  formControlName=\"firstName\"\n                  [class.is-invalid]=\"userForm.get('firstName')?.invalid && userForm.get('firstName')?.touched\"\n                  placeholder=\"Enter first name\">\n                <div class=\"invalid-feedback\" *ngIf=\"userForm.get('firstName')?.invalid && userForm.get('firstName')?.touched\">\n                  {{ getErrorMessage('firstName') }}\n                </div>\n              </div>\n\n              <!-- Last Name -->\n              <div class=\"col-md-6 mb-3\">\n                <label for=\"lastName\" class=\"form-label\">Last Name *</label>\n                <input \n                  type=\"text\" \n                  class=\"form-control\" \n                  id=\"lastName\"\n                  formControlName=\"lastName\"\n                  [class.is-invalid]=\"userForm.get('lastName')?.invalid && userForm.get('lastName')?.touched\"\n                  placeholder=\"Enter last name\">\n                <div class=\"invalid-feedback\" *ngIf=\"userForm.get('lastName')?.invalid && userForm.get('lastName')?.touched\">\n                  {{ getErrorMessage('lastName') }}\n                </div>\n              </div>\n            </div>\n\n            <!-- Email -->\n            <div class=\"mb-3\">\n              <label for=\"email\" class=\"form-label\">Email *</label>\n              <input \n                type=\"email\" \n                class=\"form-control\" \n                id=\"email\"\n                formControlName=\"email\"\n                [class.is-invalid]=\"userForm.get('email')?.invalid && userForm.get('email')?.touched\"\n                placeholder=\"Enter email address\">\n              <div class=\"invalid-feedback\" *ngIf=\"userForm.get('email')?.invalid && userForm.get('email')?.touched\">\n                {{ getErrorMessage('email') }}\n              </div>\n            </div>\n\n            <!-- Phone Number -->\n            <div class=\"mb-3\">\n              <label for=\"phoneNumber\" class=\"form-label\">Phone Number *</label>\n              <input \n                type=\"tel\" \n                class=\"form-control\" \n                id=\"phoneNumber\"\n                formControlName=\"phoneNumber\"\n                [class.is-invalid]=\"userForm.get('phoneNumber')?.invalid && userForm.get('phoneNumber')?.touched\"\n                placeholder=\"Enter phone number (10-15 digits)\">\n              <div class=\"invalid-feedback\" *ngIf=\"userForm.get('phoneNumber')?.invalid && userForm.get('phoneNumber')?.touched\">\n                {{ getErrorMessage('phoneNumber') }}\n              </div>\n            </div>\n\n            <!-- Address -->\n            <div class=\"mb-3\">\n              <label for=\"address\" class=\"form-label\">Address</label>\n              <textarea \n                class=\"form-control\" \n                id=\"address\"\n                formControlName=\"address\"\n                rows=\"3\"\n                placeholder=\"Enter address\"></textarea>\n            </div>\n\n            <!-- Form Actions -->\n            <div class=\"d-flex gap-2\">\n              <button \n                type=\"submit\" \n                class=\"btn btn-primary\"\n                [disabled]=\"userForm.invalid || loading\">\n                <span class=\"spinner-border spinner-border-sm me-2\" *ngIf=\"loading\"></span>\n                {{ loading ? 'Updating...' : 'Update User' }}\n              </button>\n              <button \n                type=\"button\" \n                class=\"btn btn-secondary\"\n                (click)=\"onCancel()\"\n                [disabled]=\"loading\">\n                Cancel\n              </button>\n            </div>\n\n          </form>\n\n        </div>\n      </div>\n    </div>\n  </div>\n</div> ","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { UserService } from '../../services/user.service';\nimport { User } from '../../models/user.model';\n\n@Component({\n  selector: 'app-user-list',\n  templateUrl: './user-list.component.html',\n  styleUrls: ['./user-list.component.css']\n})\nexport class UserListComponent implements OnInit {\n  users: User[] = [];\n  loading = false;\n  errorMessage = '';\n  searchTerm = '';\n  showActiveOnly = false;\n\n  constructor(\n    private userService: UserService,\n    private router: Router\n  ) { }\n\n  ngOnInit(): void {\n    this.loadUsers();\n  }\n\n  loadUsers(): void {\n    this.loading = true;\n    this.errorMessage = '';\n\n    const observable = this.showActiveOnly \n      ? this.userService.getActiveUsers()\n      : this.userService.getAllUsers();\n\n    observable.subscribe({\n      next: (response) => {\n        if (response.success) {\n          this.users = response.data || [];\n        } else {\n          this.errorMessage = response.message;\n        }\n        this.loading = false;\n      },\n      error: (error) => {\n        this.errorMessage = error.error?.message || 'Failed to load users';\n        this.loading = false;\n      }\n    });\n  }\n\n  searchUsers(): void {\n    if (this.searchTerm.trim()) {\n      this.loading = true;\n      this.errorMessage = '';\n\n      this.userService.searchUsersByName(this.searchTerm).subscribe({\n        next: (response) => {\n          if (response.success) {\n            this.users = response.data || [];\n          } else {\n            this.errorMessage = response.message;\n          }\n          this.loading = false;\n        },\n        error: (error) => {\n          this.errorMessage = error.error?.message || 'Failed to search users';\n          this.loading = false;\n        }\n      });\n    } else {\n      this.loadUsers();\n    }\n  }\n\n  toggleActiveFilter(): void {\n    this.showActiveOnly = !this.showActiveOnly;\n    this.loadUsers();\n  }\n\n  deleteUser(userId: number): void {\n    if (confirm('Are you sure you want to delete this user?')) {\n      this.userService.deleteUser(userId).subscribe({\n        next: (response) => {\n          if (response.success) {\n            this.users = this.users.filter(user => user.id !== userId);\n          } else {\n            this.errorMessage = response.message;\n          }\n        },\n        error: (error) => {\n          this.errorMessage = error.error?.message || 'Failed to delete user';\n        }\n      });\n    }\n  }\n\n  deactivateUser(userId: number): void {\n    this.userService.deactivateUser(userId).subscribe({\n      next: (response) => {\n        if (response.success) {\n          this.loadUsers(); // Reload to get updated status\n        } else {\n          this.errorMessage = response.message;\n        }\n      },\n      error: (error) => {\n        this.errorMessage = error.error?.message || 'Failed to deactivate user';\n      }\n    });\n  }\n\n  activateUser(userId: number): void {\n    this.userService.activateUser(userId).subscribe({\n      next: (response) => {\n        if (response.success) {\n          this.loadUsers(); // Reload to get updated status\n        } else {\n          this.errorMessage = response.message;\n        }\n      },\n      error: (error) => {\n        this.errorMessage = error.error?.message || 'Failed to activate user';\n      }\n    });\n  }\n\n  clearSearch(): void {\n    this.searchTerm = '';\n    this.loadUsers();\n  }\n\n  viewUser(userId: number): void {\n    // Navigate to user view page\n    console.log('Navigating to user view for ID:', userId);\n    this.router.navigate(['/users', userId]).then(() => {\n      console.log('Navigation completed');\n    }).catch(err => {\n      console.error('Navigation error:', err);\n    });\n  }\n\n  editUser(userId: number): void {\n    // Navigate to user edit page\n    this.router.navigate(['/users', userId, 'edit']);\n  }\n} ","<div class=\"container mt-4\">\n  <div class=\"row\">\n    <div class=\"col-12\">\n      <div class=\"card shadow\">\n        <div class=\"card-header bg-primary text-white d-flex justify-content-between align-items-center\">\n          <h4 class=\"mb-0\">User Management</h4>\n          <div class=\"d-flex gap-2\">\n            <button class=\"btn btn-light\" routerLink=\"/users/create\">\n              <i class=\"bi bi-plus-circle\"></i> Add New User\n            </button>\n            <button class=\"btn btn-warning\" routerLink=\"/change-password\">\n              <i class=\"bi bi-key\"></i> Change Password\n            </button>\n          </div>\n        </div>\n        <div class=\"card-body\">\n          \n          <!-- Search and Filter Controls -->\n          <div class=\"row mb-3\">\n            <div class=\"col-md-6\">\n              <div class=\"input-group\">\n                <input \n                  type=\"text\" \n                  class=\"form-control\" \n                  placeholder=\"Search users by name...\"\n                  [(ngModel)]=\"searchTerm\"\n                  (keyup.enter)=\"searchUsers()\">\n                <button \n                  class=\"btn btn-outline-secondary\" \n                  type=\"button\"\n                  (click)=\"searchUsers()\">\n                  <i class=\"bi bi-search\"></i> Search\n                </button>\n                <button \n                  class=\"btn btn-outline-secondary\" \n                  type=\"button\"\n                  (click)=\"clearSearch()\"\n                  *ngIf=\"searchTerm\">\n                  <i class=\"bi bi-x-circle\"></i> Clear\n                </button>\n              </div>\n            </div>\n            <div class=\"col-md-6 text-end\">\n              <div class=\"form-check form-switch d-inline-block\">\n                <input \n                  class=\"form-check-input\" \n                  type=\"checkbox\" \n                  id=\"activeFilter\"\n                  [(ngModel)]=\"showActiveOnly\"\n                  (change)=\"toggleActiveFilter()\">\n                <label class=\"form-check-label\" for=\"activeFilter\">\n                  Show Active Users Only\n                </label>\n              </div>\n            </div>\n          </div>\n\n          <!-- Error Message -->\n          <div class=\"alert alert-danger\" *ngIf=\"errorMessage\">\n            {{ errorMessage }}\n          </div>\n\n          <!-- Loading Spinner -->\n          <div class=\"text-center\" *ngIf=\"loading\">\n            <div class=\"spinner-border text-primary\" role=\"status\">\n              <span class=\"visually-hidden\">Loading...</span>\n            </div>\n          </div>\n\n          <!-- Users Table -->\n          <div class=\"table-responsive\" *ngIf=\"!loading\">\n            <table class=\"table table-striped table-hover\">\n              <thead class=\"table-dark\">\n                <tr>\n                  <th>ID</th>\n                  <th>Name</th>\n                  <th>Email</th>\n                  <th>Phone</th>\n                  <th>Address</th>\n                  <th>Status</th>\n                  <th>Created</th>\n                  <th>Actions</th>\n                </tr>\n              </thead>\n              <tbody>\n                <tr *ngFor=\"let user of users\">\n                  <td>{{ user.id }}</td>\n                  <td>{{ user.firstName }} {{ user.lastName }}</td>\n                  <td>{{ user.email }}</td>\n                  <td>{{ user.phoneNumber }}</td>\n                  <td>{{ user.address || 'N/A' }}</td>\n                  <td>\n                    <span \n                      class=\"badge\"\n                      [class]=\"user.isActive ? 'bg-success' : 'bg-danger'\">\n                      {{ user.isActive ? 'Active' : 'Inactive' }}\n                    </span>\n                  </td>\n                  <td>{{ user.createdAt | date:'short' }}</td>\n                  <td>\n                    <div class=\"btn-group\" role=\"group\">\n                      <button \n                        class=\"btn btn-sm btn-outline-primary\"\n                        (click)=\"editUser(user.id!)\"\n                        title=\"Edit\">\n                        <i class=\"bi bi-pencil\"></i>\n                      </button>\n                      <button \n                        class=\"btn btn-sm btn-outline-info\"\n                        (click)=\"viewUser(user.id!)\"\n                        title=\"View\">\n                        <i class=\"bi bi-eye\"></i>\n                      </button>\n                      <button \n                        class=\"btn btn-sm btn-outline-warning\"\n                        (click)=\"user.isActive ? deactivateUser(user.id!) : activateUser(user.id!)\"\n                        [title]=\"user.isActive ? 'Deactivate' : 'Activate'\">\n                        <i class=\"bi\" [class]=\"user.isActive ? 'bi-person-x' : 'bi-person-check'\"></i>\n                      </button>\n                      <button \n                        class=\"btn btn-sm btn-outline-danger\"\n                        (click)=\"deleteUser(user.id!)\"\n                        title=\"Delete\">\n                        <i class=\"bi bi-trash\"></i>\n                      </button>\n                    </div>\n                  </td>\n                </tr>\n                <tr *ngIf=\"users.length === 0\">\n                  <td colspan=\"8\" class=\"text-center text-muted\">\n                    No users found\n                  </td>\n                </tr>\n              </tbody>\n            </table>\n          </div>\n\n          <!-- User Count -->\n          <div class=\"mt-3 text-muted\">\n            Total Users: {{ users.length }}\n          </div>\n\n        </div>\n      </div>\n    </div>\n  </div>\n</div> ","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { UserService } from '../../services/user.service';\nimport { User } from '../../models/user.model';\n\n@Component({\n  selector: 'app-user-view',\n  templateUrl: './user-view.component.html',\n  styleUrls: ['./user-view.component.css']\n})\nexport class UserViewComponent implements OnInit {\n  user: User | null = null;\n  userId: number | null = null;\n  loading = false;\n  errorMessage = '';\n\n  constructor(\n    private userService: UserService,\n    private route: ActivatedRoute,\n    private router: Router\n  ) {}\n\n  ngOnInit(): void {\n    console.log('UserViewComponent initialized');\n    this.route.params.subscribe(params => {\n      this.userId = +params['id'];\n      console.log('User ID from params:', this.userId);\n      if (this.userId) {\n        this.loadUser();\n      }\n    });\n  }\n\n  loadUser(): void {\n    if (!this.userId) return;\n\n    console.log('Loading user with ID:', this.userId);\n    this.loading = true;\n    this.userService.getUserById(this.userId).subscribe({\n      next: (response) => {\n        console.log('User data received:', response);\n        if (response.success && response.data) {\n          this.user = response.data;\n        } else {\n          this.errorMessage = response.message || 'Failed to load user';\n        }\n        this.loading = false;\n      },\n      error: (error) => {\n        console.error('Error loading user:', error);\n        this.errorMessage = error.error?.message || 'Failed to load user';\n        this.loading = false;\n      }\n    });\n  }\n\n  onEdit(): void {\n    if (this.userId) {\n      this.router.navigate(['/users', this.userId, 'edit']);\n    }\n  }\n\n  onBack(): void {\n    this.router.navigate(['/users']);\n  }\n} ","<div class=\"container mt-4\">\n  <div class=\"row justify-content-center\">\n    <div class=\"col-md-8\">\n      <div class=\"card shadow\">\n        <div class=\"card-header bg-info text-white d-flex justify-content-between align-items-center\">\n          <h4 class=\"mb-0\">User Details</h4>\n          <button class=\"btn btn-light\" (click)=\"onBack()\">\n            <i class=\"bi bi-arrow-left\"></i> Back to Users\n          </button>\n        </div>\n        <div class=\"card-body\">\n          \n          <!-- Error Message -->\n          <div class=\"alert alert-danger\" *ngIf=\"errorMessage\">\n            {{ errorMessage }}\n          </div>\n\n          <!-- Loading Spinner -->\n          <div class=\"text-center\" *ngIf=\"loading && !errorMessage\">\n            <div class=\"spinner-border text-primary\" role=\"status\">\n              <span class=\"visually-hidden\">Loading...</span>\n            </div>\n          </div>\n\n          <!-- User Details -->\n          <div *ngIf=\"user && !loading\" class=\"user-details\">\n            \n            <div class=\"row\">\n              <div class=\"col-md-6\">\n                <div class=\"detail-item\">\n                  <label class=\"detail-label\">User ID:</label>\n                  <span class=\"detail-value\">{{ user.id }}</span>\n                </div>\n              </div>\n              <div class=\"col-md-6\">\n                <div class=\"detail-item\">\n                  <label class=\"detail-label\">Status:</label>\n                  <span class=\"detail-value\">\n                    <span class=\"badge\" [class]=\"user.isActive ? 'bg-success' : 'bg-danger'\">\n                      {{ user.isActive ? 'Active' : 'Inactive' }}\n                    </span>\n                  </span>\n                </div>\n              </div>\n            </div>\n\n            <div class=\"row\">\n              <div class=\"col-md-6\">\n                <div class=\"detail-item\">\n                  <label class=\"detail-label\">First Name:</label>\n                  <span class=\"detail-value\">{{ user.firstName }}</span>\n                </div>\n              </div>\n              <div class=\"col-md-6\">\n                <div class=\"detail-item\">\n                  <label class=\"detail-label\">Last Name:</label>\n                  <span class=\"detail-value\">{{ user.lastName }}</span>\n                </div>\n              </div>\n            </div>\n\n            <div class=\"detail-item\">\n              <label class=\"detail-label\">Email:</label>\n              <span class=\"detail-value\">{{ user.email }}</span>\n            </div>\n\n            <div class=\"detail-item\">\n              <label class=\"detail-label\">Phone Number:</label>\n              <span class=\"detail-value\">{{ user.phoneNumber || 'Not provided' }}</span>\n            </div>\n\n            <div class=\"detail-item\">\n              <label class=\"detail-label\">Address:</label>\n              <span class=\"detail-value\">{{ user.address || 'Not provided' }}</span>\n            </div>\n\n            <div class=\"row\">\n              <div class=\"col-md-6\">\n                <div class=\"detail-item\">\n                  <label class=\"detail-label\">Created At:</label>\n                  <span class=\"detail-value\">{{ user.createdAt | date:'medium' }}</span>\n                </div>\n              </div>\n              <div class=\"col-md-6\">\n                <div class=\"detail-item\">\n                  <label class=\"detail-label\">Updated At:</label>\n                  <span class=\"detail-value\">{{ user.updatedAt | date:'medium' }}</span>\n                </div>\n              </div>\n            </div>\n\n            <!-- Action Buttons -->\n            <div class=\"mt-4 d-flex gap-2\">\n              <button \n                class=\"btn btn-primary\"\n                (click)=\"onEdit()\">\n                <i class=\"bi bi-pencil\"></i> Edit User\n              </button>\n              <button \n                class=\"btn btn-secondary\"\n                (click)=\"onBack()\">\n                Back to List\n              </button>\n            </div>\n\n          </div>\n\n        </div>\n      </div>\n    </div>\n  </div>\n</div> ","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { \n  LoginRequest, \n  RegisterRequest, \n  AuthResponse, \n  ForgetPasswordRequest, \n  VerifyOtpRequest, \n  ChangePasswordRequest, \n  ApiResponse \n} from '../models/auth.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  private apiUrl = 'http://localhost:8080/api/auth';\n\n  constructor(private http: HttpClient) { }\n\n  // Register user\n  register(registerRequest: RegisterRequest): Observable<ApiResponse<AuthResponse>> {\n    return this.http.post<ApiResponse<AuthResponse>>(`${this.apiUrl}/register`, registerRequest);\n  }\n\n  // Login user\n  login(loginRequest: LoginRequest): Observable<ApiResponse<AuthResponse>> {\n    return this.http.post<ApiResponse<AuthResponse>>(`${this.apiUrl}/login`, loginRequest);\n  }\n\n  // Logout user\n  logout(usernameOrEmail: string): Observable<ApiResponse<string>> {\n    return this.http.post<ApiResponse<string>>(`${this.apiUrl}/logout?usernameOrEmail=${usernameOrEmail}`, {});\n  }\n\n  // Forget password\n  forgetPassword(forgetPasswordRequest: ForgetPasswordRequest): Observable<ApiResponse<string>> {\n    return this.http.post<ApiResponse<string>>(`${this.apiUrl}/forget-password`, forgetPasswordRequest);\n  }\n\n  // Verify OTP and reset password\n  verifyOtpAndResetPassword(verifyOtpRequest: VerifyOtpRequest): Observable<ApiResponse<string>> {\n    return this.http.post<ApiResponse<string>>(`${this.apiUrl}/verify-otp`, verifyOtpRequest);\n  }\n\n  // Change password\n  changePassword(changePasswordRequest: ChangePasswordRequest): Observable<ApiResponse<string>> {\n    return this.http.post<ApiResponse<string>>(`${this.apiUrl}/change-password`, changePasswordRequest);\n  }\n\n  // Test email\n  testEmail(email: string): Observable<ApiResponse<string>> {\n    return this.http.post<ApiResponse<string>>(`${this.apiUrl}/test-email?email=${email}`, {});\n  }\n\n  // Store user data in localStorage\n  setUserData(userData: AuthResponse): void {\n    localStorage.setItem('userData', JSON.stringify(userData));\n  }\n\n  // Get user data from localStorage\n  getUserData(): AuthResponse | null {\n    const userData = localStorage.getItem('userData');\n    return userData ? JSON.parse(userData) : null;\n  }\n\n  // Clear user data from localStorage\n  clearUserData(): void {\n    localStorage.removeItem('userData');\n  }\n\n  // Check if user is logged in\n  isLoggedIn(): boolean {\n    return this.getUserData() !== null;\n  }\n} ","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { User, UserUpdate, ApiResponse } from '../models/user.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n  private apiUrl = 'http://localhost:8080/api';\n\n  constructor(private http: HttpClient) { }\n\n  // Get all users\n  getAllUsers(): Observable<ApiResponse<User[]>> {\n    return this.http.get<ApiResponse<User[]>>(`${this.apiUrl}/users`);\n  }\n\n  // Get active users\n  getActiveUsers(): Observable<ApiResponse<User[]>> {\n    return this.http.get<ApiResponse<User[]>>(`${this.apiUrl}/users/active`);\n  }\n\n  // Get user by ID\n  getUserById(id: number): Observable<ApiResponse<User>> {\n    return this.http.get<ApiResponse<User>>(`${this.apiUrl}/users/${id}`);\n  }\n\n  // Get user by email\n  getUserByEmail(email: string): Observable<ApiResponse<User>> {\n    return this.http.get<ApiResponse<User>>(`${this.apiUrl}/users/email/${email}`);\n  }\n\n  // Search users by name\n  searchUsersByName(name: string): Observable<ApiResponse<User[]>> {\n    return this.http.get<ApiResponse<User[]>>(`${this.apiUrl}/users/search?name=${name}`);\n  }\n\n  // Create user\n  createUser(user: User): Observable<ApiResponse<User>> {\n    return this.http.post<ApiResponse<User>>(`${this.apiUrl}/users`, user);\n  }\n\n  // Update user\n  updateUser(id: number, userUpdate: UserUpdate): Observable<ApiResponse<User>> {\n    return this.http.put<ApiResponse<User>>(`${this.apiUrl}/users/${id}`, userUpdate);\n  }\n\n  // Delete user\n  deleteUser(id: number): Observable<ApiResponse<string>> {\n    return this.http.delete<ApiResponse<string>>(`${this.apiUrl}/users/${id}`);\n  }\n\n  // Deactivate user\n  deactivateUser(id: number): Observable<ApiResponse<string>> {\n    return this.http.patch<ApiResponse<string>>(`${this.apiUrl}/users/${id}/deactivate`, {});\n  }\n\n  // Activate user\n  activateUser(id: number): Observable<ApiResponse<string>> {\n    return this.http.patch<ApiResponse<string>>(`${this.apiUrl}/users/${id}/activate`, {});\n  }\n\n  // Test endpoint\n  test(): Observable<string> {\n    return this.http.get(`${this.apiUrl}/test`, { responseType: 'text' });\n  }\n} ","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err)); "],"names":["RouterModule","LoginComponent","RegisterComponent","UserListComponent","ForgetPasswordComponent","UserEditComponent","UserViewComponent","UserCreateComponent","ChangePasswordComponent","routes","path","redirectTo","pathMatch","component","AppRoutingModule","forRoot","imports","i1","exports","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵlistener","AppComponent_li_13_Template_a_click_13_listener","ɵɵrestoreView","_r6","ctx_r5","ɵɵnextContext","ɵɵresetView","logout","ɵɵadvance","ɵɵtextInterpolate1","tmp_0_0","ctx_r4","authService","getUserData","username","AppComponent","constructor","title","userData","subscribe","next","clearUserData","window","location","href","error","ɵɵdirectiveInject","AuthService","selectors","decls","vars","consts","template","AppComponent_Template","rf","ctx","ɵɵtemplate","AppComponent_li_8_Template","AppComponent_li_9_Template","AppComponent_li_11_Template","AppComponent_li_12_Template","AppComponent_li_13_Template","ɵɵtextInterpolate","ɵɵproperty","isLoggedIn","BrowserModule","HttpClientModule","FormsModule","ReactiveFormsModule","AppModule","bootstrap","declarations","Validators","ctx_r0","errorMessage","ctx_r1","successMessage","ChangePasswordComponent_div_13_div_6_div_1_Template","ChangePasswordComponent_div_13_div_6_div_2_Template","changePasswordForm","get","errors","tmp_1_0","ChangePasswordComponent_div_13_Template_form_ngSubmit_1_listener","_r9","ctx_r8","onSendOtp","ChangePasswordComponent_div_13_div_6_Template","ChangePasswordComponent_div_13_span_9_Template","ChangePasswordComponent_div_13_Template_button_click_11_listener","ctx_r10","goToUsers","ctx_r2","ɵɵclassProp","invalid","touched","tmp_2_0","isLoading","ChangePasswordComponent_div_14_div_11_div_1_Template","ChangePasswordComponent_div_14_div_11_div_2_Template","ctx_r11","verifyOtpForm","ChangePasswordComponent_div_14_div_16_div_1_Template","ChangePasswordComponent_div_14_div_16_div_2_Template","ctx_r12","ChangePasswordComponent_div_14_div_21_div_1_Template","ctx_r13","ChangePasswordComponent_div_14_Template_form_ngSubmit_6_listener","_r22","ctx_r21","onVerifyOtp","ChangePasswordComponent_div_14_div_11_Template","ChangePasswordComponent_div_14_div_16_Template","ChangePasswordComponent_div_14_div_21_Template","ChangePasswordComponent_div_14_div_22_Template","ChangePasswordComponent_div_14_span_25_Template","ChangePasswordComponent_div_14_Template_button_click_27_listener","ctx_r23","goBack","ChangePasswordComponent_div_14_Template_button_click_29_listener","ctx_r24","resendOtp","ctx_r3","email","tmp_3_0","tmp_4_0","tmp_5_0","tmp_6_0","tmp_7_0","tmp_8_0","fb","router","currentStep","group","required","otp","minLength","maxLength","newPassword","confirmPassword","validators","passwordMatchValidator","form","value","passwordMismatch","valid","forgetPassword","response","success","setTimeout","message","verifyOtpRequest","verifyOtpAndResetPassword","navigate","reset","FormBuilder","i2","i3","Router","ChangePasswordComponent_Template","ChangePasswordComponent_Template_button_click_7_listener","ChangePasswordComponent_div_11_Template","ChangePasswordComponent_div_12_Template","ChangePasswordComponent_div_13_Template","ChangePasswordComponent_div_14_Template","ForgetPasswordComponent_div_9_div_6_div_1_Template","ForgetPasswordComponent_div_9_div_6_div_2_Template","forgetPasswordForm","ForgetPasswordComponent_div_9_Template_form_ngSubmit_1_listener","ForgetPasswordComponent_div_9_div_6_Template","ForgetPasswordComponent_div_9_span_9_Template","ForgetPasswordComponent_div_9_Template_button_click_11_listener","goToLogin","ForgetPasswordComponent_div_10_div_11_div_1_Template","ForgetPasswordComponent_div_10_div_11_div_2_Template","ForgetPasswordComponent_div_10_div_16_div_1_Template","ForgetPasswordComponent_div_10_div_16_div_2_Template","ForgetPasswordComponent_div_10_div_21_div_1_Template","ForgetPasswordComponent_div_10_Template_form_ngSubmit_6_listener","ForgetPasswordComponent_div_10_div_11_Template","ForgetPasswordComponent_div_10_div_16_Template","ForgetPasswordComponent_div_10_div_21_Template","ForgetPasswordComponent_div_10_div_22_Template","ForgetPasswordComponent_div_10_span_25_Template","ForgetPasswordComponent_div_10_Template_button_click_27_listener","ForgetPasswordComponent_div_10_Template_button_click_29_listener","ForgetPasswordComponent_Template","ForgetPasswordComponent_div_7_Template","ForgetPasswordComponent_div_8_Template","ForgetPasswordComponent_div_9_Template","ForgetPasswordComponent_div_10_Template","getErrorMessage","loading","loginForm","usernameOrEmail","password","onSubmit","login","setUserData","data","field","control","hasError","charAt","toUpperCase","slice","LoginComponent_Template","LoginComponent_Template_form_ngSubmit_8_listener","LoginComponent_div_13_Template","LoginComponent_div_18_Template","LoginComponent_div_19_Template","LoginComponent_div_20_Template","LoginComponent_span_23_Template","ctx_r6","ctx_r7","registerForm","firstName","lastName","setErrors","Object","keys","length","register","requiredLength","RegisterComponent_Template","RegisterComponent_Template_form_ngSubmit_8_listener","RegisterComponent_div_14_Template","RegisterComponent_div_19_Template","RegisterComponent_div_25_Template","RegisterComponent_div_30_Template","RegisterComponent_div_36_Template","RegisterComponent_div_41_Template","RegisterComponent_div_42_Template","RegisterComponent_div_43_Template","RegisterComponent_span_46_Template","tmp_9_0","tmp_10_0","tmp_11_0","tmp_12_0","userService","userForm","phoneNumber","address","createUser","onCancel","fieldName","UserService","UserCreateComponent_Template","UserCreateComponent_Template_button_click_7_listener","UserCreateComponent_div_11_Template","UserCreateComponent_div_12_Template","UserCreateComponent_Template_form_ngSubmit_13_listener","UserCreateComponent_div_19_Template","UserCreateComponent_div_24_Template","UserCreateComponent_div_29_Template","UserCreateComponent_div_34_Template","UserCreateComponent_span_41_Template","UserCreateComponent_Template_button_click_43_listener","UserEditComponent_form_14_Template_form_ngSubmit_0_listener","_r10","ctx_r9","UserEditComponent_form_14_div_6_Template","UserEditComponent_form_14_div_11_Template","UserEditComponent_form_14_div_16_Template","UserEditComponent_form_14_div_21_Template","UserEditComponent_form_14_span_28_Template","UserEditComponent_form_14_Template_button_click_30_listener","route","userId","ngOnInit","params","loadUser","getUserById","user","patchValue","updateData","updateUser","ActivatedRoute","UserEditComponent_Template","UserEditComponent_Template_button_click_7_listener","UserEditComponent_div_11_Template","UserEditComponent_div_12_Template","UserEditComponent_div_13_Template","UserEditComponent_form_14_Template","UserListComponent_button_22_Template_button_click_0_listener","_r5","clearSearch","UserListComponent_div_30_tr_21_Template_button_click_19_listener","restoredCtx","user_r8","$implicit","editUser","id","UserListComponent_div_30_tr_21_Template_button_click_21_listener","viewUser","UserListComponent_div_30_tr_21_Template_button_click_23_listener","isActive","deactivateUser","activateUser","UserListComponent_div_30_tr_21_Template_button_click_25_listener","deleteUser","ɵɵtextInterpolate2","ɵɵclassMap","ɵɵpipeBind2","createdAt","UserListComponent_div_30_tr_21_Template","UserListComponent_div_30_tr_22_Template","users","searchTerm","showActiveOnly","loadUsers","observable","getActiveUsers","getAllUsers","searchUsers","trim","searchUsersByName","toggleActiveFilter","confirm","filter","console","log","then","catch","err","UserListComponent_Template","UserListComponent_Template_input_ngModelChange_18_listener","$event","UserListComponent_Template_input_keyup_enter_18_listener","UserListComponent_Template_button_click_19_listener","UserListComponent_button_22_Template","UserListComponent_Template_input_ngModelChange_25_listener","UserListComponent_Template_input_change_25_listener","UserListComponent_div_28_Template","UserListComponent_div_29_Template","UserListComponent_div_30_Template","UserViewComponent_div_13_Template_button_click_59_listener","_r4","onEdit","UserViewComponent_div_13_Template_button_click_62_listener","onBack","updatedAt","UserViewComponent_Template","UserViewComponent_Template_button_click_7_listener","UserViewComponent_div_11_Template","UserViewComponent_div_12_Template","UserViewComponent_div_13_Template","http","apiUrl","registerRequest","post","loginRequest","forgetPasswordRequest","changePassword","changePasswordRequest","testEmail","localStorage","setItem","JSON","stringify","getItem","parse","removeItem","ɵɵinject","HttpClient","factory","ɵfac","providedIn","getUserByEmail","name","userUpdate","put","delete","patch","test","responseType","__NgCli_bootstrap_1","platformBrowser","bootstrapModule"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}